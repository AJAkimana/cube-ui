{"version":3,"sources":["redux/utils/baseStates.js","redux/actions/actionTypes.js","redux/utils/actions.js","redux/utils/reducer.js","redux/reducers/index.js","redux/reducers/user.reducer.js","redux/reducers/project.reducer.js","redux/reducers/quote.reducer.js","redux/reducers/invoice.reducer.js","redux/reducers/subscription.reducer.js","redux/reducers/dashboard.reducer.js","redux/reducers/file.reducer.js","utils/notifier.js","redux/utils/errorHandler.js","redux/store.js","components/dashboard/subscriptions.component.js","components/dashboard/customers.component.js","components/dashboard/count.projects.component.js","components/dashboard/quotes.component.js","utils/constants.js","utils/http.js","redux/actions/project.js","components/loading.component.js","styles/headerStyles.js","redux/actions/user.js","components/AppHeader/NavigationMenu.js","components/AppHeader/MobileMenu.js","utils/helper.js","components/AppHeader/NotificationsMenu.js","redux/actions/dashboard.js","components/AppHeader/AppHeader.js","layouts/dashboard.js","assets/ari_cube.png","pages/set.password.page.js","components/CustomizedTable/styles.js","components/Paginate.js","components/NoDisplayData.js","components/CustomizedTable/CustomizedTable.js","styles/formStyles.js","components/DraftEditor/styles.js","components/DraftEditor/DraftEditor.js","pages/Project/projectConstants.js","pages/Project/ProjectRegistration.js","components/columns/projectColumns.js","components/columns/userColumns.js","components/columns/invoiceColumns.js","components/columns/subscriptionColumns.js","utils/paginate.js","pages/Project/ProjectModal.js","redux/actions/quote.js","pages/Quote/QuoteRegistration.js","components/columns/quoteColumns.js","pages/Quote/QuoteItemsDialog.js","redux/actions/invoice.js","pages/Invoice/InvoiceRegistration.js","pages/Customer/styles.js","pages/Customer/RegistrationSteps.js","pages/Customer/Registration.js","pages/Customer/CustomerModel.js","components/AlertConfirm.js","pages/UserProfile/AccountProfile.js","pages/UserProfile/ConfirmUpdate.js","pages/UserProfile/AccountDetails.js","pages/UserProfile/UserProfile.js","pages/Login/EmailDialog.js","pages/Login/Login.js","pages/Product/productConstants.js","redux/actions/product.js","pages/Product/AttributeEditor/initialStates.js","pages/ProductView/ProductView.js","pages/ProjectDetail/ViewProductDialog.js","pages/ProjectDetail/ProjectDetail.js","pages/Product/ProductRegistraction.js","components/columns/productColumns.js","components/ButtonCounter.js","components/CameraOrbit.js","pages/Product/productStyles.js","pages/Product/AttributeEditor/Scene.js","pages/Product/AttributeEditor/Lighting.js","pages/Product/AttributeEditor/Material.js","pages/Product/AttributeEditor/Annotation.js","pages/Product/AttributeEditor/AREditor.js","pages/Product/AttributeEditor/ManageImages.js","pages/Product/AttributeEditor/Poster.js","pages/Product/AttributeEditor/AddedProducts.js","pages/Product/AttributeEditor/QRCodeViewer.js","pages/Product/AttributeEditor/AttributeEditor.js","pages/Product/ImagePreview.js","pages/Analytics/Analytics.js","routes.js","pages/Customer/Customer.js","pages/Project/Project.js","pages/Product/Product.js","pages/Quote/Quote.js","pages/Invoice/Invoice.js","pages/Subscription/Subscription.js","redux/actions/subscription.js","components/columns/productAnalyticsColumns.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","reportWebVitals.js","index.js"],"names":["baseState","key","value","loading","loaded","USER_SIGNIN","USER_SIGNOUT","USER_LIST","USER_REGISTER","SET_PASSWORD","USER_UPDATE","USER_DELETE","UPDATE_PROFILE","SEND_LINK","RESET_PASSWORD","ADD_NEW_PROJECT","EDIT_PROJECT","GET_PROJECTS","GET_PROJECT_HISTORIES","GET_PROJECT_DETAILS","ADD_NEW_LOG","ADD_PROJECT_PROD","GET_PROJECT_PROD","ADD_NEW_QUOTE","UPDATE_QUOTE","GET_QUOTES","GET_INVOICES","UPDATE_INVOICE","GET_SUBSCRIPTIONS","GET_DASHBOARD_COUNTS","GET_NOTIFICATIONS","GET_NOTIFICATIONS_COUNT","UPLOAD_PRODUCT_IMAGES","ADD_NEW_PRODUCT","GET_PRODUCTS","GET_PRODUCT_IMAGES","UPDATE_PRODUCT","UPDATE_ATTRIBUTES","GET_PRODUCT","UPLOAD_ATTR_IMAGE","RESET_UPLOAD_A_IMAGE","DELETE_ATTR_IMAGE","GENERATE_QR","DELETE_PRODUCT","GET_ANALYTICS","ADD_ANALYTIC","pending","type","fulfilled","rejected","returnData","types","string","object","array","promisedReducer","actionType","dataKey","dataType","clearAtPending","searchKey","state","action","theState","payload","data","combineReducers","login","user","userInfo","register","userList","users","passwordSet","message","projectAdd","projectsGet","projects","projectEdit","quoteAdd","quotesGet","quotes","quoteEdit","invoicesGet","invoices","invoiceEdit","subscriptionsGet","subscriptions","dashboard","counts","userEdit","userRm","profileEdit","linkSend","pwdReset","historiesGet","histories","notifsGet","notifs","notifsCount","count","projectGet","project","logAdd","log","fileUpload","productAdd","productsGet","productImg","productEdit","attrUpdate","productGet","attrImg","fileName","imgAttrDel","projectAddProd","projectProdsGet","analyticsGet","analyticAdd","qrGenerate","qr","productRm","notifier","msg","toast","TYPE","ERROR","position","POSITION","BOTTOM_RIGHT","toastId","DEFAULT","BOTTOM_LEFT","errorHandler","next","isPromise","meta","localError","catch","error","errorMessage","response","apiError","displayMsg","Array","isArray","initialState","localStorage","getItem","JSON","parse","store","preloadedState","isDev","process","middlewares","thunkMiddleware","promise","middlewareEnhancer","composeWithDevTools","applyMiddleware","enhancers","composedEnhancers","compose","createStore","rootReducer","configureStore","Subscriptions","Card","sx","height","CardContent","Grid","container","spacing","justifyContent","item","Typography","color","gutterBottom","variant","Avatar","backgroundColor","red","width","Box","pt","display","alignItems","TotalCustomers","green","TotalProjects","TotalQuotes","USER_INFO","INVOICE_ROUTE","IMAGES_3D_PATH","IMAGES_PATH","BASE_URL","token","http","axios","create","baseURL","headers","Authorization","getProjects","status","clientId","params","dispatch","get","getProjectHistories","projectId","Loading","className","useStyles","makeStyles","theme","grow","flexGrow","appBar","menuButton","marginRight","title","breakpoints","up","search","borderRadius","shape","alpha","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","sectionDesktop","sectionMobile","getUsersList","userRoleType","userUrl","updateProfile","patch","menuId","NavigationMenu","anchorEl","isMenuOpen","handleMenuClose","navigations","link","role","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","map","itemIdx","MenuItem","onClick","component","Link","to","Divider","mobileMenuId","MobileMenu","mobileMoreAnchorEl","isMobileMenuOpen","handleMobileMenuClose","handleNavMenuOpen","notificationsCount","IconButton","Badge","badgeContent","Notifications","Boolean","fullName","AccountCircle","notifUser","notif","name","userRole","createdBy","companyName","toHtml","editorContent","draftToHtml","convertToRaw","getCurrentContent","notificationsMenuId","NotificationsMenu","useSelector","toLink","url","quote","length","notifIdx","ListItem","ListItemText","primary","description","secondary","style","moment","createdAt","fromNow","getNotifications","routeParams","AppHeader","children","classes","React","useState","setAnchorEl","setMobileMoreAnchorEl","notifAnchorEl","setNotifAnchorEl","appState","useEffect","event","currentTarget","AppBar","Toolbar","noWrap","edge","firstName","ExpandMore","countsSize","sizes","Admin","lg","sm","xl","xs","Manager","Client","password","confirmPassword","SetPassword","history","match","credentials","setCredentials","set","setting","setTimeout","replace","onHandleChange","e","preventDefault","target","onSubmit","post","resetPassword","setPassword","src","Logo","alt","htmlFor","placeholder","required","onChange","disabled","useTableStyles","root","row","marginTop","spacer","importButton","exportButton","searchInput","content","tableContent","inner","nameContainer","avatar","actions","typography","button","listStyle","userSelect","active","activeLink","break","breakLink","nextLink","outline","cursor","colors","blueGrey","page","pageLink","text","textAlign","previous","previousLink","Paginate","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","rest","activeClassName","activeLinkClassName","breakClassName","breakLabel","breakLinkClassName","containerClassName","disabledClassName","nextClassName","nextLabel","nextLinkClassName","pageClassName","pageLinkClassName","previousClassName","previousLabel","previousLinkClassName","subContainerClassName","NoDisplayData","align","StyledTableCell","withStyles","head","fontSize","body","TableCell","StyledTableRow","hover","TableRow","CustomisedTable","tableTitle","dataCount","columns","selectedData","withPagination","handlePageChange","size","renderCell","column","_","path","CardHeader","Table","TableHead","columnIdx","label","TableBody","tableRow","selected","indexOf","cellColumn","cellColumnIdx","CardActions","paper","flexDirection","margin","input","form","submit","float","maxWidth","inline","fontFamily","background","border","minWidth","boxShadow","overflowY","shadows","toolbar","marginBottom","borderLeft","borderTop","borderRight","borderBottom","divider","editor","DraftEditor","setEditorState","editorState","editorClassName","onEditorStateChange","options","inDropdown","list","toolbarClassName","wrapperClassName","nOfItems","startDate","format","dueDate","budget","userId","managerId","projectStatuses","projectTypes","ProjectRegistration","currentItem","values","setValues","EditorState","createEmpty","projectState","adding","added","updating","updated","states","manager","contentState","stateFromHTML","createWithContent","ComputerOutlined","toUpperCase","projectInfo","_id","addNewProject","TextField","fullWidth","autoFocus","FormControl","InputLabel","Select","labelId","userIdx","typeIdx","choiceIdx","md","utils","DateFnsUtils","inputVariant","InputAdornmentProps","views","onValueChange","floatValue","prefix","thousandSeparator","customInput","Button","projectOwnerCol","projectColumns","onProjectClick","toLocaleString","ButtonGroup","Tooltip","ViewComfy","Publish","userColumns","onUserClick","invoiceColumns","onInvoiceClick","amount","due_date","rel","href","PrintRounded","subscriptionColumns","billingCycle","expirationDate","paginate","items","pageNumber","pageSize","startIndex","Pages","slice","take","initialPaginate","Transition","forwardRef","props","ref","Slide","direction","ProjectModel","setOpen","setProject","projectType","setProjectType","currentPType","find","useBlogTextInfoContentStyles","buttonStyles","contentStyles","toDowloadUrl","projectHistory","invoice","Dialog","TransitionComponent","DialogTitle","DialogContent","overline","lastName","HtmlParser","List","historyIdx","Accordion","AccordionSummary","expandIcon","AccordionDetails","DialogActions","getQuotes","updateQuote","quoteInfo","quoteId","taxes","discount","isFixed","expiryDate","propasalText","customerNote","customer","taxInitials","quoteCycles","qStatuses","QuoteRegistration","tax","setTax","propTextState","setPropTextState","noteState","setNoteState","quoteState","updatedAt","__v","prev","newValues","onChangeTax","quoteValues","cyle","dateValue","minDate","Date","FormControlLabel","control","Switch","checked","labelPlacement","index","findIndex","i","push","onAddTax","t","tIndex","Edit","taxTitle","newTaxes","filter","onDeleteTax","Cancel","comment","hasExpired","aDate","today","theDate","getTime","quoteColumns","onQuoteClick","amounts","total","initialItem","quantity","price","aggregateInit","subtotal","QuoteItemsDialog","setItem","aggregate","setAggregate","setItems","updateItems","newItems","aggregs","grandTotal","Number","reduce","sum","totDiscount","subTotal","a","b","totTax","toFixed","calculateAggregate","onQuoteUpdate","theItems","onAdd","TableContainer","Paper","colSpan","itemName","onRemove","Delete","rowSpan","Save","ThumbUp","ThumbDown","getInvoices","invoiceStatuses","InvoiceRegistration","invoiceInfo","invoiceId","updateInvoice","backButton","completed","instructions","textAlgin","removeBotton","userRoles","CustomerInfo","autoComplete","companyUrl","ContactInfo","onPhoneChange","email","defaultCountry","countryCodeEditable","phoneNumber","LocationInfo","country","city","postalCode","address","RoleInfo","roleIdx","steps","Registration","setUserInfo","activeStep","setActiveStep","Set","setCompleted","userRegisterState","registering","registered","step","submitHandler","registerUser","updateUser","totalSteps","allStepsCompleted","isStepComplete","has","Container","CssBaseline","Stepper","alternativeLabel","nonLinear","Step","StepButton","prevCompleted","newCompleted","add","prevActiveStep","newActiveStep","CustomerModel","setCustomer","AlertConfirm","onConfirmYes","DialogContentText","details","flexShrink","progress","uploadButton","AccountProfile","locationText","dateText","Intl","DateTimeFormat","resolvedOptions","timeZone","LinearProgress","ConfirmUpdate","onConfirm","AccountDetails","openConfirm","setOpenConfirm","handleChange","noValidate","subheader","helperText","EmailDialog","sku","bgColor","website","image","productStatuses","toOrbitProp","imageProp","theImgOrbitProp","orbitProp","default","useDefault","customAttr","custom","side","ud","toAttributes","skyboxImage","environmentImage","attribs","disableZoom","autoRotate","PRODUCTS_URL","uploadProductImages","files","imageType","otherAttribs","formData","FormData","Object","keys","append","productId","imgType","config","uploadUrl","getProducts","getProduct","addVisit","ancOrigins","document","location","ancestorOrigins","orbits","io","initialStates","autoRotateDelay","cameraOrbit","minCameraOrbit","maxCameraOrbit","cameraTarget","fieldOfView","exposure","shadowIntensity","shadowSoftness","scale","placement","metalness","roughness","arButtonImage","imageFiles","hotspots","ProductViewPage","styles","attributes","setAttributes","product","otherProps","modelViewer","querySelector","addEventListener","ev","material","model","materials","pbrMetallicRoughness","setMetallicFactor","setRoughnessFactor","imagesSrc","glb","usdz","ar","autoplay","slot","addNewAnalytic","hs","hsIdx","dataPosition","dataNormal","dataText","ViewProductDialog","logInitialState","ProductRegistration","setAction","openDz","setOpenDz","uploaded","uploading","filePath","editing","edited","productBody","u","itemNumber","editProduct","projectIdx","rows","rowsMax","onSave","acceptedFiles","showPreviews","maxFileSize","filesLimit","clearOnUnmount","submitButtonText","productColumns","onProductClick","ButtonCounter","attribute","onSetValue","Remove","Add","CameraOrbit","cardTitle","onSetCounterValue","onChangeCheckbox","counterValues","Checkbox","Collapse","in","tabs","Scene","attName","onInputChange","onSliderChange","onChangeColor","onChangeSwitch","defaultValue","floatingLabelText","Slider","min","max","valueLabelDisplay","Lighting","onLightningCheck","onLighteningSelect","shrink","img","imgIdx","imageFileName","CardMedia","Material","Annotation","modelViewRef","currentHotspot","setCurrentHotspot","imageViewer","current","nextNumber","theNum","pop","hotspotNum","onClickHotspot","x","clientX","y","clientY","positionAndNormal","positionAndNormalFromPoint","normal","currentAttributes","newHotspot","toString","theHotspots","removeEventListener","InputLabelProps","idx","theCurrentHotspot","onRemoveHotspot","scales","placements","AREditor","scaleIdx","pl","plIdx","imageTypes","ManageImages","setImgType","deleted","deletedFile","newAttribs","canBeDeleted","splice","cancelButtonText","dialogTitle","dense","ListItemSecondaryAction","imgFile","delete","deleteAttrImg","Poster","onDownloadPoster","posterUrl","jumpCameraToGoal","Promise","resolve","requestAnimationFrame","toBlob","mimeType","idealAspect","blob","URL","createObjectURL","createElement","download","click","AddedProducts","ppFetching","projProds","prod","prodIdx","QRCodeViewer","qrCodeData","bgcolor","entries","pair","encodeURIComponent","join","generateQR","AttributeEditor","activeBtn","setActiveBtn","newValue","orientation","attributesBody","updateAttributes","currentValue","customValues","attributeValues","ImagePreview","useRef","mv","setMv","copied","setCopied","prevAttribs","querySelectorAll","forEach","remove","el","classList","dataset","appendChild","onSelectHotspot","div","textContent","hotspot","onCopy","initialOptions","time","btnFilters","routes","exact","logins","setLogins","openDialog","setOpenDialog","redirect","split","signState","sending","stringify","window","sendLink","signin","route","dashboardState","removeItem","renderRoutes","getState","paginatedUsers","setPaginatedUsers","paginator","setPaginator","setCurrentItem","openView","setOpenView","confirmDel","setConfirmDel","userState","deleting","minHeight","py","deleteUser","Math","ceil","paginatedData","setPaginatedData","openImgView","setOpenImgView","fetching","products","newLog","setNewLog","currentProd","setCurrentProd","openViewProduct","setOpenViewProduct","projectFetching","done","getProjectDetails","ppId","urlWithParams","getProjectProds","logBody","addNewLog","onReset","invoiceState","updatedInfo","reload","setOptions","setTableTitle","analytics","filters","getProdAnalytics","onItemClick","btnIdx","Chip","iOs","androids","desktops","countries","elIdx","black","contrastText","dark","indigo","main","light","blue","success","info","warning","orange","purple","icon","grey","h1","fontWeight","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createTheme","zIndex","drawer","App","createBrowserHistory","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2fe359e.chunk.js","sourcesContent":["/**\n *\n * @param {string} key Key of initial state\n * @param {object} value Its value\n */\nexport const baseState = (key, value) => ({\n\tloading: false,\n\tloaded: false,\n\t[key]: value\n});\n","export const USER_SIGNIN = \"USER_SIGNIN\";\nexport const USER_SIGNOUT = \"USER_SIGNOUT\";\nexport const USER_LIST = \"USER_LIST\";\nexport const USER_REGISTER = \"USER_REGISTER\";\nexport const SET_PASSWORD = \"SET_PASSWORD\";\nexport const USER_UPDATE = \"USER_UPDATE\";\nexport const USER_DELETE = \"USER_DELETE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const SEND_LINK = \"SEND_LINK\";\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\n\nexport const ADD_NEW_PROJECT = \"ADD_NEW_PROJECT\";\nexport const EDIT_PROJECT = \"EDIT_PROJECT\";\nexport const CHANGE_PROJECT_STATUS = \"CHANGE_PROJECT_STATUS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT_HISTORIES = \"GET_PROJECT_HISTORIES\";\nexport const GET_PROJECT_DETAILS = \"GET_PROJECT_DETAILS\";\nexport const ADD_NEW_LOG = \"ADD_NEW_LOG\";\nexport const ADD_PROJECT_PROD = \"ADD_PROJECT_PROD\";\nexport const GET_PROJECT_PROD = \"GET_PROJECT_PROD\";\n\nexport const ADD_NEW_QUOTE = \"ADD_NEW_QUOTA\";\nexport const UPDATE_QUOTE = \"UPDATE_QUOTE\";\nexport const GET_QUOTES = \"GET_QUOTES\";\n\nexport const GET_INVOICES = \"GET_INVOICES\";\nexport const UPDATE_INVOICE = \"UPDATE_INVOICE\";\n\nexport const GET_SUBSCRIPTIONS = \"GET_SUBSCRIPTIONS\";\n\nexport const GET_DASHBOARD_COUNTS = \"GET_DASHBOARD_COUNTS\";\nexport const GET_NOTIFICATIONS = \"GET_NOTIFICATIONS\";\nexport const GET_NOTIFICATIONS_COUNT = \"GET_NOTIFICATIONS_COUNT\";\nexport const SET_NOTIFICATION_READ = \"SET_NOTIFICATION_READ\";\n\nexport const UPLOAD_PRODUCT_IMAGES = \"UPLOAD_PRODUCT_IMAGES\";\nexport const ADD_NEW_PRODUCT = \"ADD_NEW_PRODUCT\";\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\nexport const GET_PRODUCT_IMAGES = \"GET_PRODUCT_IMAGES\";\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\nexport const UPDATE_ATTRIBUTES = \"UPDATE_ATTRIBUTES\";\nexport const GET_PRODUCT = \"GET_PRODUCT\";\nexport const UPLOAD_ATTR_IMAGE = \"UPLOAD_ATTR_IMAGE\";\nexport const RESET_UPLOAD_A_IMAGE = \"RESET_UPLOAD_A_IMAGE\";\nexport const DELETE_ATTR_IMAGE = \"DELETE_ATTR_IMAGE\";\nexport const GENERATE_QR = \"GENERATE_QR\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\n\nexport const GET_ANALYTICS = \"GET_ANALYTICS\";\nexport const ADD_ANALYTIC = \"ADD_ANALYTIC\";\n","export const pending = (type) => `${type}_PENDING`;\nexport const fulfilled = (type) => `${type}_FULFILLED`;\nexport const rejected = (type) => `${type}_REJECTED`;\n","import { pending, fulfilled, rejected } from \"./actions\";\nimport { baseState } from \"./baseStates\";\n\nconst returnData = (type = \"string\") => {\n  const types = {\n    string: \"\",\n    object: {},\n    array: [],\n  };\n  return types[type];\n};\n\n/**\n *\n * @param {String} actionType\n * @param {String} dataKey\n * @param {String} dataType\n * @param {Boolean} clearAtPending\n * @param {String} searchKey The key that holds data\n * @returns {Object} state\n */\nexport const promisedReducer =\n  (\n    actionType = \"\",\n    dataKey = \"state\",\n    dataType = \"string\",\n    clearAtPending = false,\n    searchKey = \"data\"\n  ) =>\n  (state = baseState(dataKey, returnData(dataType)), action) => {\n    switch (action.type) {\n      case pending(actionType):\n        let theState = { ...state, loaded: false, loading: true };\n        if (clearAtPending) {\n          theState = { ...theState, [dataKey]: returnData(dataType) };\n        }\n        return theState;\n      case fulfilled(actionType):\n        return {\n          ...state,\n          loading: false,\n          loaded: true,\n          [dataKey]: action.payload.data[searchKey],\n        };\n      case rejected(actionType):\n      default:\n        return {\n          ...state,\n          loading: false,\n        };\n    }\n  };\n","import { combineReducers } from \"redux\";\nimport { notifsCountReducer, notifsGetReducer } from \"./dashboard.reducer\";\nimport { invoiceEditReducer, invoicesGetReducer } from \"./invoice.reducer\";\nimport {\n  dashboardReducer,\n  historiesGetReducer,\n  logAddReducer,\n  projectAddReducer,\n  projectEditReducer,\n  projectGetReducer,\n  projectsGetReducer,\n} from \"./project.reducer\";\nimport {\n  quoteAddReducer,\n  quoteEditReducer,\n  quotesGetReducer,\n} from \"./quote.reducer\";\nimport { subscriptionsGetReducer } from \"./subscription.reducer\";\nimport { promisedReducer } from \"../utils/reducer\";\nimport {\n  loginReducer,\n  profileEditReducer,\n  registerReducer,\n  resetPasswordReducer,\n  sendLinkReducer,\n  setPasswordReducer,\n  userDeleteReducer,\n  userEditReducer,\n  usersListReducer,\n} from \"./user.reducer\";\nimport {\n  ADD_ANALYTIC,\n  ADD_NEW_PRODUCT,\n  ADD_PROJECT_PROD,\n  DELETE_ATTR_IMAGE,\n  DELETE_PRODUCT,\n  GET_ANALYTICS,\n  GET_PRODUCT,\n  GET_PRODUCTS,\n  GET_PRODUCT_IMAGES,\n  GET_PROJECT_PROD,\n  UPDATE_ATTRIBUTES,\n  UPDATE_PRODUCT,\n  UPLOAD_PRODUCT_IMAGES,\n} from \"redux/actions/actionTypes\";\nimport { attrImageReducer, qrCodeGeneratorReducer } from \"./file.reducer\";\n\nexport default combineReducers({\n  login: loginReducer,\n  register: registerReducer,\n  userList: usersListReducer,\n  passwordSet: setPasswordReducer,\n  projectAdd: projectAddReducer,\n  projectsGet: projectsGetReducer,\n  projectEdit: projectEditReducer,\n  quoteAdd: quoteAddReducer,\n  quotesGet: quotesGetReducer,\n  quoteEdit: quoteEditReducer,\n  invoicesGet: invoicesGetReducer,\n  invoiceEdit: invoiceEditReducer,\n  subscriptionsGet: subscriptionsGetReducer,\n  dashboard: dashboardReducer,\n  userEdit: userEditReducer,\n  userRm: userDeleteReducer,\n  profileEdit: profileEditReducer,\n  linkSend: sendLinkReducer,\n  pwdReset: resetPasswordReducer,\n  historiesGet: historiesGetReducer,\n  notifsGet: notifsGetReducer,\n  notifsCount: notifsCountReducer,\n  projectGet: projectGetReducer,\n  logAdd: logAddReducer,\n  fileUpload: promisedReducer(UPLOAD_PRODUCT_IMAGES, \"filePath\", \"string\"),\n  productAdd: promisedReducer(ADD_NEW_PRODUCT, \"product\", \"object\"),\n  productsGet: promisedReducer(GET_PRODUCTS, \"products\", \"array\"),\n  productImg: promisedReducer(GET_PRODUCT_IMAGES, \"image\", \"object\"),\n  productEdit: promisedReducer(UPDATE_PRODUCT, \"message\", \"string\"),\n  attrUpdate: promisedReducer(UPDATE_ATTRIBUTES, \"message\", \"string\"),\n  productGet: promisedReducer(GET_PRODUCT, \"product\", \"object\", true),\n  attrImg: attrImageReducer,\n  imgAttrDel: promisedReducer(DELETE_ATTR_IMAGE, \"deletedFile\", \"string\"),\n  projectAddProd: promisedReducer(ADD_PROJECT_PROD, \"message\", \"string\", true),\n  projectProdsGet: promisedReducer(GET_PROJECT_PROD, \"projProds\", \"array\"),\n  analyticsGet: promisedReducer(GET_ANALYTICS, \"analytics\", \"array\"),\n  analyticAdd: promisedReducer(ADD_ANALYTIC, \"analytic\", \"object\", true),\n  qrGenerate: qrCodeGeneratorReducer,\n  productRm: promisedReducer(DELETE_PRODUCT, \"message\", \"string\", true),\n});\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  USER_REGISTER,\n  USER_SIGNIN,\n  USER_LIST,\n  SET_PASSWORD,\n  USER_SIGNOUT,\n  USER_UPDATE,\n  USER_DELETE,\n  UPDATE_PROFILE,\n  RESET_PASSWORD,\n  SEND_LINK,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const loginReducer = (\n  state = baseState(\"userInfo\", { user: {} }),\n  action\n) => {\n  switch (action.type) {\n    case pending(USER_SIGNIN): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_SIGNIN): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        userInfo: action.payload.data.data,\n      };\n    }\n    case USER_SIGNOUT: {\n      return {\n        ...state,\n        loaded: false,\n        userInfo: { user: {} },\n      };\n    }\n    case rejected(USER_SIGNIN):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const registerReducer = (state = baseState(\"userInfo\", {}), action) => {\n  switch (action.type) {\n    case pending(USER_REGISTER): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_REGISTER): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        userInfo: action.payload.data.data,\n      };\n    }\n    case rejected(USER_REGISTER):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const usersListReducer = (state = baseState(\"users\", []), action) => {\n  switch (action.type) {\n    case pending(USER_LIST): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_LIST): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        users: action.payload.data.data,\n      };\n    }\n    case rejected(USER_LIST):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const setPasswordReducer = (\n  state = baseState(\"message\", \"\"),\n  action\n) => {\n  switch (action.type) {\n    case pending(SET_PASSWORD): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(SET_PASSWORD): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(SET_PASSWORD):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const userEditReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(USER_UPDATE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_UPDATE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: action.payload.data.message,\n      };\n    }\n    case rejected(USER_UPDATE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const userDeleteReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(USER_DELETE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_DELETE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: action.payload.data.message,\n      };\n    }\n    case rejected(USER_DELETE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const profileEditReducer = (\n  state = baseState(\"userInfo\", { user: {} }),\n  action\n) => {\n  switch (action.type) {\n    case pending(UPDATE_PROFILE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(UPDATE_PROFILE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        userInfo: action.payload.data.data,\n      };\n    }\n    case rejected(UPDATE_PROFILE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const sendLinkReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(SEND_LINK): {\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    }\n    case fulfilled(SEND_LINK): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(SEND_LINK):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const resetPasswordReducer = (\n  state = baseState(\"message\", \"\"),\n  action\n) => {\n  switch (action.type) {\n    case pending(RESET_PASSWORD): {\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    }\n    case fulfilled(RESET_PASSWORD): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(RESET_PASSWORD):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  ADD_NEW_LOG,\n  ADD_NEW_PROJECT,\n  EDIT_PROJECT,\n  GET_DASHBOARD_COUNTS,\n  GET_PROJECTS,\n  GET_PROJECT_DETAILS,\n  GET_PROJECT_HISTORIES,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const projectAddReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(ADD_NEW_PROJECT): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(ADD_NEW_PROJECT): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(ADD_NEW_PROJECT):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const projectEditReducer = (\n  state = baseState(\"message\", \"\"),\n  action\n) => {\n  switch (action.type) {\n    case pending(EDIT_PROJECT): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(EDIT_PROJECT): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(EDIT_PROJECT):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const projectsGetReducer = (\n  state = baseState(\"projects\", []),\n  action\n) => {\n  switch (action.type) {\n    case pending(GET_PROJECTS): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_PROJECTS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        projects: action.payload.data.data,\n      };\n    }\n    case rejected(GET_PROJECTS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const dashboardReducer = (state = baseState(\"counts\", {}), action) => {\n  switch (action.type) {\n    case pending(GET_DASHBOARD_COUNTS): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_DASHBOARD_COUNTS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        counts: action.payload.data.data,\n      };\n    }\n    case rejected(GET_DASHBOARD_COUNTS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const historiesGetReducer = (\n  state = baseState(\"histories\", []),\n  action\n) => {\n  switch (action.type) {\n    case pending(GET_PROJECT_HISTORIES): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_PROJECT_HISTORIES): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        histories: action.payload.data.data,\n      };\n    }\n    case rejected(GET_PROJECT_HISTORIES):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const projectGetReducer = (state = baseState(\"project\", {}), action) => {\n  switch (action.type) {\n    case pending(GET_PROJECT_DETAILS): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_PROJECT_DETAILS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        project: action.payload.data.data,\n      };\n    }\n    case rejected(GET_PROJECT_DETAILS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const logAddReducer = (state = baseState(\"log\", {}), action) => {\n  switch (action.type) {\n    case pending(ADD_NEW_LOG): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(ADD_NEW_LOG): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        log: action.payload.data.data,\n      };\n    }\n    case rejected(ADD_NEW_LOG):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  ADD_NEW_QUOTE,\n  UPDATE_QUOTE,\n  GET_QUOTES,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const quoteAddReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(ADD_NEW_QUOTE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(ADD_NEW_QUOTE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(ADD_NEW_QUOTE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const quoteEditReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(UPDATE_QUOTE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(UPDATE_QUOTE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(UPDATE_QUOTE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const quotesGetReducer = (state = baseState(\"quotes\", []), action) => {\n  switch (action.type) {\n    case pending(GET_QUOTES): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_QUOTES): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        quotes: action.payload.data.data,\n      };\n    }\n    case rejected(GET_QUOTES):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport { UPDATE_INVOICE, GET_INVOICES } from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const invoiceEditReducer = (\n  state = baseState(\"message\", \"\"),\n  action\n) => {\n  switch (action.type) {\n    case pending(UPDATE_INVOICE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(UPDATE_INVOICE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(UPDATE_INVOICE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const invoicesGetReducer = (\n  state = baseState(\"invoices\", []),\n  action\n) => {\n  switch (action.type) {\n    case pending(GET_INVOICES): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_INVOICES): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        invoices: action.payload.data.data,\n      };\n    }\n    case rejected(GET_INVOICES):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport { GET_SUBSCRIPTIONS } from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const subscriptionsGetReducer = (\n  state = baseState(\"subscriptions\", []),\n  action\n) => {\n  switch (action.type) {\n    case pending(GET_SUBSCRIPTIONS): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_SUBSCRIPTIONS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        subscriptions: action.payload.data.data,\n      };\n    }\n    case rejected(GET_SUBSCRIPTIONS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  GET_NOTIFICATIONS,\n  GET_NOTIFICATIONS_COUNT,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const notifsGetReducer = (state = baseState(\"notifs\", []), action) => {\n  switch (action.type) {\n    case pending(GET_NOTIFICATIONS): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_NOTIFICATIONS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        notifs: action.payload.data.data,\n      };\n    }\n    case rejected(GET_NOTIFICATIONS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const notifsCountReducer = (state = baseState(\"count\", 0), action) => {\n  switch (action.type) {\n    case pending(GET_NOTIFICATIONS_COUNT): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_NOTIFICATIONS_COUNT): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        count: action.payload.data.data,\n      };\n    }\n    case rejected(GET_NOTIFICATIONS_COUNT):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  UPLOAD_ATTR_IMAGE,\n  RESET_UPLOAD_A_IMAGE,\n  GENERATE_QR,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const attrImageReducer = (state = baseState(\"fileName\", \"\"), action) => {\n  switch (action.type) {\n    case pending(UPLOAD_ATTR_IMAGE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(UPLOAD_ATTR_IMAGE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        fileName: action.payload.data.data,\n      };\n    }\n    case RESET_UPLOAD_A_IMAGE:\n      return {\n        ...state,\n        loaded: false,\n        fileName: \"\",\n      };\n    case rejected(UPLOAD_ATTR_IMAGE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const qrCodeGeneratorReducer = (state = baseState(\"qr\", \"\"), action) => {\n  switch (action.type) {\n    case GENERATE_QR: {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        qr: action.payload,\n      };\n    }\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { toast } from 'react-toastify';\n\nconst messageId = 13;\nexport const notifier = {\n\terror: (msg) =>\n\t\ttoast(msg, {\n\t\t\ttype: toast.TYPE.ERROR,\n\t\t\tposition: toast.POSITION.BOTTOM_RIGHT,\n\t\t\ttoastId: messageId\n\t\t}),\n\tsuccess: (msg) =>\n\t\ttoast(msg, {\n\t\t\ttype: toast.TYPE.DEFAULT,\n\t\t\tposition: toast.POSITION.BOTTOM_LEFT,\n\t\t\ttoastId: messageId\n\t\t})\n};\n","import isPromise from 'is-promise';\nimport { notifier } from '../../utils/notifier';\n\nexport const errorHandler = () => {\n\treturn (next) => (action) => {\n\t\tif (!isPromise(action.payload)) {\n\t\t\treturn next(action);\n\t\t}\n\n\t\tif (!action.meta || !action.meta.localError) {\n\t\t\treturn next(action).catch((error) => {\n\t\t\t\tlet errorMessage = '';\n\t\t\t\tif (error.response) {\n\t\t\t\t\tconst { error: apiError, message } = error.response.data;\n\t\t\t\t\terrorMessage = apiError || message;\n\t\t\t\t} else {\n\t\t\t\t\terrorMessage = error.message;\n\t\t\t\t}\n\t\t\t\tconst displayMsg = Array.isArray(errorMessage)\n\t\t\t\t\t? errorMessage[0]\n\t\t\t\t\t: errorMessage;\n\t\t\t\tnotifier.error(displayMsg);\n\t\t\t});\n\t\t}\n\n\t\treturn next(action);\n\t};\n};\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport promise from \"redux-promise-middleware\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootReducer from \"./reducers\";\nimport { errorHandler } from \"./utils\";\n\nconst initialState = {\n  login: {\n    userInfo: localStorage.getItem(\"userInfo\")\n      ? JSON.parse(localStorage.getItem(\"userInfo\"))\n      : { user: {} },\n  },\n};\nconst configureStore = (preloadedState = initialState) => {\n  const isDev = process.env.NODE_ENV === \"development\";\n  const middlewares = [errorHandler, thunkMiddleware, promise]; // loggerMiddleware\n\n  const middlewareEnhancer = isDev\n    ? composeWithDevTools(applyMiddleware(...middlewares))\n    : applyMiddleware(...middlewares);\n  // const middlewareEnhancer = composeWithDevTools(\n  //   applyMiddleware(...middlewares)\n  // );\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = compose(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  return store;\n};\nexport const store = configureStore();\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport MoneyIcon from \"@material-ui/icons/Money\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst Subscriptions = ({ counts }) => (\n  <Card sx={{ height: \"100%\" }}>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            Subscriptions\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {counts}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: red[600],\n              height: 56,\n              width: 56,\n            }}\n          >\n            <MoneyIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          pt: 2,\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      ></Box>\n    </CardContent>\n  </Card>\n);\n\nexport default Subscriptions;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport PeopleIcon from \"@material-ui/icons/PeopleOutlined\";\n\nconst TotalCustomers = ({ counts }) => (\n  <Card>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            TOTAL CUSTOMERS\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {counts}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: green[600],\n              height: 56,\n              width: 56,\n            }}\n          >\n            <PeopleIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: \"center\",\n          display: \"flex\",\n          pt: 2,\n        }}\n      ></Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalCustomers;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst TotalProjects = ({ counts }) => (\n  <Card>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            TOTAL PROJECTS\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {counts}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: green[600],\n              height: 56,\n              width: 56,\n            }}\n          ></Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: \"center\",\n          display: \"flex\",\n          pt: 2,\n        }}\n      ></Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalProjects;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport PeopleIcon from \"@material-ui/icons/PeopleOutlined\";\n\nconst TotalQuotes = ({ counts }) => (\n  <Card>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            TOTAL PROPOSALS\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {counts}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: green[600],\n              height: 56,\n              width: 56,\n            }}\n          >\n            <PeopleIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: \"center\",\n          display: \"flex\",\n          pt: 2,\n        }}\n      ></Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalQuotes;\n","export const USER_INFO = \"userInfo\";\nexport const INVOICE_ROUTE = `${process.env.REACT_APP_API_URL}api/v1/invoice`;\nexport const IMAGES_3D_PATH = `${process.env.REACT_APP_API_URL}api/v1/files`;\nexport const IMAGES_PATH = `${process.env.REACT_APP_API_URL}api/v1/images/`;\nexport const BASE_URL = process.env.REACT_APP_FRONTEND_URL;\n","import axios from \"axios\";\nimport { USER_INFO } from \"./constants\";\n\nlet user = JSON.parse(localStorage.getItem(USER_INFO));\nlet token = \"\";\nif (user) {\n  token = user.token;\n}\n\nexport const http = axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}api/v1`,\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n});\nexport const qrCodeHttp = axios.create({\n  baseURL: process.env.REACT_APP_QR_URL,\n});\n","import { store } from \"../store\";\nimport {\n  ADD_NEW_PROJECT,\n  EDIT_PROJECT,\n  GET_DASHBOARD_COUNTS,\n  GET_PROJECT_HISTORIES,\n  GET_PROJECTS,\n  GET_PROJECT_DETAILS,\n  ADD_NEW_LOG,\n  ADD_PROJECT_PROD,\n  GET_PROJECT_PROD,\n} from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nconst BASE_URL = \"/project/\";\nexport const addNewProject = (projectInfo) => {\n  store.dispatch({\n    type: ADD_NEW_PROJECT,\n    payload: http.post(BASE_URL, projectInfo),\n  });\n};\nexport const getProjects = ({ status, clientId }) => {\n  let params = \"\";\n  if (status) {\n    params += `status=${status}&`;\n  }\n  if (clientId) {\n    params += `client=${clientId}&`;\n  }\n  store.dispatch({\n    type: GET_PROJECTS,\n    payload: http.get(`${BASE_URL}?${params}`),\n  });\n};\nexport const updateProject = (projectInfo, projectId) => {\n  store.dispatch({\n    type: EDIT_PROJECT,\n    payload: http.patch(BASE_URL + projectId, projectInfo),\n  });\n};\nexport const getDashboardCounts = () => {\n  store.dispatch({\n    type: GET_DASHBOARD_COUNTS,\n    payload: http.get(\"/home/dashboard\"),\n  });\n};\nexport const getProjectHistories = (projectId = \"\") => {\n  store.dispatch({\n    type: GET_PROJECT_HISTORIES,\n    payload: http.get(`${BASE_URL + projectId}/histories`),\n  });\n};\nexport const getProjectDetails = (projectId = \"\") => {\n  store.dispatch({\n    type: GET_PROJECT_DETAILS,\n    payload: http.get(BASE_URL + projectId),\n  });\n};\nexport const addNewLog = (projectId = \"\", logBody = {}) => {\n  store.dispatch({\n    type: ADD_NEW_LOG,\n    payload: http.post(`${BASE_URL + projectId}/histories`, logBody),\n  });\n};\nexport const addProjectProd = (newProduct = {}) => {\n  const { projectId, ...rest } = newProduct;\n  store.dispatch({\n    type: ADD_PROJECT_PROD,\n    payload: http.post(`${BASE_URL + projectId}/products`, rest),\n  });\n};\nexport const getProjectProds = (ppId, type = \"project\") => {\n  let urlWithParams = `${BASE_URL + ppId}/products`;\n  urlWithParams += `?type=${type}`;\n  store.dispatch({\n    type: GET_PROJECT_PROD,\n    payload: http.get(urlWithParams),\n  });\n};\n","import React from 'react';\n\nexport const Loading = () => {\n\treturn (\n\t\t<div className='loading text-center'>\n\t\t\t<i className='fa fa-spinner fa-spin'></i> Loading...\n\t\t</div>\n\t);\n};\nexport default Loading;\n","import { alpha, makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"#8967fc\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n","import { store } from \"../store\";\nimport {\n  RESET_PASSWORD,\n  SEND_LINK,\n  SET_PASSWORD,\n  UPDATE_PROFILE,\n  USER_DELETE,\n  USER_LIST,\n  USER_REGISTER,\n  USER_SIGNIN,\n  USER_SIGNOUT,\n  USER_UPDATE,\n} from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const signin = (userInfo) => {\n  store.dispatch({\n    type: USER_SIGNIN,\n    payload: http.post(\"/auth/login\", userInfo),\n  });\n};\nexport const registerUser = (userInfo) => {\n  store.dispatch({\n    type: USER_REGISTER,\n    payload: http.post(\"/user/register\", userInfo),\n  });\n};\nexport const signout = () => {\n  store.dispatch({ type: USER_SIGNOUT });\n};\n\nexport const getUsersList = (userRoleType = \"\") => {\n  let userUrl = \"/auth/users\";\n  if (userRoleType) {\n    userUrl += `?role=${userRoleType}`;\n  }\n  store.dispatch({\n    type: USER_LIST,\n    payload: http.get(userUrl),\n  });\n};\nexport const setPassword = (credentials) => {\n  store.dispatch({\n    type: SET_PASSWORD,\n    payload: http.patch(\"/auth/set-password\", credentials),\n  });\n};\nexport const updateUser = (userInfo) => {\n  const { _id: userId, ...rest } = userInfo;\n  store.dispatch({\n    type: USER_UPDATE,\n    payload: http.patch(`/auth/users/${userId}`, rest),\n  });\n};\nexport const deleteUser = (userId = \"\") => {\n  store.dispatch({\n    type: USER_DELETE,\n    payload: http.delete(`/auth/users/${userId}`),\n  });\n};\nexport const updateProfile = (userInfo) => {\n  store.dispatch({\n    type: UPDATE_PROFILE,\n    payload: http.patch(`/auth/edit-profile`, userInfo),\n  });\n};\nexport const sendLink = (email = \"\") => {\n  store.dispatch({\n    type: SEND_LINK,\n    payload: http.post(\"/auth/send-reset-link\", { email }),\n  });\n};\nexport const resetPassword = (credentials) => {\n  store.dispatch({\n    type: RESET_PASSWORD,\n    payload: http.post(\"/auth/reset-password\", credentials),\n  });\n};\n","import React from \"react\";\nimport { MenuItem, Menu, Divider } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { signout } from \"redux/actions/user\";\n\nexport const menuId = \"primary-search-account-menu\";\n\nexport const NavigationMenu = ({\n  anchorEl,\n  isMenuOpen,\n  handleMenuClose,\n  user,\n}) => {\n  let navigations = [\n    { link: \"analytics\", title: \"Analytics\" },\n    { link: \"products\", title: \"3D assets\" },\n    { link: \"projects\", title: \"Projects\" },\n    { link: \"quotes\", title: \"Proposals\" },\n    { link: \"invoices\", title: \"Invoices\" },\n    { link: \"subscriptions\", title: \"Subscriptions\" },\n    { link: \"profile\", title: \"My profile\" },\n  ];\n  if (user && user.role !== \"Client\") {\n    navigations = [{ link: \"customers\", title: \"Customers\" }, ...navigations];\n  }\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {navigations.map((item, itemIdx) => (\n        <MenuItem\n          onClick={handleMenuClose}\n          component={Link}\n          to={`/dashboard/${item.link}`}\n          key={itemIdx}\n        >\n          {item.title}\n        </MenuItem>\n      ))}\n      <Divider />\n      <MenuItem onClick={() => signout()}>Sign Out</MenuItem>\n    </Menu>\n  );\n};\n","import React from \"react\";\nimport { IconButton, Badge, MenuItem, Menu } from \"@material-ui/core\";\nimport {\n  AccountCircle,\n  Notifications as NotificationsIcon,\n} from \"@material-ui/icons\";\n\nexport const mobileMenuId = \"primary-search-account-menu-mobile\";\nexport const MobileMenu = ({\n  mobileMoreAnchorEl,\n  isMobileMenuOpen,\n  handleMobileMenuClose,\n  handleNavMenuOpen,\n  user,\n  notificationsCount = 0,\n}) => (\n  <Menu\n    anchorEl={mobileMoreAnchorEl}\n    anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n    id={mobileMenuId}\n    keepMounted\n    transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n    open={isMobileMenuOpen}\n    onClose={handleMobileMenuClose}\n  >\n    <MenuItem>\n      <IconButton\n        aria-label={`show ${notificationsCount} new notifications`}\n        color=\"inherit\"\n        aria-controls=\"notifications-menu\"\n        aria-haspopup=\"true\"\n      >\n        <Badge badgeContent={notificationsCount} color=\"secondary\">\n          <NotificationsIcon />\n        </Badge>\n      </IconButton>\n      <p>Notifications</p>\n    </MenuItem>\n    {Boolean(user?.fullName) && (\n      <MenuItem onClick={handleNavMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>{user.fullName}</p>\n      </MenuItem>\n    )}\n  </Menu>\n);\n","import { convertToRaw } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\n\nexport const notifUser = (user = {}, notif = {}) => {\n  let name = \"You\";\n  if (user.role === notif.userRole) {\n    return name;\n  }\n  if (user.role === \"Client\") {\n    return `${notif.createdBy?.fullName}[${notif.userRole}]`;\n  } else {\n    return notif.createdBy?.companyName;\n  }\n};\n\nexport const toHtml = (editorContent) => {\n  return draftToHtml(convertToRaw(editorContent?.getCurrentContent()));\n};\n","import React from \"react\";\nimport {\n  ListItem,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\nimport { Link } from \"react-router-dom\";\nimport { notifUser } from \"utils/helper\";\n\nexport const notificationsMenuId = \"notifications-menu\";\n\nexport const NotificationsMenu = ({ anchorEl, onClose, user }) => {\n  const appState = useSelector((state) => state);\n  const {\n    notifsGet: { notifs, loading },\n  } = appState;\n  const toLink = (notif = {}) => {\n    let url = `/dashboard/projects/${notif.project}`;\n    if (notif.quote) {\n      url = \"/dashboard/quotes\";\n    }\n    return url;\n  };\n  return (\n    <Menu\n      id={notificationsMenuId}\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={onClose}\n    >\n      {loading ? (\n        <Loading />\n      ) : notifs.length ? (\n        notifs.map((notif, notifIdx) => (\n          <MenuItem\n            onClick={onClose}\n            key={notifIdx}\n            component={Link}\n            to={toLink(notif)}\n          >\n            <ListItem alignItems=\"flex-start\">\n              <ListItemText\n                primary={notif.description}\n                secondary={\n                  <>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      style={{ display: \"inline\" }}\n                      color=\"textPrimary\"\n                    >\n                      ({notifUser(user, notif)})\n                    </Typography>\n                    {` — ${moment(notif.createdAt).fromNow()}`}\n                  </>\n                }\n              />\n            </ListItem>\n          </MenuItem>\n        ))\n      ) : (\n        <MenuItem onClick={onClose}> No new notification</MenuItem>\n      )}\n    </Menu>\n  );\n};\n","import { store } from \"redux/store\";\nimport { GET_NOTIFICATIONS, GET_NOTIFICATIONS_COUNT } from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const getNotifications = (type = \"\") => {\n  let routeParams = \"notifications\";\n  let actionType = GET_NOTIFICATIONS;\n  if (type !== \"\") {\n    routeParams += \"?type=count\";\n    actionType = GET_NOTIFICATIONS_COUNT;\n  }\n  store.dispatch({\n    type: actionType,\n    payload: http.get(`/home/${routeParams}`),\n  });\n};\n","import React, { useEffect } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Badge,\n} from \"@material-ui/core\";\nimport {\n  AccountCircle,\n  Notifications as NotificationsIcon,\n  MoreVert as MoreIcon,\n  ExpandMore as ExpandMoreIcon,\n} from \"@material-ui/icons\";\nimport { useStyles } from \"styles/headerStyles\";\nimport { menuId, NavigationMenu } from \"./NavigationMenu\";\nimport { MobileMenu, mobileMenuId } from \"./MobileMenu\";\nimport { useSelector } from \"react-redux\";\nimport { NotificationsMenu, notificationsMenuId } from \"./NotificationsMenu\";\nimport { getNotifications } from \"redux/actions/dashboard\";\n\nexport const AppHeader = ({ children }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [notifAnchorEl, setNotifAnchorEl] = React.useState(null);\n\n  const appState = useSelector((state) => state);\n  const {\n    login: {\n      userInfo: { user },\n    },\n    notifsCount: { count },\n  } = appState;\n\n  useEffect(() => {\n    getNotifications(\"count\");\n  }, []);\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleNavMenuOpen = (event) => {\n    setMobileMoreAnchorEl(null);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const showNotifications = ({ currentTarget }) => {\n    setNotifAnchorEl(currentTarget);\n    getNotifications();\n  };\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          {/* <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton> */}\n          <Typography\n            className={classes.title}\n            variant=\"h4\"\n            color=\"inherit\"\n            noWrap\n          >\n            Augmented Reality Innovations\n          </Typography>\n          <div className={classes.grow} />\n          {Boolean(user?.fullName) && (\n            <div className={classes.sectionDesktop}>\n              <IconButton\n                aria-label={`show ${count} new notifications`}\n                color=\"inherit\"\n                aria-controls={notificationsMenuId}\n                aria-haspopup=\"true\"\n                onClick={showNotifications}\n              >\n                <Badge badgeContent={count} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n                Notifications\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleNavMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n                {user.firstName}\n                <ExpandMoreIcon />\n              </IconButton>\n            </div>\n          )}\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <NavigationMenu\n        anchorEl={anchorEl}\n        isMenuOpen={isMenuOpen}\n        handleMenuClose={handleMenuClose}\n        user={user}\n      />\n      <MobileMenu\n        mobileMoreAnchorEl={mobileMoreAnchorEl}\n        isMobileMenuOpen={isMobileMenuOpen}\n        handleMobileMenuClose={handleMobileMenuClose}\n        handleNavMenuOpen={handleNavMenuOpen}\n        user={user}\n        notificationsCount={count}\n      />\n      <NotificationsMenu\n        anchorEl={notifAnchorEl}\n        onClose={() => setNotifAnchorEl(null)}\n        user={user}\n      />\n      {children}\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { renderRoutes } from \"react-router-config\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Subscriptions from \"components/dashboard/subscriptions.component\";\nimport TotalCustomers from \"components/dashboard/customers.component\";\nimport TotalProjects from \"components/dashboard/count.projects.component\";\nimport TotalQuotes from \"components/dashboard/quotes.component\";\nimport { Link } from \"react-router-dom\";\nimport { USER_INFO } from \"../utils/constants\";\nimport { getDashboardCounts } from \"redux/actions/project\";\nimport Loading from \"components/loading.component\";\nimport { AppHeader } from \"components/AppHeader\";\n\nconst countsSize = (role) => {\n  const sizes = {\n    Admin: { lg: 3, sm: 6, xl: 3, xs: 12 },\n    Manager: { lg: 3, sm: 6, xl: 3, xs: 12 },\n    Client: { lg: 4, sm: 6, xl: 4, xs: 12 },\n  };\n  return role ? sizes[role] : sizes.Client;\n};\nexport const DashboardLayout = ({ route, history }) => {\n  const dashboardState = useSelector((state) => state);\n  const {\n    login: {\n      userInfo: { user },\n    },\n    dashboard: { loading, counts },\n  } = dashboardState;\n\n  useEffect(() => {\n    if (!user.fullName) {\n      localStorage.removeItem(USER_INFO);\n      history.replace(\"/\");\n    }\n  }, [user, history]);\n  useEffect(() => {\n    getDashboardCounts();\n  }, []);\n  return (\n    <AppHeader>\n      <Container maxWidth={false}>\n        {loading ? (\n          <Loading />\n        ) : (\n          <Grid container spacing={3}>\n            {user.role !== \"Client\" && (\n              <Grid\n                item\n                lg={countsSize(user.role).lg}\n                sm={countsSize(user.role).sm}\n                xl={countsSize(user.role).xl}\n                xs={countsSize(user.role).xs}\n                component={Link}\n                to=\"/dashboard/customers\"\n              >\n                <TotalCustomers counts={counts.users || 0} />\n              </Grid>\n            )}\n            <Grid\n              item\n              lg={countsSize(user.role).lg}\n              sm={countsSize(user.role).sm}\n              xl={countsSize(user.role).xl}\n              xs={countsSize(user.role).xs}\n              component={Link}\n              to=\"/dashboard/projects\"\n            >\n              <TotalProjects counts={counts.projects || 0} />\n            </Grid>\n            <Grid\n              item\n              lg={countsSize(user.role).lg}\n              sm={countsSize(user.role).sm}\n              xl={countsSize(user.role).xl}\n              xs={countsSize(user.role).xs}\n              component={Link}\n              to=\"/dashboard/quotes\"\n            >\n              <TotalQuotes\n                sx={{ height: \"100%\" }}\n                counts={counts.quotes || 0}\n              />\n            </Grid>\n            <Grid\n              item\n              lg={countsSize(user.role).lg}\n              sm={countsSize(user.role).sm}\n              xl={countsSize(user.role).xl}\n              xs={countsSize(user.role).xs}\n              component={Link}\n              to=\"/dashboard/subscriptions\"\n            >\n              <Subscriptions counts={counts.subscriptions || 0} />\n            </Grid>\n          </Grid>\n        )}\n        {renderRoutes(route.routes)}\n      </Container>\n    </AppHeader>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/ari_cube.2edefd08.png\";","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LoadingBox from \"../components/loading.component\";\nimport Logo from \"../assets/ari_cube.png\";\nimport { resetPassword, setPassword } from \"../redux/actions/user\";\nimport { notifier } from \"../utils/notifier\";\n\nconst initialState = { password: \"\", confirmPassword: \"\" };\nconst SetPassword = ({ history, match }) => {\n  const [credentials, setCredentials] = useState(initialState);\n\n  const {\n    passwordSet: { loaded, loading },\n    pwdReset: { loaded: set, loading: setting },\n  } = useSelector((state) => state);\n\n  useEffect(() => {\n    if (loaded || set) {\n      notifier.success(\"The password has been set\");\n      setTimeout(() => {\n        history.replace(\"/\");\n      }, 3000);\n    }\n  }, [history, loaded, set]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setCredentials({ ...credentials, [name]: value });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    delete credentials.confirmPassword;\n    credentials.token = match.params.token;\n    if (match.params.action === \"reset\") {\n      resetPassword(credentials);\n    } else {\n      setPassword(credentials);\n    }\n  };\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <img src={Logo} alt=\"#\" className=\"logo\" />\n        </div>\n        <div>\n          <h1>Set a new password</h1>\n        </div>\n        {(loading || setting) && <LoadingBox></LoadingBox>}\n        <div>\n          <label htmlFor=\"pasword\">New Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            className=\"login-input\"\n            placeholder=\"Enter password\"\n            required\n            onChange={onHandleChange}\n            value={credentials.password}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"confirmPassword\">Confirm password</label>\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            id=\"confirmPassword\"\n            className=\"login-input\"\n            placeholder=\"Confirm password\"\n            required\n            onChange={onHandleChange}\n            value={credentials.confirmPassword}\n          ></input>\n        </div>\n        <div>\n          <label />\n          <button\n            className=\"login-input btn-login primary\"\n            type=\"submit\"\n            disabled={loading}\n          >\n            Set password\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default SetPassword;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useTableStyles = makeStyles((theme) => ({\n\troot: {},\n\trow: {\n\t\theight: '42px',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tmarginTop: theme.spacing(1)\n\t},\n\tspacer: {\n\t\tflexGrow: 1\n\t},\n\timportButton: {\n\t\tmarginRight: theme.spacing(1)\n\t},\n\texportButton: {\n\t\tmarginRight: theme.spacing(1)\n\t},\n\tsearchInput: {\n\t\tmarginRight: theme.spacing(1)\n\t},\n\tcontent: {\n\t\tmarginTop: theme.spacing(2)\n\t},\n\ttableContent: {\n\t\tpadding: 0\n\t},\n\tinner: {},\n\tnameContainer: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\tactions: {\n\t\tjustifyContent: 'flex-end'\n\t}\n}));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport ReactPaginate from 'react-paginate';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t...theme.typography.button,\n\t\tlistStyle: 'none',\n\t\tuserSelect: 'none',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center'\n\t},\n\tactive: {},\n\tactiveLink: {},\n\tbreak: {},\n\tbreakLink: {},\n\tdisabled: {},\n\tnext: {\n\t\tmarginLeft: theme.spacing(1)\n\t},\n\tnextLink: {\n\t\tpadding: '6px 16px',\n\t\toutline: 'none',\n\t\tcursor: 'pointer',\n\t\tborderRadius: 4,\n\t\t'&:hover': {\n\t\t\tbackgroundColor: colors.blueGrey[50]\n\t\t}\n\t},\n\tpage: {},\n\tpageLink: {\n\t\tcolor: theme.palette.text.secondary,\n\t\tpadding: theme.spacing(1),\n\t\toutline: 'none',\n\t\tcursor: 'pointer',\n\t\twidth: 40,\n\t\theight: 40,\n\t\tborderRadius: '50%',\n\t\tdisplay: 'block',\n\t\ttextAlign: 'center',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: colors.blueGrey[50],\n\t\t\tcolor: theme.palette.text.primary\n\t\t},\n\t\t'&$activeLink': {\n\t\t\tbackgroundColor: colors.blueGrey[50],\n\t\t\tcolor: theme.palette.text.primary\n\t\t}\n\t},\n\tprevious: {\n\t\tmarginRight: theme.spacing(1)\n\t},\n\tpreviousLink: {\n\t\tpadding: '6px 16px',\n\t\toutline: 'none',\n\t\tcursor: 'pointer',\n\t\tborderRadius: 4,\n\t\t'&:hover': {\n\t\t\tbackgroundColor: colors.blueGrey[50]\n\t\t}\n\t}\n}));\n\nexport const Paginate = ({\n\tpageCount = 0,\n\tpageRangeDisplayed = 2,\n\tmarginPagesDisplayed = 1,\n\tonPageChange,\n\tclassName,\n\t...rest\n}) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\tpageCount > 0 && (\n\t\t\t<ReactPaginate\n\t\t\t\tactiveClassName={classes.active}\n\t\t\t\tactiveLinkClassName={classes.activeLink}\n\t\t\t\tbreakClassName={classes.break}\n\t\t\t\tbreakLabel='...'\n\t\t\t\tbreakLinkClassName={classes.breakLink}\n\t\t\t\tcontainerClassName={classes.root}\n\t\t\t\tdisabledClassName={classes.disabled}\n\t\t\t\tmarginPagesDisplayed={marginPagesDisplayed}\n\t\t\t\tnextClassName={classes.next}\n\t\t\t\tnextLabel='next'\n\t\t\t\tnextLinkClassName={classes.nextLink}\n\t\t\t\tonPageChange={onPageChange}\n\t\t\t\tpageClassName={classes.page}\n\t\t\t\tpageCount={pageCount}\n\t\t\t\tpageLinkClassName={classes.pageLink}\n\t\t\t\tpageRangeDisplayed={pageRangeDisplayed}\n\t\t\t\tpreviousClassName={classes.previous}\n\t\t\t\tpreviousLabel='previous'\n\t\t\t\tpreviousLinkClassName={classes.previousLink}\n\t\t\t\tsubContainerClassName='pages pagination'\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t)\n\t);\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport const NoDisplayData = ({ message = 'No data to display' }) => {\n\treturn (\n\t\t<Typography align='center' variant='h5'>\n\t\t\t{message}\n\t\t</Typography>\n\t);\n};\n","import React from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport _ from \"lodash\";\nimport { useTableStyles } from \"./styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Paginate } from \"../Paginate\";\nimport { NoDisplayData } from \"../NoDisplayData\";\nimport { Loading } from \"../loading.component\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#8967fc\",\n    color: theme.palette.common.white,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport const CustomisedTable = ({\n  data = [],\n  tableTitle = \"\",\n  dataCount = 0,\n  pageCount = 0,\n  page = 1,\n  columns = [],\n  selectedData = [],\n  loading = false,\n  withPagination = true,\n  handlePageChange,\n  size = \"small\",\n}) => {\n  const classes = useTableStyles();\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n  return (\n    <div className={classes.root}>\n      {/* <Typography color='textSecondary' gutterBottom variant='body2'>\n\t\t\t\t{dataCount} Records found. Page {page} of {pageCount}\n\t\t\t</Typography> */}\n      <Card>\n        <CardHeader title={tableTitle} />\n        <Divider />\n        <CardContent className={classes.tableContent}>\n          {loading ? (\n            <Loading />\n          ) : data.length ? (\n            <PerfectScrollbar>\n              <Table size={size}>\n                <TableHead>\n                  <StyledTableRow>\n                    {columns.map(({ label }, columnIdx) => (\n                      <StyledTableCell key={columnIdx}>{label}</StyledTableCell>\n                    ))}\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, itemIdx) => (\n                    <StyledTableRow\n                      className={classes.tableRow}\n                      hover\n                      key={itemIdx}\n                      selected={selectedData.indexOf(item.id) !== -1}\n                    >\n                      {columns.map((cellColumn, cellColumnIdx) => (\n                        <StyledTableCell key={cellColumnIdx}>\n                          {renderCell(item, cellColumn)}\n                        </StyledTableCell>\n                      ))}\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </PerfectScrollbar>\n          ) : (\n            <NoDisplayData />\n          )}\n        </CardContent>\n        {pageCount !== 0 && withPagination && (\n          <CardActions className={classes.actions}>\n            <Paginate\n              marginPagesDisplayed={2}\n              onPageChange={handlePageChange}\n              pageCount={pageCount}\n              pageRangeDisplayed={1}\n            />\n          </CardActions>\n        )}\n      </Card>\n    </div>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#8967fc\",\n  },\n  input: {\n    fontSize: 16,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    color: \"black\",\n    fontSize: 16,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#8967fc\",\n    borderRadius: 5,\n    float: \"left\",\n    maxWidth: \"100%\",\n    color: \"white\",\n    fontSize: 16,\n    \"&:hover\": {\n      backgroundColor: \"#8967fc\",\n      color: \"#FFFFFF\",\n    },\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    \"& .rdw-option-wrapper\": {\n      background: \"transparent\",\n      border: \"none\",\n      minWidth: 26,\n      padding: 6,\n      \"&:hover\": {\n        boxShadow: \"none\",\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    \"& .rdw-option-active\": {\n      boxShadow: \"none\",\n      backgroundColor: theme.palette.action.selected,\n    },\n    \"& .rdw-dropdown-wrapper\": {\n      boxShadow: \"none\",\n      background: \"transparent\",\n    },\n    \"& .rdw-dropdown-optionwrapper\": {\n      overflowY: \"auto\",\n      boxShadow: theme.shadows[10],\n      padding: theme.spacing(1),\n    },\n  },\n  toolbar: {\n    marginBottom: 0,\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    borderRight: \"none\",\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    background: \"transparent\",\n  },\n  editor: {\n    padding: theme.spacing(2),\n    height: 100,\n    color: theme.palette.text.primary,\n  },\n}));\n","import React from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { useStyles } from \"./styles\";\n\nexport const DraftEditor = ({ setEditorState, editorState }) => {\n  const classes = useStyles();\n\n  return (\n    <Editor\n      editorClassName={classes.editor}\n      editorState={editorState}\n      onEditorStateChange={setEditorState}\n      toolbar={{\n        options: [\n          \"inline\",\n          \"blockType\",\n          \"fontSize\",\n          \"fontFamily\",\n          \"list\",\n          \"textAlign\",\n          \"history\",\n        ],\n        inline: { inDropdown: true },\n        list: { inDropdown: true },\n        textAlign: { inDropdown: true },\n      }}\n      toolbarClassName={classes.toolbar}\n      wrapperClassName={classes.root}\n    />\n  );\n};\n","import moment from \"moment\";\n\nexport const initialState = {\n  name: \"\",\n  type: \"\",\n  nOfItems: \"1\",\n  startDate: moment().format(\"YYYY-MM-DD\"),\n  dueDate: moment().format(\"YYYY-MM-DD\"),\n  budget: \"\",\n  status: \"pending\",\n  description: \"\",\n  userId: \"\",\n  managerId: \"\",\n};\nexport const projectStatuses = [\"pending\", \"approved\", \"canceled\"];\nexport const projectTypes = [\n  {\n    name: \"Cube Platform\",\n    description: \"I want to publish and manage my products in 3D and AR myself\",\n  },\n  {\n    name: \"3D modeling\",\n    description: \"I need help with creating my products in 3D\",\n  },\n  {\n    name: \"3D Viewer\",\n    description: \"I want to present my product in 3D on a website\",\n  },\n  {\n    name: \"3D Configurator\",\n    description: \"I want to showcase my products in specific configurations\",\n  },\n  { name: \"AR\", description: \"I want to showcase my products in AR\" },\n];\n","import React, { useState, useEffect } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport { useSelector } from \"react-redux\";\nimport NumberFormat from \"react-number-format\";\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardActions,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { ComputerOutlined } from \"@material-ui/icons\";\nimport { EditorState } from \"draft-js\";\nimport { stateFromHTML } from \"draft-js-import-html\";\nimport { addNewProject, updateProject } from \"redux/actions/project\";\nimport { Loading } from \"components/loading.component\";\nimport { useStyles } from \"styles/formStyles\";\nimport { getUsersList } from \"redux/actions/user\";\nimport { DraftEditor } from \"components/DraftEditor\";\nimport {\n  initialState,\n  projectStatuses,\n  projectTypes,\n} from \"./projectConstants\";\nimport { toHtml } from \"utils/helper\";\n\nexport const ProjectRegistration = ({ action = \"add\", currentItem = null }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState(initialState);\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const projectState = useSelector((state) => state);\n  const {\n    projectAdd: { loading: adding, loaded: added },\n    projectEdit: { loading: updating, loaded: updated },\n    userList: { users },\n    login: {\n      userInfo: { user },\n    },\n  } = projectState;\n  useEffect(() => {\n    getUsersList(\"Manager\");\n  }, []);\n  useEffect(() => {\n    if (added || updated) {\n      let states = { ...initialState };\n      setValues(states);\n      setEditorState(EditorState.createEmpty());\n    }\n  }, [added, updated, user]);\n  useEffect(() => {\n    if (currentItem && action !== \"view\") {\n      const {\n        status,\n        name,\n        description,\n        type,\n        nOfItems,\n        startDate,\n        dueDate,\n        budget,\n        manager,\n      } = currentItem;\n      const contentState = stateFromHTML(description);\n      setValues({\n        name,\n        status,\n        type,\n        nOfItems,\n        startDate: moment(startDate).format(\"YYYY-MM-DD\"),\n        dueDate: moment(dueDate).format(\"YYYY-MM-DD\"),\n        budget,\n        managerId: manager,\n      });\n      setEditorState(EditorState.createWithContent(contentState));\n    }\n  }, [currentItem, action]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setValues({ ...values, [name]: value });\n  };\n\n  const changeStartDate = (value) => {\n    setValues({ ...values, startDate: value });\n  };\n\n  const changeDueDate = (value) => {\n    setValues({ ...values, dueDate: value });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    values.description = toHtml(editorState);\n    if (action !== \"add\" && currentItem) {\n      updateProject(values, currentItem._id);\n    } else {\n      addNewProject(values);\n    }\n  };\n  return (\n    <Card component=\"main\" className={classes.root}>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ComputerOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          {currentItem && action !== \"view\"\n            ? `Update \"${currentItem?.name?.toUpperCase()}\" project`\n            : \"Add a new project\"}\n        </Typography>\n        {(adding || updating) && <Loading />}\n        <form className={classes.form} onSubmit={submitHandler}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                className={classes.input}\n                name=\"name\"\n                variant=\"outlined\"\n                fullWidth\n                label=\"Project name\"\n                onChange={onHandleChange}\n                value={values.name}\n                autoFocus\n                disabled={user.role !== \"Client\"}\n              />\n            </Grid>\n            {user.role === \"Admin\" && action === \"changePm\" && (\n              <Grid item xs={12}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"project-manager\">Project manager</InputLabel>\n                  <Select\n                    labelId=\"project-manager\"\n                    value={values.managerId}\n                    name=\"managerId\"\n                    onChange={onHandleChange}\n                  >\n                    <MenuItem value=\"\">---</MenuItem>\n                    {users.map(({ _id, fullName }, userIdx) => (\n                      <MenuItem value={_id} key={userIdx}>\n                        {fullName}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel id=\"project-type\">Project type</InputLabel>\n                <Select\n                  labelId=\"project-type\"\n                  value={values.type}\n                  name=\"type\"\n                  onChange={onHandleChange}\n                  disabled={user.role !== \"Client\"}\n                >\n                  <MenuItem value=\"\">---</MenuItem>\n                  {projectTypes.map((type, typeIdx) => (\n                    <MenuItem value={type.name} key={typeIdx}>\n                      {`${type.name} - ${type.description}`}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel id=\"project-status\">Status</InputLabel>\n                <Select\n                  labelId=\"project-status\"\n                  value={values.status}\n                  name=\"status\"\n                  onChange={onHandleChange}\n                  disabled={action !== \"change\"}\n                >\n                  <MenuItem value=\"\">---</MenuItem>\n                  {projectStatuses.map((status, choiceIdx) => (\n                    <MenuItem value={status} key={choiceIdx}>\n                      {status.toUpperCase()}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item lg={6} md={6} xl={6} xs={12}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  label=\"Start Date\"\n                  inputVariant=\"outlined\"\n                  value={values.startDate}\n                  InputAdornmentProps={{ position: \"start\" }}\n                  format=\"yyyy-MM-dd\"\n                  views={[\"year\", \"month\", \"date\"]}\n                  onChange={changeStartDate}\n                  disabled={user.role !== \"Client\"}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item lg={6} md={6} xl={6} xs={12}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  label=\"Due Date\"\n                  inputVariant=\"outlined\"\n                  value={values.dueDate}\n                  InputAdornmentProps={{ position: \"start\" }}\n                  format=\"yyyy-MM-dd\"\n                  views={[\"year\", \"month\", \"date\"]}\n                  disabled={user.role !== \"Client\"}\n                  onChange={changeDueDate}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item lg={4} md={4} xl={4} xs={12}>\n              <TextField\n                className={classes.input}\n                variant=\"outlined\"\n                fullWidth\n                type=\"number\"\n                name=\"nOfItems\"\n                label=\"Number of items\"\n                value={values.nOfItems}\n                onChange={onHandleChange}\n                disabled={user.role !== \"Client\"}\n              />\n            </Grid>\n            <Grid item lg={8} md={8} xl={8} xs={12}>\n              <NumberFormat\n                className={classes.input}\n                value={values.budget}\n                onValueChange={({ floatValue }) =>\n                  setValues({ ...values, budget: floatValue })\n                }\n                prefix=\"$\"\n                thousandSeparator\n                customInput={TextField}\n                fullWidth\n                variant=\"outlined\"\n                label=\"Budget(in USD)\"\n                disabled={user.role !== \"Client\"}\n              />\n            </Grid>\n            {user.role === \"Client\" && (\n              <Grid item xs={12}>\n                <DraftEditor\n                  editorState={editorState}\n                  setEditorState={setEditorState}\n                />\n              </Grid>\n            )}\n          </Grid>\n          <CardActions>\n            {action === \"add\" ? (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n                disabled={adding}\n              >\n                Save\n              </Button>\n            ) : (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n                disabled={updating}\n              >\n                Update the project\n              </Button>\n            )}\n          </CardActions>\n        </form>\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  ButtonGroup,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport {\n  EditRounded as EditIcon,\n  Publish as PublishIcon,\n  ViewComfy as ViewComfyIcon,\n} from \"@material-ui/icons\";\n\nexport const projectOwnerCol = (user = {}) => {\n  return user.role !== \"Client\"\n    ? [\n        {\n          content: (item) => <Typography>{item?.user?.fullName}</Typography>,\n          label: \"Project Owner\",\n        },\n      ]\n    : [];\n};\n\nexport const projectColumns = (onProjectClick, user = {}) => [\n  {\n    content: (item) => (\n      <ListItem>\n        <ListItemText primary={item.name} secondary={item.type} />\n      </ListItem>\n    ),\n    label: \"Project\",\n  },\n  ...projectOwnerCol(user),\n  { path: \"type\", label: \"Type\" },\n  { path: \"status\", label: \"Status\" },\n  {\n    content: (item) => (\n      <Typography>$ {item.budget?.toLocaleString(\"en-US\")}</Typography>\n    ),\n    label: \"Budget\",\n  },\n  {\n    content: (item) => (\n      <ButtonGroup variant=\"outlined\" size=\"small\">\n        <Tooltip title=\"View\">\n          <IconButton\n            aria-label=\"View\"\n            color=\"secondary\"\n            component={Link}\n            to={`/dashboard/projects/${item._id}`}\n          >\n            <ViewComfyIcon /> View\n          </IconButton>\n        </Tooltip>\n        {user.role === \"Client\" && (\n          <Tooltip title=\"Edit\">\n            <IconButton\n              aria-label=\"Edit\"\n              color=\"secondary\"\n              disabled={item.status === \"approved\"}\n              onClick={() => onProjectClick(item, \"edit\")}\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {user.role !== \"Client\" && (\n          <Tooltip title=\"Change status\">\n            <IconButton\n              aria-label=\"Change status\"\n              color=\"default\"\n              disabled={item.status === \"approved\"}\n              onClick={() => onProjectClick(item, \"change\")}\n            >\n              <PublishIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {user.role === \"Admin\" && (\n          <Tooltip title=\"Change project manager\">\n            <IconButton\n              aria-label=\"Change project manager\"\n              color=\"default\"\n              disabled={item.status === \"approved\"}\n              onClick={() => onProjectClick(item, \"changePm\")}\n            >\n              Change PM\n            </IconButton>\n          </Tooltip>\n        )}\n      </ButtonGroup>\n    ),\n    label: \"Actions\",\n  },\n];\n","import React from \"react\";\nimport { ButtonGroup, IconButton, Tooltip } from \"@material-ui/core\";\nimport {\n  EditRounded as EditIcon,\n  ViewComfy as ViewComfyIcon,\n  DeleteForeverRounded as DeleteIcon,\n} from \"@material-ui/icons\";\n\nexport const userColumns = (onUserClick) => [\n  { path: \"fullName\", label: \"Names\" },\n  { path: \"email\", label: \"Email\" },\n  { path: \"phoneNumber\", label: \"Phone number\" },\n  { path: \"role\", label: \"User role\" },\n  { path: \"companyName\", label: \"Company\" },\n  {\n    content: (item) => (\n      <ButtonGroup variant=\"outlined\" size=\"small\">\n        <Tooltip title=\"View\">\n          <IconButton\n            aria-label=\"View\"\n            color=\"secondary\"\n            onClick={() => onUserClick(item, \"view\")}\n          >\n            <ViewComfyIcon /> View\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <IconButton\n            aria-label=\"Edit\"\n            color=\"secondary\"\n            onClick={() => onUserClick(item, \"edit\")}\n          >\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <IconButton\n            aria-label=\"Delete\"\n            color=\"danger\"\n            onClick={() => onUserClick(item, \"delete\")}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      </ButtonGroup>\n    ),\n    label: \"Actions\",\n  },\n];\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  ButtonGroup,\n  IconButton,\n  Tooltip,\n  Typography,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport {\n  Publish as PublishIcon,\n  PrintRounded as PrintRoundedIcon,\n} from \"@material-ui/icons\";\nimport { INVOICE_ROUTE } from \"utils/constants\";\n\nexport const invoiceColumns = (onInvoiceClick, user = {}) => [\n  {\n    content: (item) => (\n      <ListItem>\n        <ListItemText\n          primary={item.project?.name}\n          secondary={item.project?.type}\n        />\n      </ListItem>\n    ),\n    label: \"Project\",\n  },\n  {\n    content: (item) => <Typography>{item?.user?.fullName}</Typography>,\n    label: \"Project owner\",\n  },\n  {\n    content: (item) => (\n      <Typography>$ {item.amount?.toLocaleString(\"en-US\")}</Typography>\n    ),\n    label: \"Amount\",\n  },\n  { path: \"status\", label: \"Status\" },\n  {\n    content: (item) => (\n      <Typography>\n        {item.status === \"pending\"\n          ? moment(item.due_date).fromNow()\n          : \"Already paid\"}\n      </Typography>\n    ),\n    label: \"Due data\",\n  },\n  {\n    content: (item) =>\n      item.status === \"pending\" && user.role !== \"Client\" ? (\n        <ButtonGroup variant=\"outlined\" size=\"small\">\n          <Tooltip title=\"Approve payment\">\n            <IconButton\n              aria-label=\"Approve payment\"\n              color=\"default\"\n              onClick={() => onInvoiceClick(item, \"change\")}\n            >\n              <PublishIcon /> Approve payment\n            </IconButton>\n          </Tooltip>\n        </ButtonGroup>\n      ) : (\n        <>\n          <Typography variant=\"caption\" color=\"error\">\n            No action needed\n          </Typography>\n          <Tooltip title=\"Print invoice\">\n            <IconButton\n              component=\"a\"\n              aria-label=\"Print invoice\"\n              color=\"default\"\n              rel=\"noreferrer\"\n              href={`${INVOICE_ROUTE}/${item._id}`}\n              target=\"_blank\"\n              size=\"small\"\n            >\n              <PrintRoundedIcon /> Download\n            </IconButton>\n          </Tooltip>\n        </>\n      ),\n    label: \"Actions\",\n  },\n];\n","import React from \"react\";\nimport moment from \"moment\";\nimport { ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport { projectOwnerCol } from \"./projectColumns\";\n\nexport const subscriptionColumns = (user = {}) => [\n  {\n    content: (item) => (\n      <ListItem>\n        <ListItemText\n          primary={item.project?.name}\n          secondary={item.project?.type}\n        />\n      </ListItem>\n    ),\n    label: \"Project\",\n  },\n  ...projectOwnerCol(user),\n  {\n    content: (item) => <Typography>{item.billingCycle}</Typography>,\n    label: \"Billing cycle\",\n  },\n  {\n    content: (item) => (\n      <Typography>$ {item.quote?.amount?.toLocaleString(\"en-US\")}</Typography>\n    ),\n    label: \"Amount\",\n  },\n  {\n    content: (item) => (\n      <Typography>{moment(item.startDate).fromNow()}</Typography>\n    ),\n    label: \"Start date\",\n  },\n  {\n    content: (item) => (\n      <Typography>\n        {item.expirationDate\n          ? moment(item.expirationDate).fromNow()\n          : \"One time pay\"}\n      </Typography>\n    ),\n    label: \"Expiration date\",\n  },\n  { path: \"status\", label: \"Status\" },\n];\n","import Pages from \"lodash\";\n\nexport const paginate = (items = [], pageNumber = 1, pageSize = 5) => {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return Pages(items).slice(startIndex).take(pageSize).value();\n};\nexport const initialPaginate = (pageSize = 5, pageNumber = 1) => ({\n  pageSize,\n  pageNumber,\n});\n","import React, { forwardRef, useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport HtmlParser from \"react-html-parser\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Slide,\n  CardContent,\n  ListItemText,\n  ListItem,\n  List,\n  Typography,\n  IconButton,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"@material-ui/core\";\nimport {\n  CloudDownloadOutlined as DownloadIcon,\n  ExpandMore as ExpandMoreIcon,\n} from \"@material-ui/icons\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport TextInfoContent from \"@mui-treasury/components/content/textInfo\";\nimport { useBlogTextInfoContentStyles } from \"@mui-treasury/styles/textInfoContent/blog\";\nimport { projectTypes } from \"./projectConstants\";\nimport { getProjectHistories } from \"redux/actions/project\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\nimport { INVOICE_ROUTE } from \"utils/constants\";\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"36ch\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\nexport const ProjectModel = ({ open = false, setOpen, currentItem = null }) => {\n  const classes = useStyles();\n\n  const [project, setProject] = useState({ name: \"\" });\n  const [projectType, setProjectType] = useState({});\n  const { loading, histories } = useSelector(\n    ({ historiesGet }) => historiesGet\n  );\n  useEffect(() => {\n    if (currentItem) {\n      setProject(currentItem);\n      getProjectHistories(currentItem._id);\n      const currentPType = projectTypes.find(\n        (e) => e.name === currentItem.type\n      );\n      setProjectType(currentPType);\n    }\n  }, [currentItem]);\n  const { button: buttonStyles, ...contentStyles } =\n    useBlogTextInfoContentStyles();\n  const toDowloadUrl = (projectHistory = {}) => {\n    let url = projectHistory.invoice;\n    if (projectHistory.quote) {\n      url = `${projectHistory.quote}?downloadType=quote`;\n    }\n    return url;\n  };\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={setOpen}\n      aria-labelledby=\"project-name\"\n      aria-describedby=\"project-description\"\n    >\n      <DialogTitle id=\"project-name\">\n        {`Project name: ${project.name.toUpperCase()}`}\n      </DialogTitle>\n      <DialogContent>\n        <CardContent>\n          <TextInfoContent\n            classes={contentStyles}\n            overline={\n              project.user?.firstName &&\n              `Created by: ${project.user.firstName} ${project.user.lastName}`\n            }\n          />\n          <ListItemText\n            primary={`Start: ${moment(project.startDate).format(\n              \"YYYY-MM-DD\"\n            )}, Due date: ${moment(project.dueDate).format(\"YYYY-MM-DD\")}`}\n          />\n          <Typography variant=\"h4\">Project type:</Typography>\n          <ListItem>\n            <ListItemText\n              primary={projectType?.name}\n              secondary={projectType?.description}\n            />\n          </ListItem>\n          <Typography variant=\"h4\">\n            Number of items: {project.nOfItems}\n          </Typography>\n          {HtmlParser(project.description)}\n          <Button className={buttonStyles}>\n            Budget: ${project.budget?.toLocaleString(\"en-US\") || 0}\n          </Button>\n          {loading ? (\n            <Loading />\n          ) : (\n            <List>\n              {histories.map((history, historyIdx) => (\n                <Accordion key={historyIdx}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls={`panel${historyIdx}a-content`}\n                    id={`panel${historyIdx}a-header`}\n                  >\n                    <ListItem alignItems=\"flex-start\">\n                      <ListItemText\n                        primary={history.description}\n                        secondary={\n                          <>\n                            <Typography\n                              component=\"span\"\n                              variant=\"body2\"\n                              className={classes.inline}\n                              color=\"textPrimary\"\n                            >\n                              {history.userRole}\n                            </Typography>\n                            {` — on ${moment(history.createdAt).format(\n                              \"MMM DD, YYYY @ HH:mm\"\n                            )}`}\n                          </>\n                        }\n                      />\n                      {(history.invoice || history.quote) && (\n                        <IconButton\n                          edge=\"end\"\n                          size=\"small\"\n                          component=\"a\"\n                          aria-label=\"Print invoice\"\n                          rel=\"noreferrer\"\n                          href={`${INVOICE_ROUTE}/${toDowloadUrl(history)}`}\n                          target=\"_blank\"\n                        >\n                          <DownloadIcon />\n                        </IconButton>\n                      )}\n                    </ListItem>\n                  </AccordionSummary>\n                  {Boolean(history.content) && (\n                    <AccordionDetails>\n                      {HtmlParser(history.content)}\n                    </AccordionDetails>\n                  )}\n                </Accordion>\n              ))}\n            </List>\n          )}\n        </CardContent>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { store } from \"../store\";\nimport { ADD_NEW_QUOTE, UPDATE_QUOTE, GET_QUOTES } from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const addNewQuote = (quoteInfo) => {\n  store.dispatch({\n    type: ADD_NEW_QUOTE,\n    payload: http.post(\"/quote\", quoteInfo),\n  });\n};\nexport const getQuotes = () => {\n  store.dispatch({\n    type: GET_QUOTES,\n    payload: http.get(\"/quote\"),\n  });\n};\nexport const updateQuote = (quoteInfo, quoteId) => {\n  store.dispatch({\n    type: UPDATE_QUOTE,\n    payload: http.patch(`/quote/${quoteId}`, quoteInfo),\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport { useSelector } from \"react-redux\";\nimport NumberFormat from \"react-number-format\";\nimport { DraftEditor } from \"components/DraftEditor\";\nimport { EditorState } from \"draft-js\";\nimport { stateFromHTML } from \"draft-js-import-html\";\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  ComputerOutlined,\n  Cancel as CancelIcon,\n  Edit as EditIcon,\n} from \"@material-ui/icons\";\nimport { addNewQuote, updateQuote } from \"redux/actions/quote\";\nimport { Loading } from \"components/loading.component\";\nimport { useStyles } from \"styles/formStyles\";\nimport { getProjects } from \"redux/actions/project\";\nimport { getUsersList } from \"redux/actions/user\";\nimport { toHtml } from \"utils/helper\";\n\nconst initialState = {\n  projectId: \"\",\n  billingCycle: \"Monthly\",\n  taxes: [],\n  discount: \"0\",\n  isFixed: false,\n  expiryDate: moment().format(\"YYYY-MM-DD\"),\n  propasalText: \"\",\n  customerNote: \"\",\n  customer: \"\",\n};\nconst taxInitials = { title: \"\", amount: \"\" };\nconst quoteCycles = [\"Monthly\", \"Yearly\", \"OneTime\"];\nconst qStatuses = [\"Accepted\", \"Declined\"];\nexport const QuoteRegistration = ({ action = \"add\", currentItem = null }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState(initialState);\n  const [tax, setTax] = useState(taxInitials);\n  const [propTextState, setPropTextState] = useState(EditorState.createEmpty());\n  const [noteState, setNoteState] = useState(EditorState.createEmpty());\n  const quoteState = useSelector((state) => state);\n\n  const {\n    quoteAdd: { loading: adding, loaded: added },\n    quoteEdit: { loading: updating, loaded: updated },\n    projectsGet: { projects },\n    userList: { users },\n    login: {\n      userInfo: { user },\n    },\n  } = quoteState;\n\n  useEffect(() => {\n    getUsersList(\"Client\");\n  }, []);\n  useEffect(() => {\n    if (values.customer) {\n      getProjects({ clientId: values.customer });\n    }\n  }, [values.customer]);\n  useEffect(() => {\n    if (added || updated) {\n      setValues(initialState);\n      setPropTextState(EditorState.createEmpty());\n      setNoteState(EditorState.createEmpty());\n    }\n  }, [added, updated]);\n  useEffect(() => {\n    if (currentItem) {\n      const { project, user, updatedAt, createdAt, _id, __v, ...rest } =\n        currentItem;\n      const projectId = project._id;\n      const customer = user._id;\n      const expiryDate = moment(currentItem.expiryDate).format(\"YYYY-MM-DD\");\n      setValues({ ...rest, projectId, expiryDate, customer });\n      const propasalText = stateFromHTML(rest.propasalText);\n      const customerNote = stateFromHTML(rest.customerNote);\n      setPropTextState(EditorState.createWithContent(propasalText));\n      setNoteState(EditorState.createWithContent(customerNote));\n    }\n  }, [currentItem]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setValues((prev) => {\n      const newValues = { ...prev, [name]: value };\n      if (name === \"customer\") {\n        newValues.projectId = \"\";\n      }\n      return newValues;\n    });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    values.propasalText = toHtml(propTextState);\n    values.customerNote = toHtml(noteState);\n    const { amount, customer, ...quoteValues } = values;\n    if (action !== \"add\" && currentItem) {\n      updateQuote(quoteValues, currentItem._id);\n    } else {\n      addNewQuote(quoteValues);\n    }\n  };\n  const onSetSeen = (e) => {\n    const {\n      target: { checked },\n    } = e;\n    setValues({ ...values, status: checked ? \"Pending\" : \"Draft\" });\n  };\n  const onAddTax = () => {\n    const taxes = [...values.taxes];\n    const index = taxes.findIndex((i) => i.title === tax.title);\n    if (index < 0) {\n      taxes.push(tax);\n    } else {\n      taxes[index].title = tax.title;\n      taxes[index].amount = tax.amount;\n    }\n    setValues((prev) => ({ ...prev, taxes }));\n    setTax(taxInitials);\n  };\n  const onDeleteTax = (taxTitle) => {\n    const newTaxes = values.taxes.filter((t) => t.title !== taxTitle);\n    setValues((prev) => ({ ...prev, taxes: newTaxes }));\n  };\n  const onChangeTax = ({ target: { name, value } }) => {\n    setTax((prev) => ({ ...prev, [name]: value }));\n  };\n  return (\n    <Card component=\"main\" className={classes.root}>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ComputerOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          {currentItem\n            ? `Update \"${currentItem.project.name.toUpperCase()}\" proposal`\n            : \"Add a new proposal\"}\n        </Typography>\n        {(adding || updating) && <Loading />}\n        {((currentItem && action !== \"items\") ||\n          (action === \"add\" && user.role !== \"Client\")) && (\n          <form className={classes.form} onSubmit={submitHandler}>\n            <Grid container spacing={1}>\n              {(action === \"add\" || action === \"edit\") && (\n                <>\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"customer-or-comp\">\n                        Customer or company\n                      </InputLabel>\n                      <Select\n                        labelId=\"customer-or-comp\"\n                        value={values.customer}\n                        name=\"customer\"\n                        onChange={onHandleChange}\n                        disabled={user.role === \"Client\"}\n                      >\n                        <MenuItem value=\"\">---</MenuItem>\n                        {users.map((user, userIdx) => (\n                          <MenuItem value={user._id} key={userIdx}>\n                            {user.fullName}, {user.companyName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"select-project\">\n                        Select project\n                      </InputLabel>\n                      <Select\n                        labelId=\"select-project\"\n                        value={values.projectId}\n                        name=\"projectId\"\n                        onChange={onHandleChange}\n                        disabled={!Boolean(values.customer)}\n                      >\n                        <MenuItem value=\"\">---</MenuItem>\n                        {projects.map(({ _id, name, user }, choiceIdx) => (\n                          <MenuItem value={_id} key={choiceIdx}>\n                            {`${name} ---> ${user?.fullName}`}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </>\n              )}\n              {(action === \"add\" || action === \"edit\") && (\n                <Grid item xs={12}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel id=\"billing-cycle\">Billing cycle</InputLabel>\n                    <Select\n                      labelId=\"billing-cycle\"\n                      value={values.billingCycle}\n                      name=\"billingCycle\"\n                      onChange={onHandleChange}\n                      disabled={action === \"change\"}\n                    >\n                      <MenuItem value=\"\">---</MenuItem>\n                      {quoteCycles.map((cyle, choiceIdx) => (\n                        <MenuItem value={cyle} key={choiceIdx}>\n                          {cyle.toUpperCase()}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n              {(action === \"add\" || action === \"edit\") && (\n                <>\n                  <Grid item xs={12}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <KeyboardDatePicker\n                        label=\"Expiry Date\"\n                        inputVariant=\"outlined\"\n                        fullWidth\n                        value={values.expiryDate}\n                        InputAdornmentProps={{ position: \"start\" }}\n                        format=\"yyyy-MM-dd\"\n                        views={[\"year\", \"month\", \"date\"]}\n                        onChange={(dateValue) =>\n                          setValues((prev) => ({\n                            ...prev,\n                            expiryDate: dateValue,\n                          }))\n                        }\n                        minDate={new Date()}\n                      />\n                    </MuiPickersUtilsProvider>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={8} lg={8}>\n                    {values.isFixed ? (\n                      <NumberFormat\n                        className={classes.input}\n                        value={values.discount}\n                        onValueChange={({ floatValue }) =>\n                          setValues({ ...values, discount: floatValue })\n                        }\n                        prefix=\"$\"\n                        thousandSeparator\n                        customInput={TextField}\n                        fullWidth\n                        variant=\"outlined\"\n                        label=\"Discount(in USD)\"\n                      />\n                    ) : (\n                      <TextField\n                        name=\"discount\"\n                        variant=\"outlined\"\n                        type=\"number\"\n                        fullWidth\n                        label=\"Discount(in %)\"\n                        onChange={onHandleChange}\n                        value={values.discount}\n                      />\n                    )}\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={4} lg={4}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={values.isFixed}\n                          onChange={({ target: { checked } }) =>\n                            setValues({ ...values, isFixed: checked })\n                          }\n                        />\n                      }\n                      label=\"Is fixed?\"\n                      labelPlacement=\"top\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={5} lg={5}>\n                    <TextField\n                      name=\"title\"\n                      variant=\"outlined\"\n                      fullWidth\n                      label=\"Tax title\"\n                      size=\"small\"\n                      onChange={onChangeTax}\n                      value={tax.title}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={5} lg={5}>\n                    <TextField\n                      name=\"amount\"\n                      variant=\"outlined\"\n                      type=\"number\"\n                      fullWidth\n                      label=\"Tax(in %)\"\n                      size=\"small\"\n                      onChange={onChangeTax}\n                      value={tax.amount}\n                      disabled={!Boolean(tax.title)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={2} lg={2}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={!Boolean(tax.amount)}\n                      onClick={() => onAddTax()}\n                    >\n                      Add\n                    </Button>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <ul>\n                      {values.taxes.map((t, tIndex) => (\n                        <li key={tIndex}>\n                          <strong>{t.title}: </strong>\n                          {`${t.amount}%`}\n                          <IconButton size=\"small\" onClick={() => setTax(t)}>\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => onDeleteTax(t.title)}\n                          >\n                            <CancelIcon />\n                          </IconButton>\n                        </li>\n                      ))}\n                    </ul>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h4\">Proposal text</Typography>\n                    <DraftEditor\n                      editorState={propTextState}\n                      setEditorState={setPropTextState}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h4\">Customer note</Typography>\n                    <DraftEditor\n                      editorState={noteState}\n                      setEditorState={setNoteState}\n                    />\n                  </Grid>\n                </>\n              )}\n              {action === \"change\" && (\n                <Grid item xs={12}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel id=\"project-status\">Status</InputLabel>\n                    <Select\n                      labelId=\"project-status\"\n                      value={values.status}\n                      name=\"status\"\n                      onChange={onHandleChange}\n                    >\n                      <MenuItem value=\"\">---</MenuItem>\n                      {qStatuses.map((status, choiceIdx) => (\n                        <MenuItem value={status} key={choiceIdx}>\n                          {status.toUpperCase()}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n              {values.status && action === \"change\" && (\n                <Grid item xs={12}>\n                  <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"comment\"\n                    label=\"Add comment\"\n                    value={values.comment}\n                    onChange={onHandleChange}\n                  />\n                </Grid>\n              )}\n              {action === \"edit\" && currentItem.items?.length > 0 && (\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={values.status !== \"Draft\"}\n                        onChange={onSetSeen}\n                      />\n                    }\n                    disabled={\n                      values.status !== \"Draft\" && values.status !== \"Pending\"\n                    }\n                    label=\"Send proposal\"\n                  />\n                </Grid>\n              )}\n            </Grid>\n            <CardActions>\n              {action === \"add\" ? (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={adding}\n                >\n                  Save\n                </Button>\n              ) : (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={updating}\n                >\n                  Update the proposal\n                </Button>\n              )}\n            </CardActions>\n          </form>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  ButtonGroup,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { EditRounded as EditIcon } from \"@material-ui/icons\";\nimport { projectOwnerCol } from \"./projectColumns\";\n\nconst hasExpired = (aDate) => {\n  const today = new Date();\n  const theDate = new Date(aDate);\n  return today.getTime() > theDate.getTime();\n};\nexport const quoteColumns = (onQuoteClick, user = {}) => [\n  {\n    content: (item) => (\n      <ListItem>\n        <ListItemText\n          primary={item.project?.name}\n          secondary={item.project?.type}\n        />\n      </ListItem>\n    ),\n    label: \"Project\",\n  },\n  ...projectOwnerCol(user),\n  { path: \"billingCycle\", label: \"Billing cycle\" },\n  {\n    content: (item) =>\n      item.amounts?.total ? (\n        <Typography>\n          $ {item.amounts?.total?.toLocaleString(\"en-US\")}\n        </Typography>\n      ) : (\n        \"-\"\n      ),\n    label: \"Amount\",\n  },\n  {\n    content: (item) => (\n      <Typography>\n        {item.status === \"Pending\" && hasExpired(item.expiryDate)\n          ? \"Dead\"\n          : item.status}\n      </Typography>\n    ),\n    label: \"Status\",\n  },\n  {\n    content: (item) => (\n      <ButtonGroup variant=\"outlined\" size=\"small\">\n        <Tooltip title=\"Manage items\">\n          <IconButton\n            aria-label=\"manage-items\"\n            color=\"secondary\"\n            onClick={() => onQuoteClick(item, \"items\")}\n            size=\"small\"\n          >\n            View\n          </IconButton>\n        </Tooltip>\n        {user.role !== \"Client\" &&\n          (item.status === \"Pending\" ||\n            item.status === \"Draft\" ||\n            hasExpired(item.expiryDate)) && (\n            <Tooltip title=\"Edit\">\n              <IconButton\n                aria-label=\"Edit\"\n                color=\"secondary\"\n                onClick={() => onQuoteClick(item, \"edit\")}\n              >\n                <EditIcon />\n                Edit\n              </IconButton>\n            </Tooltip>\n          )}\n      </ButtonGroup>\n    ),\n    label: \"Actions\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport HtmlParser from \"react-html-parser\";\nimport {\n  Button,\n  ButtonGroup,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  EditRounded as EditIcon,\n  Delete as DeleteIcon,\n  ThumbUp as ThumbUpIcon,\n  ThumbDown as ThumbDownIcon,\n  Save as SaveIcon,\n  Cancel as CancelIcon,\n} from \"@material-ui/icons\";\nimport { NoDisplayData } from \"components/NoDisplayData\";\nimport { updateQuote } from \"redux/actions/quote\";\nimport { INVOICE_ROUTE } from \"utils/constants\";\n\nconst initialItem = { name: \"\", quantity: \"\", price: \"\", total: \"\" };\nconst aggregateInit = { subtotal: 0, tax: 0, discount: 0, total: 0 };\n\nconst calculateAggregate = (items = [], { taxes, discount, isFixed }) => {\n  const grandTotal = Number(items.reduce((sum, item) => sum + item.total, 0));\n  const totDiscount = isFixed ? discount : (grandTotal * discount) / 100;\n  const subTotal = grandTotal - totDiscount;\n  const tax = taxes.reduce((a, b) => a + b.amount, 0);\n  const totTax = (subTotal * tax) / 100;\n  const aggreg = {\n    subtotal: grandTotal.toFixed(2),\n    tax: totTax.toFixed(2),\n    discount: totDiscount.toFixed(2),\n    total: (subTotal + totTax).toFixed(2),\n  };\n  return aggreg;\n};\nconst hasExpired = (aDate) => {\n  const today = new Date();\n  const theDate = new Date(aDate);\n  return today.getTime() < theDate.getTime();\n};\nexport const QuoteItemsDialog = ({\n  open,\n  setOpen,\n  quote,\n  loading = false,\n  user = {},\n}) => {\n  const [item, setItem] = useState(initialItem);\n  const [aggregate, setAggregate] = useState(aggregateInit);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    if (quote && quote.items) {\n      setItems(quote?.items || []);\n      setAggregate(quote?.amounts || {});\n    }\n  }, [quote]);\n  const onHandleChange = ({ target: { name, value } }) => {\n    setItem((prev) => ({ ...prev, [name]: value }));\n  };\n  const onHandleCommentChange = ({ target: { value } }) => {\n    quote.comment = value;\n  };\n  const updateItems = (newItems) => {\n    const aggregs = calculateAggregate(newItems, quote);\n    setItems(newItems);\n    setAggregate(aggregs);\n    setItem(initialItem);\n    quote.items = newItems;\n    quote.amounts = aggregs;\n  };\n  const onAdd = () => {\n    const theItems = [...items];\n    const index = theItems.findIndex((i) => i.name === item.name);\n    item.total = item.price * item.quantity;\n    if (index < 0) {\n      theItems.push(item);\n    } else {\n      theItems[index].price = item.price;\n      theItems[index].quantity = item.quantity;\n      theItems[index].total = item.total;\n    }\n    updateItems(theItems);\n  };\n  const onRemove = (itemName) => {\n    const newItems = items.filter((i) => i.name !== itemName);\n    updateItems(newItems);\n  };\n  const onQuoteUpdate = (status = \"Draft\") => {\n    const { project, user, updatedAt, createdAt, _id, __v, ...rest } = quote;\n    rest.projectId = project._id;\n    rest.status = status;\n    updateQuote(rest, _id);\n  };\n  return (\n    <Dialog\n      open={open}\n      keepMounted\n      onClose={setOpen}\n      maxWidth=\"lg\"\n      fullWidth\n      aria-labelledby=\"quote-items-title\"\n      aria-describedby=\"quote-items-description\"\n    >\n      <DialogTitle id=\"quote-items-title\">Manage proposal items</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={12} md={7} lg={7}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\">Proposal text</Typography>\n              <hr />\n              {HtmlParser(quote?.propasalText)}\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\">Customer note</Typography>\n              <hr />\n              {HtmlParser(quote?.customerNote)}\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={12} md={5} lg={5}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={4} lg={4}>\n                <TextField\n                  name=\"name\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"Name\"\n                  onChange={onHandleChange}\n                  value={item.name}\n                  size=\"small\"\n                  disabled={\n                    user.role === \"Client\" ||\n                    (quote?.status !== \"Draft\" && quote?.status !== \"Pending\")\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={3} lg={3}>\n                <TextField\n                  name=\"price\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"Price\"\n                  type=\"number\"\n                  onChange={onHandleChange}\n                  value={item.price}\n                  size=\"small\"\n                  disabled={item.name === \"\"}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={3} lg={3}>\n                <TextField\n                  name=\"quantity\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"Quantity\"\n                  type=\"number\"\n                  onChange={onHandleChange}\n                  value={item.quantity}\n                  size=\"small\"\n                  disabled={item.price <= 0}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={2} lg={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => onAdd()}\n                  disabled={item.quantity <= 0}\n                >\n                  Add\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <TableContainer component={Paper}>\n                  {items.length > 0 ? (\n                    <Table aria-label=\"item-table\" size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell align=\"center\" colSpan={3}>\n                            Item details\n                          </TableCell>\n                          <TableCell align=\"right\">Item price</TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell>Name</TableCell>\n                          <TableCell align=\"right\">Qty.</TableCell>\n                          <TableCell align=\"right\">Price</TableCell>\n                          <TableCell align=\"right\">Total</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {items.map((item, itemIdx) => (\n                          <TableRow key={itemIdx}>\n                            <TableCell>\n                              {item.name}\n                              {user.role !== \"Client\" && (\n                                <>\n                                  <IconButton\n                                    size=\"small\"\n                                    onClick={() =>\n                                      setItem((prev) => ({ ...prev, ...item }))\n                                    }\n                                  >\n                                    <EditIcon />\n                                  </IconButton>\n                                  <IconButton\n                                    size=\"small\"\n                                    onClick={() => onRemove(item.name)}\n                                  >\n                                    <DeleteIcon />\n                                  </IconButton>\n                                </>\n                              )}\n                            </TableCell>\n                            <TableCell align=\"right\">{item.quantity}</TableCell>\n                            <TableCell align=\"right\">\n                              ${item.price?.toLocaleString(\"en-US\")}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                              ${item.total?.toLocaleString(\"en-US\")}\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                        <TableRow>\n                          <TableCell rowSpan={4} />\n                          <TableCell colSpan={2}>Subtotal</TableCell>\n                          <TableCell align=\"right\">\n                            ${aggregate.subtotal?.toLocaleString(\"en-US\")}\n                          </TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell>Taxes</TableCell>\n                          <TableCell align=\"right\">\n                            {quote?.taxes?.reduce(\n                              (a, b) => a + `${b.amount}%, `,\n                              \"\"\n                            )}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            ${aggregate.tax?.toLocaleString(\"en-US\")}\n                          </TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell>Discount</TableCell>\n                          <TableCell align=\"right\">\n                            {quote?.isFixed\n                              ? `${quote?.discount.toLocaleString(\"en-US\")}`\n                              : `${quote?.discount}%`}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            ${aggregate.discount?.toLocaleString(\"en-US\")}\n                          </TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell colSpan={2}>Total</TableCell>\n                          <TableCell align=\"right\">\n                            ${aggregate.total?.toLocaleString(\"en-US\")}\n                          </TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  ) : (\n                    <NoDisplayData message=\"Not items added yet\" />\n                  )}\n                </TableContainer>\n              </Grid>\n              {user.role === \"Client\" && (\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"comment\"\n                    label=\"Add comment\"\n                    value={quote?.comment}\n                    disabled={quote?.status !== \"Pending\"}\n                    onChange={onHandleCommentChange}\n                  />\n                </Grid>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          component=\"a\"\n          aria-label=\"Print invoice\"\n          rel=\"noreferrer\"\n          href={`${INVOICE_ROUTE}/${quote?._id}?downloadType=proposal`}\n          target=\"_blank\"\n        >\n          Download PDF\n        </Button>\n        {(quote?.status === \"Pending\" ||\n          quote?.status === \"Draft\" ||\n          hasExpired(quote?.expiryDate)) && (\n          <ButtonGroup variant=\"outlined\" color=\"primary\">\n            {user.role !== \"Client\" ? (\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => onQuoteUpdate()}\n                disabled={loading}\n              >\n                <SaveIcon />\n                {loading ? \"Saving,...\" : \"Save\"}\n              </Button>\n            ) : (\n              quote?.status === \"Pending\" && (\n                <>\n                  <Button\n                    aria-label=\"Change status\"\n                    color=\"primary\"\n                    disabled={loading}\n                    onClick={() => onQuoteUpdate(\"Accepted\")}\n                  >\n                    <ThumbUpIcon />\n                    {loading ? \"Saving,...\" : \"Accept\"}\n                  </Button>\n                  <Button\n                    aria-label=\"Change status\"\n                    color=\"secondary\"\n                    disabled={loading}\n                    onClick={() => onQuoteUpdate(\"Declined\")}\n                  >\n                    <ThumbDownIcon />\n                    {loading ? \"Saving,...\" : \"Decline\"}\n                  </Button>\n                </>\n              )\n            )}\n          </ButtonGroup>\n        )}\n        <Button color=\"default\" variant=\"contained\" onClick={() => setOpen()}>\n          <CancelIcon />\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { store } from \"../store\";\nimport { UPDATE_INVOICE, GET_INVOICES } from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const getInvoices = () => {\n  store.dispatch({\n    type: GET_INVOICES,\n    payload: http.get(\"/invoice\"),\n  });\n};\nexport const updateInvoice = (invoiceInfo = {}, invoiceId = \"\") => {\n  const { quoteId, ...rest } = invoiceInfo;\n  store.dispatch({\n    type: UPDATE_INVOICE,\n    payload: http.patch(`/invoice/${invoiceId}`, rest),\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardActions,\n} from \"@material-ui/core\";\nimport { ComputerOutlined } from \"@material-ui/icons\";\nimport { Loading } from \"components/loading.component\";\nimport { useStyles } from \"styles/formStyles\";\nimport { updateInvoice } from \"redux/actions/invoice\";\n\nconst initialState = {\n  amount: \"\",\n  status: \"pending\",\n};\nconst invoiceStatuses = [\"pending\", \"paid\"];\nexport const InvoiceRegistration = ({ action = \"add\", currentItem = null }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState(initialState);\n  const inviceState = useSelector((state) => state);\n\n  const {\n    invoiceEdit: { loading: updating, loaded: updated },\n  } = inviceState;\n\n  useEffect(() => {\n    if (updated) {\n      setValues(initialState);\n    }\n  }, [updated]);\n  useEffect(() => {\n    if (currentItem) {\n      const { status, amount } = currentItem;\n      setValues({ amount, status });\n    }\n  }, [currentItem]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setValues({ ...values, [name]: value });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (action !== \"add\" && currentItem) {\n      updateInvoice(values, currentItem._id);\n    }\n  };\n  return (\n    <Card component=\"main\" className={classes.root}>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ComputerOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          Invoice\n        </Typography>\n        {updating && <Loading />}\n        {currentItem ? (\n          <form className={classes.form} onSubmit={submitHandler}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  className={classes.input}\n                  name=\"amount\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"Invoice amount\"\n                  onChange={onHandleChange}\n                  value={values.amount}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"invoice-status\">Status</InputLabel>\n                  <Select\n                    labelId=\"invoice-status\"\n                    value={values.status}\n                    name=\"status\"\n                    onChange={onHandleChange}\n                    disabled={action !== \"change\"}\n                  >\n                    <MenuItem value=\"\">---</MenuItem>\n                    {invoiceStatuses.map((status, choiceIdx) => (\n                      <MenuItem value={status} key={choiceIdx}>\n                        {status.toUpperCase()}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <CardActions>\n              {action === \"add\" ? (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                >\n                  Save\n                </Button>\n              ) : (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={updating}\n                >\n                  Change invoice status\n                </Button>\n              )}\n            </CardActions>\n          </form>\n        ) : (\n          <Typography variant=\"caption\">\n            You can change a status of an invoice\n          </Typography>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#8967fc\",\n    height: 100,\n    width: 100,\n  },\n  input: {\n    fontSize: 16,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    color: \"black\",\n    fontSize: 16,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#8967fc\",\n    borderRadius: 5,\n    float: \"left\",\n    maxWidth: \"100%\",\n    color: \"white\",\n    fontSize: 16,\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: \"inline-block\",\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  root: {},\n  content: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    textAlgin: \"center\",\n  },\n  name: {\n    marginTop: theme.spacing(1),\n  },\n  removeBotton: {\n    width: \"100%\",\n  },\n}));\n","import React from \"react\";\nimport {\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport PhoneInput from \"material-ui-phone-number\";\n\nconst userRoles = [\"Client\", \"Manager\"];\nexport const CustomerInfo = ({ userInfo = {}, onHandleChange }) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <TextField\n          name=\"firstName\"\n          variant=\"outlined\"\n          fullWidth\n          id=\"firstName\"\n          label=\"First Name\"\n          onChange={onHandleChange}\n          value={userInfo.firstName}\n          autoFocus\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          name=\"lastName\"\n          variant=\"outlined\"\n          fullWidth\n          id=\"lastName\"\n          label=\"Last Name\"\n          onChange={onHandleChange}\n          value={userInfo.lastName}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"companyName\"\n          label=\"Company Name\"\n          autoComplete=\"Company Name\"\n          value={userInfo.companyName}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"companyUrl\"\n          label=\"Company URL\"\n          value={userInfo.companyUrl}\n          onChange={onHandleChange}\n        />\n      </Grid>\n    </Grid>\n  );\n};\nexport const ContactInfo = ({\n  userInfo = {},\n  onHandleChange,\n  onPhoneChange,\n}) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          value={userInfo.email}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <PhoneInput\n          variant=\"outlined\"\n          fullWidth\n          autoComplete=\"phone number\"\n          label=\"Phone Number\"\n          defaultCountry=\"rw\"\n          countryCodeEditable={false}\n          value={userInfo.phoneNumber}\n          onChange={onPhoneChange}\n        />\n      </Grid>\n    </Grid>\n  );\n};\nexport const LocationInfo = ({ userInfo = {}, onHandleChange }) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item lg={6} md={6} xl={6} xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"country\"\n          autoComplete=\"country\"\n          value={userInfo.country}\n          disabled\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item lg={6} md={6} xl={6} xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label=\"City\"\n          name=\"city\"\n          autoComplete=\"city\"\n          value={userInfo.city}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label=\"State\"\n          name=\"state\"\n          autoComplete=\"state\"\n          value={userInfo.state}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label=\"Postal code\"\n          name=\"postalCode\"\n          value={userInfo.postalCode}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"address\"\n          label=\"Your Address\"\n          type=\"address\"\n          id=\"address\"\n          autoComplete=\"address\"\n          value={userInfo.address}\n          onChange={onHandleChange}\n        />\n      </Grid>\n    </Grid>\n  );\n};\nexport const RoleInfo = ({ userInfo = {}, onHandleChange }) => {\n  return (\n    <Grid container spacing={1}>\n      <FormControl variant=\"outlined\" fullWidth>\n        <InputLabel id=\"user-role\">Role</InputLabel>\n        <Select\n          labelId=\"user-role\"\n          value={userInfo.role}\n          name=\"role\"\n          onChange={onHandleChange}\n        >\n          <MenuItem value=\"\">---</MenuItem>\n          {userRoles.map((role, roleIdx) => (\n            <MenuItem value={role} key={roleIdx}>\n              {role.toUpperCase()}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Grid>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  Grid,\n  Typography,\n  Container,\n  Stepper,\n  Step,\n  StepButton,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport LoadingBox from \"components/loading.component\";\nimport { getUsersList, registerUser, updateUser } from \"redux/actions/user\";\nimport { useStyles } from \"./styles\";\nimport {\n  CustomerInfo,\n  ContactInfo,\n  LocationInfo,\n  RoleInfo,\n} from \"./RegistrationSteps\";\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  companyName: \"\",\n  companyUrl: \"\",\n  email: \"\",\n  phoneNumber: \"\",\n  address: \"\",\n  country: \"\",\n  state: \"\",\n  city: \"\",\n  postalCode: \"\",\n  role: \"client\",\n};\nconst steps = [\"User information\", \"Contact\", \"Location\", \"Permission\"];\n\nexport const Registration = ({ action = \"add\", currentItem = null }) => {\n  const classes = useStyles();\n  const [userInfo, setUserInfo] = useState(initialState);\n  const [activeStep, setActiveStep] = useState(0);\n  const [completed, setCompleted] = useState(new Set([0]));\n\n  const userRegisterState = useSelector((state) => state);\n  const {\n    register: { loading: registering, loaded: registered },\n    userEdit: { loading: updating, loaded: updated },\n  } = userRegisterState;\n\n  useEffect(() => {\n    if (registered || updated) {\n      getUsersList();\n      setUserInfo(initialState);\n      setActiveStep(0);\n      setCompleted(new Set([0]));\n    }\n  }, [registered, updated]);\n  useEffect(() => {\n    if (currentItem && action === \"edit\") {\n      setUserInfo(currentItem);\n      setActiveStep(0);\n      setCompleted(new Set([0]));\n    }\n  }, [currentItem, action]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setUserInfo({ ...userInfo, [name]: value });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (action === \"add\") {\n      registerUser(userInfo);\n    }\n    if (action === \"edit\") {\n      updateUser(userInfo);\n    }\n  };\n  const onPhoneChange = (value, country) => {\n    setUserInfo({ ...userInfo, phoneNumber: value, country: country.name });\n  };\n  const totalSteps = () => steps.length;\n\n  const completedSteps = () => completed.size;\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const isLastStep = () => activeStep === totalSteps() - 1;\n\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? steps.findIndex((step, i) => !completed.has(i))\n        : activeStep + 1;\n\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n    setCompleted((prevCompleted) => {\n      const newCompleted = new Set(prevCompleted);\n      newCompleted.add(step);\n      return newCompleted;\n    });\n  };\n\n  const isStepComplete = (step) => completed.has(step);\n  const getStepContent = (step) => {\n    const stepsContent = [\n      {\n        label: \"Step 1: Fill customer information\",\n        component: (\n          <CustomerInfo userInfo={userInfo} onHandleChange={onHandleChange} />\n        ),\n      },\n      {\n        label: \"Step 2: Customer contacts\",\n        component: (\n          <ContactInfo\n            userInfo={userInfo}\n            onHandleChange={onHandleChange}\n            onPhoneChange={onPhoneChange}\n          />\n        ),\n      },\n      {\n        label: \"Step 3: Location\",\n        component: (\n          <LocationInfo userInfo={userInfo} onHandleChange={onHandleChange} />\n        ),\n      },\n      {\n        label: \"Step 4: Customer role\",\n        component: (\n          <RoleInfo userInfo={userInfo} onHandleChange={onHandleChange} />\n        ),\n      },\n    ];\n    return stepsContent[step];\n  };\n  return (\n    <Container component=\"main\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          {currentItem ? `Update ${currentItem.firstName}` : \"REGISTER USER\"}\n        </Typography>\n        <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n          {steps.map((label, index) => (\n            <Step key={index}>\n              <StepButton\n                onClick={handleStep(index)}\n                completed={isStepComplete(index)}\n              >\n                {label}\n              </StepButton>\n            </Step>\n          ))}\n        </Stepper>\n        {registering && <LoadingBox></LoadingBox>}\n        <form className={classes.form}>\n          <div>\n            <Grid className={classes.instructions}>\n              {getStepContent(activeStep).component}\n            </Grid>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                Next\n              </Button>\n              {action === \"add\" && (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={registering}\n                  onClick={submitHandler}\n                >\n                  Save\n                </Button>\n              )}\n              {action === \"edit\" && (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={updating}\n                  onClick={submitHandler}\n                >\n                  {currentItem ? `Update ${currentItem.firstName}` : \"Update\"}\n                </Button>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </Container>\n  );\n};\n","import React, { forwardRef, useState, useEffect } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Slide,\n  Typography,\n  Avatar,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyles } from \"./styles\";\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const CustomerModel = ({\n  open = false,\n  setOpen,\n  currentItem = null,\n}) => {\n  const classes = useStyles();\n  const [customer, setCustomer] = useState({});\n  useEffect(() => {\n    if (currentItem) {\n      setCustomer(currentItem);\n    }\n  }, [currentItem]);\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={setOpen}\n      aria-labelledby=\"customer-name\"\n      aria-describedby=\"customer-description\"\n      maxWidth=\"lg\"\n    >\n      <DialogTitle id=\"customer-name\">\n        {`Customer names: ${customer.firstName}`}\n      </DialogTitle>\n      <DialogContent>\n        <Avatar className={classes.avatar} src={customer.avatar} />\n        <Typography className={classes.name} gutterBottom variant=\"h3\">\n          {customer.firstName} {customer.lastName}({customer.role})\n        </Typography>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} md={8} lg={8}>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {customer.city}, {customer.state}, {customer.country}\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {customer.phoneNumber}\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {customer.email}\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"body2\">\n              Postal code: {customer.postalCode}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} lg={4}>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              Company: {customer.companyName}\n              <br />\n              Company URL:{customer.companyUrl}\n              <br />\n            </Typography>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nexport const AlertConfirm = ({\n  open,\n  setOpen,\n  onConfirmYes,\n  loading = false,\n  message = \"\",\n}) => {\n  return (\n    <Dialog aria-labelledby=\"dialog-title\" onClose={setOpen} open={open}>\n      <DialogTitle id=\"dialog-title\">Confirm action</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{message}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={setOpen}>\n          Cancel\n        </Button>\n        <Button color=\"primary\" disabled={loading} onClick={onConfirmYes}>\n          {loading ? \"Loading,...\" : \"Yes\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Typography,\n  Divider,\n  Button,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  details: {\n    display: \"flex\",\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0,\n  },\n  progress: {\n    marginTop: theme.spacing(2),\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport const AccountProfile = ({ user }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <div className={classes.details}>\n          <div>\n            <Typography gutterBottom variant=\"h2\">\n              {user.firstName} {user.lastName}\n            </Typography>\n            <Typography\n              className={classes.locationText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {user.city}, {user.country}\n            </Typography>\n            <Typography\n              className={classes.dateText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {moment().format(\"hh:mm A\")} (\n              {Intl.DateTimeFormat().resolvedOptions().timeZone})\n            </Typography>\n          </div>\n          <Avatar className={classes.avatar} src={user.avatar} />\n        </div>\n        <div className={classes.progress}>\n          <Typography variant=\"body1\">My profile</Typography>\n          <LinearProgress value={100} variant=\"determinate\" />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button className={classes.uploadButton} color=\"primary\" variant=\"text\">\n          Upload picture\n        </Button>\n        <Button variant=\"text\">Remove picture</Button>\n      </CardActions>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography,\n} from \"@material-ui/core\";\n\nexport const ConfirmUpdate = ({\n  open,\n  setOpen,\n  userInfo,\n  onChange,\n  onConfirm,\n}) => {\n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"md\"\n      onClose={setOpen}\n      aria-labelledby=\"confirm-dialog\"\n    >\n      <DialogTitle id=\"confirm-dialog\">Confirm update</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To update your information to this website, please enter your password\n          address here.\n        </DialogContentText>\n        <Typography color=\"error\">\n          AFTER UPDATING YOUR INFORMATION THE SYSTEM WILL LOG YOU OUT\n        </Typography>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          name=\"password\"\n          value={userInfo.password}\n          label=\"Enter your password\"\n          type=\"password\"\n          fullWidth\n          onChange={onChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={onConfirm} color=\"primary\">\n          Confirm update\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport PhoneInput from \"material-ui-phone-number\";\nimport { ConfirmUpdate } from \"./ConfirmUpdate\";\nimport { updateProfile } from \"redux/actions/user\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  companyName: \"\",\n  companyUrl: \"\",\n  email: \"\",\n  phoneNumber: \"\",\n  address: \"\",\n  country: \"\",\n  state: \"\",\n  city: \"\",\n  password: \"\",\n  postalCode: \"\",\n  role: \"client\",\n};\nexport const AccountDetails = ({ user, loading = false }) => {\n  const [userInfo, setUserInfo] = useState(initialState);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (user.role) {\n      setUserInfo(user);\n    }\n  }, [user]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    setUserInfo({ ...userInfo, [name]: value });\n  };\n  const onPhoneChange = (value, country) => {\n    setUserInfo({ ...userInfo, phoneNumber: value, country: country.name });\n  };\n\n  return (\n    <Card className={classes.root}>\n      <form autoComplete=\"off\" noValidate>\n        <ConfirmUpdate\n          open={openConfirm}\n          setOpen={() => setOpenConfirm(false)}\n          userInfo={userInfo}\n          onChange={handleChange}\n          onConfirm={() => {\n            updateProfile(userInfo);\n            setOpenConfirm(false);\n          }}\n        />\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\n        {/* <Typography variant=\"h6\" color=\"error\" align=\"right\">\n          You will be logged out after successful update profile\n        </Typography> */}\n        <Divider />\n        <CardContent>\n          <Grid container spacing={2}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                margin=\"dense\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={userInfo.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                margin=\"dense\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={userInfo.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Company name\"\n                margin=\"dense\"\n                name=\"companyName\"\n                onChange={handleChange}\n                required\n                value={userInfo.companyName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Company URL\"\n                margin=\"dense\"\n                name=\"companyUrl\"\n                onChange={handleChange}\n                required\n                value={userInfo.companyUrl}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                margin=\"dense\"\n                name=\"email\"\n                onChange={handleChange}\n                disabled\n                value={userInfo.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <PhoneInput\n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"phone number\"\n                label=\"Phone Number\"\n                defaultCountry=\"rw\"\n                margin=\"dense\"\n                countryCodeEditable={false}\n                value={userInfo.phoneNumber}\n                onChange={onPhoneChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"address\"\n                label=\"Your Address\"\n                margin=\"dense\"\n                autoComplete=\"address\"\n                value={userInfo.address}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item md={3} xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"City\"\n                name=\"city\"\n                margin=\"dense\"\n                autoComplete=\"city\"\n                value={userInfo.city}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item md={3} xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"State\"\n                name=\"state\"\n                margin=\"dense\"\n                autoComplete=\"state\"\n                value={userInfo.state}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item md={3} xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Postal code\"\n                name=\"postalCode\"\n                margin=\"dense\"\n                value={userInfo.postalCode}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item md={3} xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"country\"\n                margin=\"dense\"\n                autoComplete=\"country\"\n                value={userInfo.country}\n                disabled\n                onChange={handleChange}\n                onClick={() => updateProfile(userInfo)}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={loading}\n            onClick={() => updateProfile(userInfo)}\n          >\n            {loading ? \"Updating\" : \"Save information\"}\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { AccountProfile } from \"./AccountProfile\";\nimport { AccountDetails } from \"./AccountDetails\";\nimport { useSelector } from \"react-redux\";\nimport { USER_INFO } from \"utils/constants\";\nimport { notifier } from \"utils/notifier\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport const UserProfile = () => {\n  const classes = useStyles();\n  const {\n    login: { userInfo },\n    profileEdit: { loading, loaded, userInfo: updatedInfo },\n  } = useSelector((state) => state);\n\n  useEffect(() => {\n    if (loaded) {\n      notifier.success(\"Your account has been successfully updated.\");\n      localStorage.setItem(USER_INFO, JSON.stringify(updatedInfo));\n      setTimeout(() => {\n        window.location.reload();\n      }, 3000);\n    }\n  }, [loaded, updatedInfo]);\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item lg={4} md={6} xl={4} xs={12}>\n          <AccountProfile user={userInfo.user} />\n        </Grid>\n        <Grid item lg={8} md={6} xl={8} xs={12}>\n          <AccountDetails user={userInfo.user} loading={loading} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography,\n} from \"@material-ui/core\";\n\nexport const EmailDialog = ({\n  open,\n  setOpen,\n  userInfo,\n  onChange,\n  onConfirm,\n  loading = false,\n}) => {\n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"md\"\n      onClose={setOpen}\n      aria-labelledby=\"confirm-dialog\"\n    >\n      <DialogTitle id=\"confirm-dialog\">Email Dialog</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To reset your password, please enter your email address here.\n        </DialogContentText>\n        <Typography color=\"secondary\">\n          WE WILL SEND YOU A LINK TO HELP YOU RESET YOUR PASSWORD\n        </Typography>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          name=\"email\"\n          value={userInfo.email}\n          label=\"Enter your email\"\n          type=\"email\"\n          fullWidth\n          onChange={onChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={onConfirm} color=\"primary\" disabled={loading}>\n          {loading ? \"Loading,...\" : \"Send the link\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LoadingBox from \"components/loading.component\";\nimport Logo from \"assets/ari_cube.png\";\nimport { sendLink, signin } from \"redux/actions/user\";\nimport { USER_INFO } from \"utils/constants\";\nimport { Link } from \"@material-ui/core\";\nimport { EmailDialog } from \"./EmailDialog\";\nimport { notifier } from \"utils/notifier\";\n\nconst initialState = { email: \"\", password: \"\" };\nexport const LoginPage = (props) => {\n  const [logins, setLogins] = useState(initialState);\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const redirect = props.location.search\n    ? props.location.search.split(\"=\")[1]\n    : \"dashboard/home\";\n  const signState = useSelector((state) => state);\n  const {\n    login: { userInfo, loading },\n    linkSend: { loaded, loading: sending },\n  } = signState;\n  useEffect(() => {\n    if (userInfo.user.fullName) {\n      localStorage.setItem(USER_INFO, JSON.stringify(userInfo));\n      window.location.href = redirect;\n      setLogins(initialState);\n    }\n  }, [props.history, redirect, userInfo]);\n  useEffect(() => {\n    if (loaded) {\n      setOpenDialog(false);\n      notifier.success(\"Email was sent to your mail box\");\n      setLogins(initialState);\n    }\n  }, [loaded]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setLogins({ ...logins, [name]: value });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    signin(logins);\n  };\n  return (\n    <div className=\"login-page\">\n      <EmailDialog\n        open={openDialog}\n        setOpen={() => setOpenDialog(false)}\n        userInfo={logins}\n        onChange={onHandleChange}\n        onConfirm={() => sendLink(logins.email)}\n        loading={sending}\n      />\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <img src={Logo} alt=\"#\" className=\"logo\" />\n        </div>\n        <div>\n          <h1>Sign In to ARI CUBE</h1>\n        </div>\n        {loading && <LoadingBox></LoadingBox>}\n        <div>\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            required\n            onChange={onHandleChange}\n            value={logins.email}\n            className=\"login-input\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password\"\n            required\n            onChange={onHandleChange}\n            value={logins.password}\n            className=\"login-input\"\n          />\n        </div>\n        <div>\n          <button className=\"login-input btn-login primary\" type=\"submit\">\n            Login\n          </button>\n          <Link\n            component=\"button\"\n            variant=\"body2\"\n            onClick={() => setOpenDialog(true)}\n          >\n            Forget password?\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { IMAGES_PATH } from \"utils/constants\";\n\nexport const initialState = {\n  name: \"\",\n  customer: \"\",\n  project: \"\",\n  price: \"\",\n  status: \"\",\n  sku: \"\",\n  bgColor: \"#FAFAFA\",\n  description: \"\",\n  website: \"\",\n  image: \"\",\n};\nexport const productStatuses = [\"QA\", \"COMPLETED\"];\nexport const toOrbitProp = (type = \"cameraOrbit\", imageProp = {}) => {\n  const theImgOrbitProp = imageProp[type];\n  let orbitProp = theImgOrbitProp?.default;\n  if (!theImgOrbitProp?.useDefault) {\n    orbitProp = \"\";\n\n    const customAttr = theImgOrbitProp?.custom;\n\n    orbitProp += `${customAttr?.side}deg`;\n    orbitProp += ` ${customAttr?.ud}deg`;\n    orbitProp += ` ${customAttr?.side}%`;\n  }\n  return orbitProp;\n};\nexport const toAttributes = (imageProp) => {\n  const { skyboxImage, environmentImage } = imageProp;\n  let attribs = {};\n  if (imageProp.disableZoom) {\n    attribs[\"disable-zoom\"] = \"true\";\n  }\n  if (imageProp.autoRotate) {\n    attribs[\"auto-rotate\"] = \"true\";\n  }\n  if (skyboxImage?.active && skyboxImage?.image) {\n    attribs[\"skybox-image\"] = IMAGES_PATH + skyboxImage?.image;\n  }\n  if (environmentImage?.active && environmentImage?.image) {\n    attribs[\"environment-image\"] = IMAGES_PATH + environmentImage?.image;\n  }\n  return attribs;\n};\n","import { store } from \"../store\";\nimport {\n  ADD_ANALYTIC,\n  ADD_NEW_PRODUCT,\n  DELETE_ATTR_IMAGE,\n  DELETE_PRODUCT,\n  GENERATE_QR,\n  GET_ANALYTICS,\n  GET_PRODUCT,\n  GET_PRODUCTS,\n  GET_PRODUCT_IMAGES,\n  RESET_UPLOAD_A_IMAGE,\n  UPDATE_ATTRIBUTES,\n  UPDATE_PRODUCT,\n  UPLOAD_ATTR_IMAGE,\n  UPLOAD_PRODUCT_IMAGES,\n} from \"./actionTypes\";\nimport { http } from \"utils/http\";\nimport { BASE_URL } from \"utils/constants\";\n\nconst PRODUCTS_URL = \"/products\";\nexport const uploadProductImages = (\n  files,\n  imageType = \"image3d\",\n  otherAttribs = {}\n) => {\n  const formData = new FormData();\n  for (const key of Object.keys(files)) {\n    formData.append(\"productFiles\", files[key]);\n  }\n  const { productId, imgType } = otherAttribs;\n  const config = {\n    headers: { \"Content-Type\": \"multipart/form-data\" },\n  };\n  let uploadUrl = `${PRODUCTS_URL}/upload/${imageType}`;\n  let actionType = UPLOAD_PRODUCT_IMAGES;\n  if (productId && imgType) {\n    uploadUrl += `?productId=${productId}&imgType=${imgType}`;\n  }\n  if (imageType === \"attr-image\") {\n    actionType = UPLOAD_ATTR_IMAGE;\n  }\n  store.dispatch({\n    type: actionType,\n    payload: http.post(uploadUrl, formData, config),\n  });\n};\nexport const addNewProduct = (productBody) => {\n  store.dispatch({\n    type: ADD_NEW_PRODUCT,\n    payload: http.post(PRODUCTS_URL, productBody),\n  });\n};\nexport const getProducts = ({ projectId }) => {\n  let params = \"?\";\n  if (projectId) {\n    params += `project=${projectId}`;\n  }\n  store.dispatch({\n    type: GET_PRODUCTS,\n    payload: http.get(PRODUCTS_URL + params),\n  });\n};\nexport const getProductImages = (productId = \"\") => {\n  store.dispatch({\n    type: GET_PRODUCT_IMAGES,\n    payload: http.get(`${PRODUCTS_URL}/files/${productId}`),\n  });\n};\nexport const editProduct = (productBody) => {\n  const { _id, __v, ...rest } = productBody;\n  store.dispatch({\n    type: UPDATE_PRODUCT,\n    payload: http.patch(`${PRODUCTS_URL}/${_id}`, rest),\n  });\n};\nexport const updateAttributes = (attributesBody = {}, productId = \"\") => {\n  store.dispatch({\n    type: UPDATE_ATTRIBUTES,\n    payload: http.patch(\n      `${PRODUCTS_URL}/attributes/${productId}`,\n      attributesBody\n    ),\n  });\n};\nexport const getProduct = (productId, addVisit = false) => {\n  const config = {};\n  const params = addVisit ? \"?analyticType=visit\" : \"\";\n  const ancOrigins = document.location?.ancestorOrigins || [];\n  if (ancOrigins.length > 0) {\n    config.headers = { \"ancestor-origin\": ancOrigins[0] };\n  }\n  store.dispatch({\n    type: GET_PRODUCT,\n    payload: http.get(`${PRODUCTS_URL}/${productId + params}`, config),\n  });\n};\nexport const uploadAttrImage = (formData, imageType = \"\", productId = {}) => {\n  const config = {\n    headers: { \"Content-Type\": \"multipart/form-data\" },\n  };\n  let uploadUrl = `${PRODUCTS_URL}/upload/${imageType}`;\n  uploadUrl += `/${productId}`;\n  store.dispatch({\n    type: UPLOAD_ATTR_IMAGE,\n    payload: http.post(uploadUrl, formData, config),\n  });\n};\nexport const resetUploadAttrImg = () => {\n  store.dispatch({\n    type: RESET_UPLOAD_A_IMAGE,\n  });\n};\nexport const deleteAttrImg = (productId = \"\", imgFile = \"\") => {\n  const url = `${PRODUCTS_URL}/${productId}/image/${imgFile}`;\n  store.dispatch({\n    type: DELETE_ATTR_IMAGE,\n    payload: http.delete(url),\n  });\n};\nexport const getProdAnalytics = (filters = {}) => {\n  let params = `?time=${filters.time || \"allTime\"}`;\n  if (filters.project) {\n    params += `&project=${filters.project}`;\n  }\n  store.dispatch({\n    type: GET_ANALYTICS,\n    payload: http.get(`${PRODUCTS_URL}/get/analytics${params}`),\n  });\n};\nexport const addNewAnalytic = (productId, type = \"visit\") => {\n  const params = `?analyticType=${type}`;\n  store.dispatch({\n    type: ADD_ANALYTIC,\n    payload: http.post(`${PRODUCTS_URL}/${productId}/analytics${params}`),\n  });\n};\nexport const generateQR = (productId) => {\n  const qrCodeData = {\n    data: `${BASE_URL}/products/${productId}`,\n    size: \"200x200\",\n    bgcolor: \"FFFFFF\",\n    color: \"9722FF\",\n  };\n  const params = Object.entries(qrCodeData)\n    .map((pair) => pair.map(encodeURIComponent).join(\"=\"))\n    .join(\"&\");\n  store.dispatch({\n    type: GENERATE_QR,\n    payload: `${process.env.REACT_APP_QR_URL}/create-qr-code/?${params}`,\n  });\n};\nexport const deleteProduct = (productId) => {\n  store.dispatch({\n    type: DELETE_PRODUCT,\n    payload: http.delete(`${PRODUCTS_URL}/${productId}`),\n  });\n};\n","const orbits = { side: 50, ud: 50, io: 50 };\nexport const initialStates = {\n  disableZoom: false,\n  autoRotate: true,\n  autoRotateDelay: 3000,\n  backgroundColor: \"#ffffff\",\n  cameraOrbit: { default: \"0deg 75deg 105%\", custom: orbits, useDefault: true },\n  minCameraOrbit: {\n    default: \"Infinity 22.5deg auto\",\n    custom: orbits,\n    useDefault: true,\n  },\n  maxCameraOrbit: {\n    default: \"Infinity 157.5deg auto\",\n    custom: orbits,\n    useDefault: true,\n  },\n  cameraTarget: { default: \"auto auto auto\", custom: \"\", useDefault: true },\n  fieldOfView: 10,\n  exposure: 1,\n  shadowIntensity: 0,\n  shadowSoftness: 0,\n  alt: \"\",\n  scale: \"auto\",\n  placement: \"floor\",\n  metalness: 0,\n  roughness: 0,\n  arButtonImage: \"\",\n  skyboxImage: {\n    active: false,\n    image: \"\",\n  },\n  environmentImage: {\n    active: false,\n    image: \"\",\n  },\n  imageFiles: [],\n  hotspots: [],\n};\n","import React, { useEffect, useState } from \"react\";\nimport { toAttributes, toOrbitProp } from \"pages/Product/productConstants\";\nimport { IMAGES_3D_PATH, IMAGES_PATH } from \"utils/constants\";\nimport { addNewAnalytic, getProduct } from \"redux/actions/product\";\nimport { initialStates } from \"pages/Product/AttributeEditor/initialStates\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\n\nexport const ProductViewPage = ({\n  match,\n  styles = { width: \"100%\", height: \"100vh\" },\n  addVisit = true,\n}) => {\n  const [attributes, setAttributes] = useState(initialStates);\n  const appState = useSelector((state) => state);\n  const { productId } = match.params;\n  const {\n    productGet: { product, loaded, loading },\n    analyticAdd: { loading: adding },\n  } = appState;\n  useEffect(() => {\n    if (productId) {\n      getProduct(productId, addVisit);\n    }\n  }, [productId, addVisit]);\n  useEffect(() => {\n    if (loaded) {\n      const { src, ...otherProps } = product.image;\n      setAttributes(otherProps);\n    }\n  }, [loaded, product]);\n  useEffect(() => {\n    const modelViewer = document.querySelector(\"model-viewer#image3d-viewer\");\n    if (loaded && modelViewer) {\n      modelViewer.addEventListener(\"load\", (ev) => {\n        let material = modelViewer.model.materials[0];\n        material.pbrMetallicRoughness.setMetallicFactor(attributes.metalness);\n        material.pbrMetallicRoughness.setRoughnessFactor(attributes.roughness);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaded, attributes.metalness, attributes.roughness]);\n  if (loading) return <Loading />;\n  if (!Boolean(product.imagesSrc)) return null;\n  return (\n    <model-viewer\n      id=\"image3d-viewer\"\n      src={`${IMAGES_3D_PATH}/${product.imagesSrc?.glb}`}\n      ios-src={`${IMAGES_3D_PATH}/${product.imagesSrc?.usdz}`}\n      style={{\n        ...styles,\n        border: \"none\",\n        backgroundColor: attributes.backgroundColor,\n      }}\n      auto-rotate-delay={attributes.autoRotateDelay}\n      background-color={attributes.backgroundColor}\n      camera-orbit={toOrbitProp(\"cameraOrbit\", attributes)}\n      min-camera-orbit={toOrbitProp(\"minCameraOrbit\", attributes)}\n      max-camera-orbit={toOrbitProp(\"maxCameraOrbit\", attributes)}\n      camera-target={toOrbitProp(\"cameraTarget\", attributes)}\n      field-of-view={attributes.fieldOfView}\n      exposure={attributes.exposure}\n      shadow-intensity={attributes.shadowIntensity}\n      shadow-softness={attributes.shadowSoftness}\n      alt={attributes.alt}\n      ar-scale={attributes.scale}\n      ar-placement={attributes.placement}\n      ar\n      ar-modes=\"webxr scene-viewer quick-look\"\n      camera-controls\n      autoplay\n      quick-look-browsers=\"safari chrome firefox\"\n      loading=\"eager\"\n      {...toAttributes(attributes)}\n    >\n      {Boolean(attributes.arButtonImage) && (\n        <input\n          type=\"image\"\n          src={IMAGES_PATH + attributes.arButtonImage}\n          id=\"ar-button\"\n          className=\"ar-button\"\n          slot=\"ar-button\"\n          alt={attributes.alt}\n          disabled={adding}\n          onClick={() => addNewAnalytic(product._id, \"click\")}\n        />\n      )}\n      {attributes.hotspots?.map((hs, hsIdx) => (\n        <button\n          key={hsIdx}\n          slot={`hotspot-${hsIdx}`}\n          className=\"hotspot\"\n          style={{ backgroundColor: hs.bgColor }}\n          data-position={hs.dataPosition}\n          data-normal={hs.dataNormal}\n        >\n          <div className=\"annotation\">{hs.dataText}</div>\n        </button>\n      ))}\n    </model-viewer>\n  );\n};\n","import React from \"react\";\nimport { ProductViewPage } from \"pages/ProductView\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\n\nexport const ViewProductDialog = ({ productId, open, setOpen }) => {\n  const match = { params: { productId } };\n  return (\n    <Dialog\n      open={open}\n      keepMounted\n      onClose={setOpen}\n      maxWidth=\"lg\"\n      fullWidth\n      aria-labelledby=\"view-product\"\n      aria-describedby=\"project-description\"\n    >\n      <DialogTitle id=\"view-product\">Asset View</DialogTitle>\n      <DialogContent>\n        <Grid container>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <ProductViewPage\n              match={match}\n              styles={{ width: \"100%\", height: \"70vh\" }}\n              addVisit={false}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"secondary\" onClick={() => setOpen()}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport HtmlParser from \"react-html-parser\";\nimport { DraftEditor } from \"components/DraftEditor\";\nimport { EditorState } from \"draft-js\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  ListItemText,\n  ListItem,\n  List,\n  Typography,\n  IconButton,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  CardActions,\n  CardHeader,\n  TextField,\n  Divider,\n  Box,\n} from \"@material-ui/core\";\nimport {\n  CloudDownloadOutlined as DownloadIcon,\n  ExpandMore as ExpandMoreIcon,\n  ComputerOutlined,\n} from \"@material-ui/icons\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport TextInfoContent from \"@mui-treasury/components/content/textInfo\";\nimport { useBlogTextInfoContentStyles } from \"@mui-treasury/styles/textInfoContent/blog\";\nimport {\n  addNewLog,\n  getProjectDetails,\n  getProjectHistories,\n  getProjectProds,\n} from \"redux/actions/project\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\nimport { INVOICE_ROUTE } from \"utils/constants\";\nimport { projectTypes } from \"pages/Project/projectConstants\";\nimport { useStyles } from \"styles/formStyles\";\nimport { notifUser, toHtml } from \"utils/helper\";\n// import { AddProductDialog } from \"./AddProductDialog\";\nimport { NoDisplayData } from \"components/NoDisplayData\";\nimport { ViewProductDialog } from \"./ViewProductDialog\";\n\nconst logInitialState = { title: \"\", description: \"\" };\n// const productInitialState = { product: \"\", website: \"\", projectId: \"\" };\nexport const ProjectDetailPage = ({ match }) => {\n  const classes = useStyles();\n\n  const [projectType, setProjectType] = useState({});\n  const [newLog, setNewLog] = useState(logInitialState);\n  // const [newProduct, setNewProduct] = useState(productInitialState);\n  const [currentProd, setCurrentProd] = useState({});\n  // const [openAddProduct, setOpenAddProduct] = useState(false);\n  const [openViewProduct, setOpenViewProduct] = useState(false);\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const { projectId } = match.params;\n\n  const appState = useSelector((state) => state);\n  const {\n    historiesGet: { loading, histories },\n    projectGet: { loading: projectFetching, loaded, project },\n    logAdd: { loading: adding, loaded: done },\n    login: {\n      userInfo: { user },\n    },\n    // projectAddProd: { loaded: productAdded },\n    projectProdsGet: { loading: ppFetching, projProds },\n  } = appState;\n  useEffect(() => {\n    if (projectId) {\n      // Fetch the project\n      getProjectDetails(projectId);\n      getProjectProds(projectId);\n    }\n  }, [projectId]);\n  useEffect(() => {\n    if (projectId && loaded) {\n      // setNewProduct((prev) => ({ ...prev, projectId }));\n      getProjectHistories(projectId);\n      const currentPType = projectTypes.find((e) => e.name === project.type);\n      setProjectType(currentPType);\n    }\n  }, [projectId, loaded, project.type]);\n  useEffect(() => {\n    if (done) {\n      getProjectHistories(projectId);\n      setNewLog(logInitialState);\n      setEditorState(EditorState.createEmpty());\n    }\n  }, [done, projectId]);\n  // useEffect(() => {\n  //   if (productAdded) {\n  //     setNewProduct({ ...productInitialState, projectId });\n  //     setOpenAddProduct(false);\n  //     getProjectProds(projectId);\n  //   }\n  // }, [productAdded, projectId]);\n  const { button: buttonStyles, ...contentStyles } =\n    useBlogTextInfoContentStyles();\n  const toDowloadUrl = (projectHistory = {}) => {\n    let url = `${projectHistory.quote}?downloadType=proposal`;\n    if (projectHistory.invoice) {\n      url = `${projectHistory.invoice}?downloadType=invoice`;\n    }\n    return url;\n  };\n  const onChangeInput = ({ target: { name, value } }) => {\n    setNewLog({ ...newLog, [name]: value });\n  };\n  return (\n    <Grid\n      container\n      spacing={2}\n      sx={{\n        py: 3,\n      }}\n    >\n      {/* <AddProductDialog\n        open={openAddProduct}\n        setOpen={() => setOpenAddProduct(false)}\n        values={newProduct}\n        projectId={projectId}\n        setValues={setNewProduct}\n      /> */}\n      <ViewProductDialog\n        open={openViewProduct}\n        setOpen={() => {\n          setCurrentProd({});\n          setOpenViewProduct(false);\n        }}\n        productId={currentProd._id}\n      />\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <Card component=\"main\" className={classes.root}>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <ComputerOutlined />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h4\">\n              {project.name}\n            </Typography>\n            <Typography variant=\"caption\">\n              {`Created by: ${project.user?.fullName}`}\n            </Typography>\n          </div>\n          <CardHeader title=\"3D assets added\" />\n          <Divider />\n          <CardContent>\n            {ppFetching && !projProds.length ? (\n              <Loading />\n            ) : projProds.length ? (\n              <List>\n                {projProds.map((prod, prodIdx) => (\n                  <ListItem divider key={prodIdx} component={Button}>\n                    <ListItemText\n                      primary={prod.product?.name}\n                      secondary={`added ${moment(prod.createdAt).fromNow()}`}\n                      onClick={() => {\n                        setOpenViewProduct(true);\n                        setCurrentProd(prod.product);\n                      }}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <NoDisplayData message=\"No asset added yet\" />\n            )}\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <Card\n          aria-labelledby=\"project-name\"\n          aria-describedby=\"project-description\"\n        >\n          <CardHeader\n            title={`Project name: ${project.name?.toUpperCase()}`}\n            // action={\n            //   <Button\n            //     variant=\"outlined\"\n            //     color=\"primary\"\n            //     onClick={() => setOpenAddProduct(true)}\n            //   >\n            //     Add a 3d asset\n            //   </Button>\n            // }\n          />\n          <CardContent>\n            {projectFetching ? (\n              <Loading />\n            ) : (\n              <>\n                <TextInfoContent\n                  classes={contentStyles}\n                  overline={\n                    project.user?.fullName &&\n                    `Created by: ${project.user.fullName}`\n                  }\n                />\n                <ListItemText\n                  primary={`Start: ${moment(project.startDate).format(\n                    \"YYYY-MM-DD\"\n                  )}, Due date: ${moment(project.dueDate).format(\n                    \"YYYY-MM-DD\"\n                  )}`}\n                />\n                <Typography variant=\"h4\">Project type:</Typography>\n                <ListItem>\n                  <ListItemText\n                    primary={projectType?.name}\n                    secondary={projectType?.description}\n                  />\n                </ListItem>\n                <Typography variant=\"h4\">\n                  Number of items: {project.nOfItems}\n                </Typography>\n                {HtmlParser(project.description)}\n                <Button className={buttonStyles}>\n                  Budget: ${project.budget?.toLocaleString(\"en-US\") || 0}\n                </Button>\n                {loading && !histories.length ? (\n                  <Loading />\n                ) : (\n                  <CardContent>\n                    <Card>\n                      <CardHeader title=\"Add custom log\" />\n                      <CardContent>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                          <Grid container spacing={2}>\n                            <TextField\n                              label=\"Log title\"\n                              placeholder=\"Type here\"\n                              name=\"title\"\n                              fullWidth\n                              value={newLog.title}\n                              onChange={onChangeInput}\n                            />\n                            <DraftEditor\n                              editorState={editorState}\n                              setEditorState={setEditorState}\n                            />\n                          </Grid>\n                          <Grid item xs={12} sm={12} md={2} lg={2}></Grid>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={adding}\n                            onClick={() => {\n                              newLog.description = toHtml(editorState);\n                              addNewLog(projectId, newLog);\n                            }}\n                          >\n                            Send\n                          </Button>\n                        </Grid>\n                      </CardContent>\n                    </Card>\n                    <List>\n                      {histories.map((history, historyIdx) => (\n                        <Accordion key={historyIdx}>\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls={`panel${historyIdx}a-content`}\n                            id={`panel${historyIdx}a-header`}\n                          >\n                            <ListItem alignItems=\"flex-start\">\n                              <ListItemText\n                                primary={history.description}\n                                secondary={\n                                  <>\n                                    <Typography\n                                      component=\"span\"\n                                      variant=\"body2\"\n                                      className={classes.inline}\n                                      color=\"textPrimary\"\n                                    >\n                                      {notifUser(user, history)}\n                                    </Typography>\n                                    {` — on ${moment(history.createdAt).format(\n                                      \"MMM DD, YYYY @ HH:mm\"\n                                    )}`}\n                                  </>\n                                }\n                              />\n                              {(history.invoice || history.quote) && (\n                                <IconButton\n                                  edge=\"end\"\n                                  size=\"small\"\n                                  component=\"a\"\n                                  aria-label=\"Print invoice\"\n                                  rel=\"noreferrer\"\n                                  href={`${INVOICE_ROUTE}/${toDowloadUrl(\n                                    history\n                                  )}`}\n                                  target=\"_blank\"\n                                >\n                                  <DownloadIcon />\n                                </IconButton>\n                              )}\n                            </ListItem>\n                          </AccordionSummary>\n                          {Boolean(history.content) && (\n                            <AccordionDetails>\n                              <Box>{HtmlParser(history.content)}</Box>\n                            </AccordionDetails>\n                          )}\n                        </Accordion>\n                      ))}\n                    </List>\n                  </CardContent>\n                )}\n              </>\n            )}\n          </CardContent>\n          <CardActions>\n            <Button onClick={() => {}} color=\"primary\">\n              Close\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport NumberFormat from \"react-number-format\";\nimport { ComputerOutlined } from \"@material-ui/icons\";\nimport { useStyles } from \"styles/formStyles\";\nimport { initialState, productStatuses } from \"./productConstants\";\nimport { notifier } from \"utils/notifier\";\nimport {\n  addNewProduct,\n  editProduct,\n  getProducts,\n  uploadProductImages,\n} from \"redux/actions/product\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getUsersList } from \"redux/actions/user\";\nimport { getProjects } from \"redux/actions/project\";\n\nexport const ProductRegistration = ({\n  action = \"add\",\n  currentItem = null,\n  setAction,\n}) => {\n  const classes = useStyles();\n  const [values, setValues] = useState(initialState);\n  const [openDz, setOpenDz] = useState(false);\n  const appState = useSelector((state) => state);\n  const {\n    fileUpload: { loaded: uploaded, loading: uploading, filePath },\n    productAdd: { loading: adding, loaded: added },\n    productEdit: { loading: editing, loaded: edited },\n    userList: { users },\n    projectsGet: { projects },\n    login: {\n      userInfo: { user },\n    },\n  } = appState;\n  useEffect(() => {\n    getUsersList(\"Client\");\n  }, []);\n  useEffect(() => {\n    if (values.customer) {\n      getProjects({ clientId: values.customer });\n    }\n  }, [values.customer]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setValues((prev) => {\n      const newValues = { ...prev, [name]: value };\n      if (name === \"customer\") {\n        newValues.project = \"\";\n      }\n      return newValues;\n    });\n  };\n  useEffect(() => {\n    if (uploaded && filePath) {\n      setValues({ ...values, image: filePath });\n      setOpenDz(false);\n      notifier.success(\"Images uploaded\");\n    }\n    // eslint-disable-next-line\n  }, [uploaded, filePath]);\n  useEffect(() => {\n    if (added || edited) {\n      setAction(\"add\");\n      setValues(initialState);\n      getProducts({});\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [added, edited]);\n  useEffect(() => {\n    if (currentItem && action === \"edit\") {\n      const { createdAt, updatedAt, image, project, customer, ...rest } =\n        currentItem;\n      setValues({ ...rest, project: project?._id, customer: customer?._id });\n    }\n  }, [action, currentItem]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const user = users.find((u) => u._id === values.customer);\n    values.website = user?.companyUrl;\n    if (action === \"add\") {\n      addNewProduct(values);\n    }\n    if (action === \"edit\") {\n      delete values.itemNumber;\n      editProduct(values);\n    }\n  };\n  const onUploadImages = (files) => {\n    if (files.length !== 2) {\n      notifier.error(\"Sorry only two files are needed\");\n      return;\n    }\n\n    uploadProductImages(files);\n  };\n  return (\n    <Card component=\"main\" className={classes.root}>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ComputerOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          {action === \"add\" && user.role === \"Client\"\n            ? \"3D Assets\"\n            : action === \"edit\"\n            ? `Update ${currentItem?.name.toUpperCase()}`\n            : \"Add a new 3D asset\"}\n        </Typography>\n        {((action === \"add\" && user.role !== \"Client\") ||\n          action === \"edit\") && (\n          <form className={classes.form} onSubmit={submitHandler}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  className={classes.input}\n                  name=\"name\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"3D Asset name\"\n                  onChange={onHandleChange}\n                  value={values.name}\n                />\n              </Grid>\n              {user.role !== \"Client\" && (\n                <>\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"customer-or-comp\">\n                        Customer or company\n                      </InputLabel>\n                      <Select\n                        labelId=\"customer-or-comp\"\n                        value={values.customer}\n                        name=\"customer\"\n                        onChange={onHandleChange}\n                        disabled={user.role === \"Client\"}\n                      >\n                        <MenuItem value=\"\">---</MenuItem>\n                        {users.map((user, userIdx) => (\n                          <MenuItem value={user._id} key={userIdx}>\n                            {user.fullName}, {user.companyName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"select-project\">\n                        Select project\n                      </InputLabel>\n                      <Select\n                        labelId=\"select-project\"\n                        value={values.project}\n                        name=\"project\"\n                        onChange={onHandleChange}\n                        disabled={\n                          !Boolean(values.customer) || user.role === \"Client\"\n                        }\n                      >\n                        <MenuItem value=\"\">---</MenuItem>\n                        {projects.map((project, projectIdx) => (\n                          <MenuItem value={project._id} key={projectIdx}>\n                            {project.name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </>\n              )}\n              <Grid item lg={6} md={6} sm={6} xs={12}>\n                <TextField\n                  className={classes.input}\n                  name=\"sku\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"SKU\"\n                  onChange={onHandleChange}\n                  value={values.sku}\n                />\n              </Grid>\n              <Grid item lg={6} md={6} sm={6} xs={12}>\n                <NumberFormat\n                  className={classes.input}\n                  value={values.price}\n                  onValueChange={({ floatValue }) =>\n                    setValues({ ...values, price: floatValue })\n                  }\n                  prefix=\"$\"\n                  thousandSeparator\n                  customInput={TextField}\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Price(in USD)\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"product-status\">Status</InputLabel>\n                  <Select\n                    labelId=\"product-status\"\n                    value={values.status}\n                    name=\"status\"\n                    onChange={onHandleChange}\n                  >\n                    <MenuItem value=\"\">---</MenuItem>\n                    {productStatuses.map((status, choiceIdx) => (\n                      <MenuItem value={status} key={choiceIdx}>\n                        {status}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  className={classes.input}\n                  variant=\"outlined\"\n                  fullWidth\n                  name=\"description\"\n                  label=\"Description\"\n                  rows={3}\n                  rowsMax={4}\n                  value={values.description}\n                  onChange={onHandleChange}\n                />\n              </Grid>\n              {action === \"add\" && user.role !== \"Client\" && (\n                <Grid item xs={12}>\n                  <Button onClick={() => setOpenDz(true)}>\n                    Add the 3D asset files\n                  </Button>\n                  <DropzoneDialog\n                    open={openDz}\n                    onSave={onUploadImages}\n                    acceptedFiles={[\".gltf\", \".glb\", \".usdz\"]}\n                    showPreviews={true}\n                    maxFileSize={50000000}\n                    filesLimit={2}\n                    onClose={() => setOpenDz(false)}\n                    clearOnUnmount={uploaded}\n                    submitButtonText={\n                      uploading\n                        ? \"Uploading files, please wait,...\"\n                        : \"Save files\"\n                    }\n                  />\n                </Grid>\n              )}\n            </Grid>\n            <CardActions>\n              {action === \"add\" && user.role !== \"Client\" && (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={adding}\n                >\n                  Save\n                </Button>\n              )}\n              {action === \"edit\" && (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={editing}\n                >\n                  Update the asset\n                </Button>\n              )}\n            </CardActions>\n          </form>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Typography,\n  ButtonGroup,\n  IconButton,\n  Tooltip,\n} from \"@material-ui/core\";\nimport {\n  EditRounded as EditIcon,\n  ViewComfy as ViewComfyIcon,\n  DeleteForever as DeleteIcon,\n} from \"@material-ui/icons\";\n\nexport const productColumns = (onProductClick, user) => [\n  {\n    content: (item) => (\n      <Button onClick={() => onProductClick(item, \"preview\")}>\n        {item.name}\n      </Button>\n    ),\n    label: \"Asset name\",\n  },\n  {\n    content: (item) => (\n      <Typography>\n        {item.customer.fullName}, {item.customer.companyName}\n      </Typography>\n    ),\n    label: \"Customer\",\n  },\n  {\n    content: (item) => <Typography>{item.project?.name}</Typography>,\n    label: \"Project\",\n  },\n  { path: \"sku\", label: \"SKU\" },\n  {\n    content: (item) => (\n      <Typography>\n        {item.price ? `$ ${item.price?.toLocaleString(\"en-US\")}` : \"\"}\n      </Typography>\n    ),\n    label: \"Price\",\n  },\n  { path: \"status\", label: \"Status\" },\n  {\n    content: (item) => (\n      <ButtonGroup variant=\"outlined\" size=\"small\">\n        <Tooltip title=\"View\">\n          <IconButton\n            aria-label=\"View\"\n            color=\"secondary\"\n            onClick={() => onProductClick(item, \"preview\")}\n          >\n            <ViewComfyIcon /> View\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <IconButton\n            aria-label=\"Edit\"\n            color=\"secondary\"\n            onClick={() => onProductClick(item, \"edit\")}\n          >\n            <EditIcon /> Edit\n          </IconButton>\n        </Tooltip>\n        {user?.role !== \"Client\" && (\n          <Tooltip title=\"Delete\">\n            <IconButton\n              aria-label=\"Delete\"\n              color=\"primary\"\n              onClick={() => onProductClick(item, \"delete\")}\n            >\n              <DeleteIcon /> Delete\n            </IconButton>\n          </Tooltip>\n        )}\n      </ButtonGroup>\n    ),\n    label: \"Actions\",\n  },\n];\n","import React from \"react\";\nimport { Button, ButtonGroup, Grid, Typography } from \"@material-ui/core\";\nimport { Add as AddIcon, Remove as RemoveIcon } from \"@material-ui/icons\";\n\nexport const ButtonCounter = ({\n  label,\n  attribute,\n  name,\n  values = {},\n  onSetValue,\n}) => {\n  return (\n    <Grid container>\n      <Grid item xs={6} sm={6} md={6}>\n        <Typography variant=\"h6\">{label}</Typography>\n      </Grid>\n      <Grid item xs={6} sm={6} md={6}>\n        <ButtonGroup size=\"small\">\n          <Button\n            aria-label=\"reduce\"\n            onClick={() => onSetValue(attribute, name, -1)}\n          >\n            <RemoveIcon fontSize=\"small\" />\n          </Button>\n          <Button>{values[name]}</Button>\n          <Button\n            aria-label=\"increase\"\n            onClick={() => onSetValue(attribute, name, 1)}\n          >\n            <AddIcon fontSize=\"small\" />\n          </Button>\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { ButtonCounter } from \"./ButtonCounter\";\nimport { Collapse } from \"@material-ui/core\";\n\nexport const CameraOrbit = ({\n  cardTitle,\n  onSetCounterValue,\n  onChangeCheckbox,\n  counterValues = {},\n  attribute,\n}) => {\n  return (\n    <Card>\n      <CardHeader title={cardTitle} />\n      <CardContent>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={counterValues.useDefault}\n              onChange={({ target }) => onChangeCheckbox(target, attribute)}\n            />\n          }\n          label=\"Default value\"\n        />\n        <Collapse in={!counterValues.useDefault}>\n          <ButtonCounter\n            label=\"Side to side\"\n            onSetValue={onSetCounterValue}\n            attribute={attribute}\n            values={counterValues.custom}\n            name=\"side\"\n          />\n          <ButtonCounter\n            label=\"Up and down\"\n            onSetValue={onSetCounterValue}\n            attribute={attribute}\n            values={counterValues.custom}\n            name=\"ud\"\n          />\n          <ButtonCounter\n            label=\"In and out\"\n            onSetValue={onSetCounterValue}\n            attribute={attribute}\n            values={counterValues.custom}\n            name=\"io\"\n          />\n        </Collapse>\n      </CardContent>\n    </Card>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n    // backgroundColor: theme.palette.background.paper,\n    // display: \"flex\",\n    height: 450,\n    overflowY: \"auto\",\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  editor: {\n    backgroundColor: theme.palette.background.default,\n    height: 500,\n  },\n}));\n","import React from \"react\";\nimport {\n  Card,\n  Collapse,\n  FormControlLabel,\n  Slider,\n  Switch,\n  TextField,\n  Typography,\n  CardContent,\n} from \"@material-ui/core\";\nimport ColorPicker from \"material-ui-color-picker\";\nimport { CameraOrbit } from \"components/CameraOrbit\";\nimport { useStyles } from \"../productStyles\";\n\nexport const Scene = ({\n  attributes = {},\n  attName,\n  onInputChange,\n  onSetCounterValue,\n  onSliderChange,\n  onChangeColor,\n  onChangeSwitch,\n  onChangeCheckbox,\n}) => {\n  const classes = useStyles();\n  return (\n    <Collapse in={attName === \"scene\"}>\n      <Card className={classes.root}>\n        <CardContent>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={attributes.disableZoom}\n                onChange={onChangeSwitch}\n                name=\"disableZoom\"\n                color=\"primary\"\n              />\n            }\n            label=\"Disable zoom\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={attributes.autoRotate}\n                onChange={onChangeSwitch}\n                name=\"autoRotate\"\n                color=\"primary\"\n              />\n            }\n            label=\"Auto rotate\"\n          />\n          <TextField\n            label=\"Auto rotate delay\"\n            type=\"number\"\n            name=\"autoRotateDelay\"\n            value={attributes.autoRotateDelay}\n            fullWidth\n            onChange={onInputChange}\n          />\n          <ColorPicker\n            defaultValue=\"Color\"\n            name=\"backgroundColor\"\n            floatingLabelText=\"Background color\"\n            onChange={onChangeColor}\n            fullWidth\n            value={attributes.backgroundColor}\n          />\n\n          <CameraOrbit\n            cardTitle=\"Camera orbit\"\n            onSetCounterValue={onSetCounterValue}\n            counterValues={attributes.cameraOrbit}\n            onChangeCheckbox={onChangeCheckbox}\n            attribute=\"cameraOrbit\"\n          />\n          <CameraOrbit\n            cardTitle=\"Min Camera orbit\"\n            onSetCounterValue={onSetCounterValue}\n            counterValues={attributes.minCameraOrbit}\n            onChangeCheckbox={onChangeCheckbox}\n            attribute=\"minCameraOrbit\"\n          />\n          <CameraOrbit\n            cardTitle=\"Max Camera orbit\"\n            onSetCounterValue={onSetCounterValue}\n            counterValues={attributes.maxCameraOrbit}\n            onChangeCheckbox={onChangeCheckbox}\n            attribute=\"maxCameraOrbit\"\n          />\n          <Typography variant=\"h4\" id=\"field-of-view\" gutterBottom>\n            Field of view\n          </Typography>\n          <Slider\n            aria-labelledby=\"field-of-view\"\n            min={0}\n            step={5}\n            max={50}\n            valueLabelDisplay=\"on\"\n            name=\"fieldOfView\"\n            value={attributes.fieldOfView}\n            onChange={(e, value) => onSliderChange(\"fieldOfView\", value)}\n          />\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Checkbox,\n  Collapse,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  MenuItem,\n  Select,\n  Slider,\n  Typography,\n} from \"@material-ui/core\";\nimport { IMAGES_PATH } from \"utils/constants\";\n\nexport const Lighting = ({\n  attName,\n  attributes,\n  onSliderChange,\n  onLightningCheck,\n  onLighteningSelect,\n}) => {\n  return (\n    <Collapse in={attName === \"lighting\"}>\n      <Card>\n        <CardHeader title=\"Image lighting\" />\n        <CardContent>\n          <Typography variant=\"h4\" id=\"exposure\" gutterBottom>\n            Exposure\n          </Typography>\n          <Slider\n            aria-labelledby=\"exposure\"\n            min={0}\n            step={0.01}\n            max={2}\n            valueLabelDisplay=\"on\"\n            name=\"exposure\"\n            value={attributes.exposure}\n            onChange={(e, value) => onSliderChange(\"exposure\", value)}\n          />\n          <Typography variant=\"h4\" id=\"shadow-intensity\" gutterBottom>\n            Shadow intensity\n          </Typography>\n          <Slider\n            aria-labelledby=\"shadow-intensity\"\n            min={0}\n            step={0.1}\n            max={1}\n            valueLabelDisplay=\"on\"\n            name=\"shadowIntensity\"\n            value={attributes.shadowIntensity}\n            onChange={(e, value) => onSliderChange(\"shadowIntensity\", value)}\n          />\n          <Typography variant=\"h4\" id=\"shadow-softness\" gutterBottom>\n            Shadow softness\n          </Typography>\n          <Slider\n            aria-labelledby=\"shadow-softness\"\n            min={0}\n            step={0.1}\n            max={1}\n            valueLabelDisplay=\"on\"\n            name=\"shadowSoftness\"\n            value={attributes.shadowSoftness}\n            onChange={(e, value) => onSliderChange(\"shadowSoftness\", value)}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={attributes.skyboxImage?.active}\n                onChange={({ target }) =>\n                  onLightningCheck(target, \"skyboxImage\")\n                }\n              />\n            }\n            label=\"Skybox image\"\n          />\n          {attributes.skyboxImage?.active && (\n            <FormControl fullWidth>\n              <InputLabel shrink id=\"select-skybox-image\">\n                Images\n              </InputLabel>\n              <Select\n                labelId=\"select-skybox-image\"\n                name=\"skyboxImage\"\n                value={attributes.skyboxImage?.image}\n                onChange={({ target }) =>\n                  onLighteningSelect(target, \"skyboxImage\")\n                }\n              >\n                {attributes.imageFiles\n                  ?.filter((img) => img.imageType === \"skybox\")\n                  .map((img, imgIdx) => (\n                    <MenuItem value={img.imageFileName} key={imgIdx}>\n                      {img.imageFileName}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          )}\n          {Boolean(attributes.skyboxImage?.image) && (\n            <CardMedia\n              image={IMAGES_PATH + attributes.skyboxImage?.image}\n              component=\"img\"\n              height=\"140\"\n            />\n          )}\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={attributes.environmentImage?.active}\n                onChange={({ target }) =>\n                  onLightningCheck(target, \"environmentImage\")\n                }\n              />\n            }\n            label=\"Environment image\"\n          />\n          {attributes.environmentImage?.active && (\n            <FormControl fullWidth>\n              <InputLabel shrink id=\"select-environment-image\">\n                Images\n              </InputLabel>\n              <Select\n                labelId=\"select-environment-image\"\n                name=\"environmentImage\"\n                value={attributes.environmentImage?.image}\n                onChange={({ target }) =>\n                  onLighteningSelect(target, \"environmentImage\")\n                }\n              >\n                {attributes.imageFiles\n                  ?.filter((img) => img.imageType === \"skybox\")\n                  .map((img, imgIdx) => (\n                    <MenuItem value={img.imageFileName} key={imgIdx}>\n                      {img.imageFileName}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          )}\n          {Boolean(attributes.environmentImage?.image) && (\n            <CardMedia\n              image={IMAGES_PATH + attributes.environmentImage?.image}\n              component=\"img\"\n              height=\"140\"\n            />\n          )}\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  Slider,\n  Typography,\n} from \"@material-ui/core\";\n\nexport const Material = ({ attName, attributes, onSliderChange }) => {\n  return (\n    <Collapse in={attName === \"material\"}>\n      <Card>\n        <CardHeader title=\"Image material\" />\n        <CardContent>\n          <Typography variant=\"h4\" id=\"metalness\" gutterBottom>\n            Matelness\n          </Typography>\n          <Slider\n            aria-labelledby=\"metalness\"\n            min={0}\n            step={0.01}\n            max={1}\n            valueLabelDisplay=\"on\"\n            name=\"metalness\"\n            value={attributes.metalness}\n            onChange={(e, value) => onSliderChange(\"metalness\", value)}\n          />\n          <Typography variant=\"h4\" id=\"roughness\" gutterBottom>\n            Roughness\n          </Typography>\n          <Slider\n            aria-labelledby=\"roughness\"\n            min={0}\n            step={0.01}\n            max={1}\n            valueLabelDisplay=\"on\"\n            name=\"roughness\"\n            value={attributes.roughness}\n            onChange={(e, value) => onSliderChange(\"roughness\", value)}\n          />\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  TextField,\n} from \"@material-ui/core\";\nimport ColorPicker from \"material-ui-color-picker\";\nimport { useStyles } from \"../productStyles\";\n\nexport const Annotation = ({\n  attName,\n  attributes = {},\n  setAttributes,\n  onInputChange,\n  modelViewRef = {},\n  currentHotspot,\n  setCurrentHotspot,\n}) => {\n  const classes = useStyles();\n  const imageViewer = modelViewRef.current;\n\n  const onAddHotspot = () => {\n    imageViewer.addEventListener(\"click\", onClickHotspot);\n  };\n  const onRemoveHotspot = () => {\n    if (currentHotspot) {\n      const currentAttributes = { ...attributes };\n      const theHotspots = currentAttributes.hotspots.filter(\n        (hs) => hs.hotspotNum !== currentHotspot.hotspotNum\n      );\n      setAttributes((prev) => ({ ...prev, hotspots: theHotspots }));\n      setCurrentHotspot(null);\n    }\n  };\n  const nextNumber = () => {\n    const hotspots = [...attributes.hotspots];\n    let theNum = 1;\n    if (hotspots.length > 0) {\n      const lastHotspot = hotspots.pop();\n      theNum = lastHotspot.hotspotNum + 1;\n    }\n    return theNum;\n  };\n  const onClickHotspot = (event) => {\n    const x = event.clientX;\n    const y = event.clientY;\n    const positionAndNormal = imageViewer.positionAndNormalFromPoint(x, y);\n    if (!positionAndNormal) {\n      return;\n    }\n    const { position, normal } = positionAndNormal;\n    const currentAttributes = { ...attributes };\n    const newHotspot = {\n      dataPosition: position.toString(),\n      dataNormal: normal.toString(),\n      dataText: \"\",\n      bgColor: \"black\",\n      hotspotNum: nextNumber(),\n      selected: \"selected\",\n    };\n    const theHotspots = currentAttributes.hotspots.map((hs) => ({\n      ...hs,\n      selected: \"\",\n    }));\n    theHotspots.push(newHotspot);\n    setAttributes({ ...attributes, hotspots: theHotspots });\n    setCurrentHotspot(newHotspot);\n    imageViewer.removeEventListener(\"click\", onClickHotspot);\n  };\n  const onChangeAnnotationText = ({ target }) => {\n    if (currentHotspot) {\n      const currentAttributes = { ...attributes };\n      const idx = currentAttributes.hotspots.findIndex(\n        (hs) => hs.dataNormal === currentHotspot.dataNormal\n      );\n      const theCurrentHotspot = { ...currentHotspot, dataText: target.value };\n      setCurrentHotspot(theCurrentHotspot);\n\n      currentAttributes.hotspots[idx].dataText = target.value;\n\n      setAttributes(currentAttributes);\n    }\n  };\n  const onChangeColor = (color) => {\n    if (currentHotspot) {\n      const currentAttributes = { ...attributes };\n      const idx = currentAttributes.hotspots.findIndex(\n        (hs) => hs.dataNormal === currentHotspot.dataNormal\n      );\n      const theCurrentHotspot = { ...currentHotspot, bgColor: color };\n      setCurrentHotspot(theCurrentHotspot);\n\n      currentAttributes.hotspots[idx].bgColor = color;\n\n      setAttributes(currentAttributes);\n    }\n  };\n  return (\n    <Collapse in={attName === \"annotation\"}>\n      <Card className={classes.root}>\n        <CardHeader title=\"Modal annotation\" />\n        <CardContent>\n          <TextField\n            label=\"Model alt text\"\n            style={{ margin: 8 }}\n            placeholder=\"Type here\"\n            fullWidth\n            margin=\"normal\"\n            name=\"alt\"\n            value={attributes.alt}\n            onChange={onInputChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <Button color=\"primary\" onClick={() => onAddHotspot()}>\n            Add new hotspot\n          </Button>\n          <TextField\n            label=\"Model alt text\"\n            style={{ margin: 8 }}\n            placeholder=\"Type annotation text\"\n            fullWidth\n            margin=\"normal\"\n            name=\"dataText\"\n            value={currentHotspot?.dataText}\n            disabled={!currentHotspot}\n            onChange={onChangeAnnotationText}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <ColorPicker\n            defaultValue=\"Click to select color\"\n            name=\"bgColor\"\n            floatingLabelText=\"Hotspot background color\"\n            onChange={onChangeColor}\n            disabled={!currentHotspot}\n            fullWidth\n            value={currentHotspot?.bgColor}\n          />\n          <Button\n            color=\"secondary\"\n            disabled={!currentHotspot}\n            onClick={() => onRemoveHotspot()}\n          >\n            Remove hotspot\n          </Button>\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Collapse,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IMAGES_PATH } from \"utils/constants\";\n\nconst scales = [\"auto\", \"fixed\"];\nconst placements = [\"floor\", \"wall\"];\nexport const AREditor = ({ attName, attributes = {}, onInputChange }) => {\n  return (\n    <Collapse in={attName === \"ar\"}>\n      <Card>\n        <CardHeader title=\"AR Editor\" />\n        <CardContent>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"select-scale\">\n              AR scale\n            </InputLabel>\n            <Select\n              labelId=\"select-scale\"\n              name=\"scale\"\n              value={attributes.scale}\n              onChange={onInputChange}\n            >\n              {scales.map((scale, scaleIdx) => (\n                <MenuItem value={scale} key={scaleIdx}>\n                  {scale.toUpperCase()}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"select-placement\">\n              AR placement\n            </InputLabel>\n            <Select\n              labelId=\"select-placement\"\n              name=\"placement\"\n              value={attributes.placement}\n              onChange={onInputChange}\n            >\n              {placements.map((pl, plIdx) => (\n                <MenuItem value={pl} key={plIdx}>\n                  {pl.toUpperCase()}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          {attributes.imageFiles?.filter((img) => img.imageType === \"custom\")\n            .length > 0 && (\n            <FormControl fullWidth>\n              <InputLabel shrink id=\"select-ar-button-image\">\n                AR button image\n              </InputLabel>\n              <Select\n                labelId=\"select-ar-button-image\"\n                name=\"arButtonImage\"\n                value={attributes.arButtonImage}\n                onChange={onInputChange}\n              >\n                <MenuItem value=\"\">Empty</MenuItem>\n                {attributes.imageFiles\n                  ?.filter((img) => img.imageType === \"custom\")\n                  .map((img, imgIdx) => (\n                    <MenuItem value={img.imageFileName} key={imgIdx}>\n                      {img.imageFileName}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          )}\n          {Boolean(attributes.arButtonImage) && (\n            <CardMedia\n              image={IMAGES_PATH + attributes.arButtonImage}\n              component=\"img\"\n              height=\"40\"\n            />\n          )}\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  FormControl,\n  IconButton,\n  InputLabel,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport { useSelector } from \"react-redux\";\nimport {\n  deleteAttrImg,\n  resetUploadAttrImg,\n  uploadProductImages,\n} from \"redux/actions/product\";\n\nconst imageTypes = [\n  { id: \"skybox\", name: \"Skybox & environment\" },\n  { id: \"custom\", name: \"Custom AR\" },\n];\nexport const ManageImages = ({\n  attName,\n  attributes = {},\n  setAttributes,\n  productId,\n}) => {\n  const [imgType, setImgType] = useState(imageTypes[0].id);\n  const [open, setOpen] = useState(false);\n\n  const {\n    attrImg: { loading, loaded, fileName },\n    imgAttrDel: { loaded: deleted, deletedFile },\n  } = useSelector((state) => state);\n\n  useEffect(() => {\n    if (loaded) {\n      const newAttribs = { ...attributes };\n      newAttribs.imageFiles?.push({\n        imageType: imgType,\n        imageFileName: fileName,\n        canBeDeleted: true,\n      });\n      setAttributes(newAttribs);\n      setOpen(false);\n      resetUploadAttrImg();\n    }\n    // eslint-disable-next-line\n  }, [loaded, fileName]);\n  useEffect(() => {\n    if (deleted) {\n      const newAttribs = { ...attributes };\n      const idx = newAttribs.imageFiles?.findIndex(\n        (img) => img.imageFileName === deletedFile\n      );\n      newAttribs.imageFiles?.splice(idx, 1);\n      setAttributes(newAttribs);\n    }\n    // eslint-disable-next-line\n  }, [deleted, deletedFile]);\n  const onSelectChange = ({ target }) => {\n    setImgType(target.value);\n  };\n  const onUploadImage = (files) => {\n    const attrs = { productId, imgType };\n    uploadProductImages(files, \"attr-image\", attrs);\n  };\n  return (\n    <Collapse in={attName === \"manage_images\"}>\n      <Card>\n        <CardHeader title=\"Manage images\" />\n        <CardContent>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"select-image-type\">\n              Image type\n            </InputLabel>\n            <Select\n              labelId=\"select-image-type\"\n              name=\"imageType\"\n              value={imgType}\n              onChange={onSelectChange}\n            >\n              {imageTypes.map((type, typeIdx) => (\n                <MenuItem value={type.id} key={typeIdx}>\n                  {type.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <Button\n            onClick={() => setOpen(true)}\n          >{`Upload ${imgType} image`}</Button>\n          <DropzoneDialog\n            acceptedFiles={[\"image/*\"]}\n            cancelButtonText={\"cancel\"}\n            submitButtonText={loading ? \"Uploading,...\" : \"Submit\"}\n            maxFileSize={5000000}\n            clearOnUnmount={loaded}\n            open={open}\n            onClose={() => setOpen(false)}\n            onSave={onUploadImage}\n            dialogTitle={`Upload ${imgType.toUpperCase()} image`}\n          />\n          <List dense>\n            {attributes?.imageFiles\n              ?.filter((img) => img.imageType === imgType)\n              .map((img, imgIdx) => (\n                <ListItem key={imgIdx}>\n                  <ListItemText primary={img.imageFileName} />\n                  {img.canBeDeleted && (\n                    <ListItemSecondaryAction>\n                      <IconButton\n                        onClick={() =>\n                          deleteAttrImg(productId, img.imageFileName)\n                        }\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  )}\n                </ListItem>\n              ))}\n          </List>\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n} from \"@material-ui/core\";\n\nexport const Poster = ({ attName, modelViewRef }) => {\n  const onDownloadPoster = async () => {\n    const imageViewer = modelViewRef.current;\n    let posterUrl = \"\";\n    imageViewer.fieldOfView = \"auto\";\n    imageViewer.jumpCameraToGoal();\n    await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n    const blob = await imageViewer.toBlob({\n      mimeType: \"image/png\",\n      idealAspect: true,\n    });\n    posterUrl = URL.createObjectURL(blob);\n\n    const a = document.createElement(\"a\");\n    a.href = posterUrl;\n    a.download = \"poster.png\";\n    a.click();\n  };\n  return (\n    <Collapse in={attName === \"poster\"}>\n      <Card>\n        <CardHeader title=\"Poster\" />\n        <CardContent>\n          <Button color=\"primary\" onClick={onDownloadPoster}>\n            Download poster\n          </Button>\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\nimport { NoDisplayData } from \"components/NoDisplayData\";\n// import { getProjectProds } from \"redux/actions/project\";\n\nexport const AddedProducts = ({ attName, productId }) => {\n  const appState = useSelector((state) => state);\n\n  const {\n    projectProdsGet: { loading: ppFetching, projProds },\n  } = appState;\n  useEffect(() => {\n    // getProjectProds(productId, \"product\");\n  }, [productId]);\n  return (\n    <Collapse in={attName === \"added_projects\"}>\n      <Card>\n        <CardHeader title=\"Added projects\" />\n        <CardContent>\n          {ppFetching && !projProds.length ? (\n            <Loading />\n          ) : projProds.length ? (\n            <List>\n              {projProds.map((prod, prodIdx) => (\n                <ListItem divider key={prodIdx}>\n                  <ListItemText\n                    primary={prod.project?.name}\n                    secondary={prod.website}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <NoDisplayData message=\"No project added yet\" />\n          )}\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport { Card, CardContent, CardHeader, Collapse } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { generateQR } from \"redux/actions/product\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\n\nexport const QRCodeViewer = ({ attName, productId }) => {\n  const {\n    qrGenerate: { loading, loaded, qr },\n  } = useSelector((state) => state);\n  useEffect(() => {\n    if (productId) {\n      generateQR(productId);\n    }\n  }, [productId]);\n\n  return (\n    <Collapse in={attName === \"qr-code\"}>\n      <Card>\n        <CardHeader title=\"Scan the QR code to preview 3D asset in your space\" />\n        <CardContent>\n          {loading && <Loading />}\n          {loaded && (\n            // <h1>Image loaded</h1>\n            <img src={qr} alt=\"QR code\" loading=\"lazy\" />\n          )}\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button, ButtonGroup, Grid } from \"@material-ui/core\";\nimport { Scene } from \"./Scene\";\nimport { Lighting } from \"./Lighting\";\nimport { Material } from \"./Material\";\nimport { Annotation } from \"./Annotation\";\nimport { AREditor } from \"./AREditor\";\nimport { useStyles } from \"../productStyles\";\nimport { updateAttributes } from \"redux/actions/product\";\nimport { useSelector } from \"react-redux\";\nimport { ManageImages } from \"./ManageImages\";\nimport { initialStates } from \"./initialStates\";\nimport { Poster } from \"./Poster\";\nimport { AddedProducts } from \"./AddedProducts\";\nimport { QRCodeViewer } from \"./QRCodeViewer\";\n\nexport const AttributeEditor = ({\n  productId,\n  attributes,\n  setAttributes,\n  modelViewRef,\n  currentHotspot,\n  setCurrentHotspot,\n}) => {\n  const classes = useStyles();\n  const [activeBtn, setActiveBtn] = useState(\"scene\");\n\n  const appState = useSelector((state) => state);\n  const {\n    attrUpdate: { loading },\n    login: {\n      userInfo: { user },\n    },\n  } = appState;\n\n  const onSetCounterValue = (attribute, name, currentValue) => {\n    const customValues = { ...attributes[attribute].custom };\n    customValues[name] += currentValue;\n    attributes[attribute].custom = customValues;\n    setAttributes({ ...attributes, [attribute]: attributes[attribute] });\n  };\n  const onInputChange = ({ target: { name, value } }) => {\n    setAttributes({ ...attributes, [name]: value });\n  };\n  const onSliderChange = (name, newValue) => {\n    setAttributes({ ...attributes, [name]: newValue });\n  };\n  const onChangeColor = (color) => {\n    setAttributes({ ...attributes, backgroundColor: color });\n  };\n  const onChangeSwitch = ({ target: { name, checked } }) => {\n    setAttributes({ ...attributes, [name]: checked });\n  };\n  const onChangeCheckbox = ({ checked }, attribute) => {\n    const attributeValues = { ...attributes[attribute] };\n    attributeValues.useDefault = checked;\n    if (checked) {\n      attributeValues.custom = initialStates[attribute].custom;\n    }\n    setAttributes({ ...attributes, [attribute]: attributeValues });\n  };\n  const onLightningCheck = ({ checked }, attribute) => {\n    const attributeValues = { ...attributes[attribute] };\n    attributeValues.active = checked;\n    if (!checked) {\n      attributeValues.image = \"\";\n    }\n    setAttributes({ ...attributes, [attribute]: attributeValues });\n  };\n  const onLighteningSelect = ({ value }, attribute) => {\n    const attributeValues = { ...attributes[attribute] };\n    attributeValues.image = value;\n    setAttributes({ ...attributes, [attribute]: attributeValues });\n  };\n  return (\n    <Grid container spacing={2} className={classes.editor}>\n      <Grid item sm={4} md={4}>\n        <ButtonGroup\n          orientation=\"vertical\"\n          color=\"primary\"\n          aria-label=\"vertical contained primary button group\"\n          variant=\"text\"\n        >\n          <Button\n            color={activeBtn === \"scene\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"scene\")}\n          >\n            Scene\n          </Button>\n          <Button\n            color={activeBtn === \"lighting\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"lighting\")}\n          >\n            Lighting\n          </Button>\n          <Button\n            color={activeBtn === \"material\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"material\")}\n          >\n            Material\n          </Button>\n          <Button\n            color={activeBtn === \"annotation\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"annotation\")}\n          >\n            Annotations\n          </Button>\n          <Button\n            color={activeBtn === \"ar\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"ar\")}\n          >\n            AR\n          </Button>\n          <Button\n            color={activeBtn === \"poster\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"poster\")}\n          >\n            Poster\n          </Button>\n          {user.role !== \"Client\" && (\n            <Button\n              color={activeBtn === \"manage_images\" ? \"primary\" : \"secondary\"}\n              onClick={() => setActiveBtn(\"manage_images\")}\n            >\n              Manage images\n            </Button>\n          )}\n          {/* <Button\n            color={activeBtn === \"added_projects\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"added_projects\")}\n          >\n            Added projects\n          </Button> */}\n          <Button\n            color={activeBtn === \"qr-code\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"qr-code\")}\n          >\n            View QR code\n          </Button>\n        </ButtonGroup>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          disabled={loading}\n          onClick={() => updateAttributes(attributes, productId)}\n        >\n          Save Changes\n        </Button>\n      </Grid>\n      <Grid item sm={8} md={8}>\n        <Scene\n          attName={activeBtn}\n          attributes={attributes}\n          onInputChange={onInputChange}\n          onSetCounterValue={onSetCounterValue}\n          onSliderChange={onSliderChange}\n          onChangeColor={onChangeColor}\n          onChangeSwitch={onChangeSwitch}\n          onChangeCheckbox={onChangeCheckbox}\n        />\n        <Lighting\n          attName={activeBtn}\n          attributes={attributes}\n          onSliderChange={onSliderChange}\n          onLightningCheck={onLightningCheck}\n          onLighteningSelect={onLighteningSelect}\n        />\n        <Material\n          attName={activeBtn}\n          attributes={attributes}\n          onSliderChange={onSliderChange}\n        />\n        <Annotation\n          attName={activeBtn}\n          attributes={attributes}\n          onInputChange={onInputChange}\n          modelViewRef={modelViewRef}\n          setAttributes={setAttributes}\n          currentHotspot={currentHotspot}\n          setCurrentHotspot={setCurrentHotspot}\n        />\n        <AREditor\n          attName={activeBtn}\n          attributes={attributes}\n          onInputChange={onInputChange}\n        />\n        <Poster attName={activeBtn} modelViewRef={modelViewRef} />\n        {user.role !== \"Client\" && (\n          <ManageImages\n            attName={activeBtn}\n            attributes={attributes}\n            setAttributes={setAttributes}\n            productId={productId}\n          />\n        )}\n        <AddedProducts attName={activeBtn} productId={productId} />\n        <QRCodeViewer attName={activeBtn} productId={productId} />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { getProduct } from \"redux/actions/product\";\nimport { useSelector } from \"react-redux\";\nimport { BASE_URL, IMAGES_3D_PATH, IMAGES_PATH } from \"utils/constants\";\nimport Loading from \"components/loading.component\";\nimport { AttributeEditor } from \"./AttributeEditor\";\nimport { toOrbitProp, toAttributes } from \"./productConstants\";\nimport { initialStates } from \"./AttributeEditor/initialStates\";\n\nexport const ImagePreview = ({ open, setOpen, productId = null }) => {\n  const modelViewRef = useRef(null);\n  const [attributes, setAttributes] = useState(initialStates);\n  const [currentHotspot, setCurrentHotspot] = useState(null);\n  const [mv, setMv] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const appState = useSelector((state) => state);\n  const {\n    productGet: { loading, product, loaded },\n  } = appState;\n  useEffect(() => {\n    if (productId && open) {\n      getProduct(productId);\n    }\n  }, [productId, open]);\n  useEffect(() => {\n    if (loaded) {\n      const { src, ...otherProps } = product.image;\n      setAttributes((prevAttribs) => ({ prevAttribs, ...otherProps }));\n      setCopied(false);\n      setCurrentHotspot(null);\n    }\n  }, [loaded, product]);\n  useEffect(() => {\n    const modelViewer = document.querySelector(\"model-viewer#image3d-viewer\");\n    document.querySelectorAll(\"button.hotspot\").forEach((e) => e.remove());\n    if (attributes.hotspots.length && modelViewer) {\n      attributes.hotspots.forEach((el) => {\n        const newHotspot = document.createElement(\"button\");\n        newHotspot.slot = `hotspot-${el.hotspotNum}`;\n        newHotspot.classList.add(\"hotspot\");\n        newHotspot.style.backgroundColor = el.bgColor;\n        newHotspot.dataset.position = el.dataPosition;\n        newHotspot.dataset.normal = el.dataNormal;\n\n        modelViewer.appendChild(newHotspot);\n        newHotspot.addEventListener(\"click\", () => {\n          onSelectHotspot(el);\n        });\n        const div = document.createElement(\"div\");\n        div.classList.add(\"annotation\");\n        div.textContent = el.dataText;\n        newHotspot.appendChild(div);\n      });\n    }\n  }, [attributes.hotspots, currentHotspot]);\n  useEffect(() => {\n    const modelViewer = document.querySelector(\"model-viewer#image3d-viewer\");\n    if (loaded && modelViewer) {\n      setMv(modelViewer);\n      modelViewer.addEventListener(\"load\", (ev) => {\n        let material = modelViewer.model.materials[0];\n        material.pbrMetallicRoughness.setMetallicFactor(attributes.metalness);\n        material.pbrMetallicRoughness.setRoughnessFactor(attributes.roughness);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaded]);\n\n  useEffect(() => {\n    const modelViewer = modelViewRef.current;\n    if (modelViewer && modelViewer.model) {\n      let material = modelViewer.model.materials[0];\n      material.pbrMetallicRoughness.setMetallicFactor(attributes.metalness);\n      material.pbrMetallicRoughness.setRoughnessFactor(attributes.roughness);\n    }\n  }, [attributes.metalness, attributes.roughness]);\n  const onSelectHotspot = (hotspot) => {\n    setCurrentHotspot(hotspot);\n  };\n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"lg\"\n      fullWidth\n      onClose={setOpen}\n      aria-labelledby=\"product-dialog-title\"\n      aria-describedby=\"product-dialog-description\"\n    >\n      <DialogTitle id=\"product-dialog-title\">{product?.name}</DialogTitle>\n      <DialogActions>\n        <CopyToClipboard\n          text={`${BASE_URL}/products/${productId}`}\n          onCopy={() => setCopied(true)}\n        >\n          <Button color={copied ? \"secondary\" : \"\"}>\n            {copied ? \"Copied!\" : \"Copy the embeded code\"}\n          </Button>\n        </CopyToClipboard>\n        <Button onClick={setOpen} color=\"primary\" autoFocus>\n          Exit\n        </Button>\n      </DialogActions>\n      <DialogContent id=\"product-dialog-description\">\n        {loading && !Boolean(product.image) ? (\n          <Loading />\n        ) : (\n          <Grid\n            container\n            spacing={2}\n            style={{ backgroundColor: attributes.backgroundColor }}\n          >\n            <Grid item md={5} lg={5}>\n              <AttributeEditor\n                productId={productId}\n                attributes={attributes}\n                setAttributes={setAttributes}\n                modelViewRef={modelViewRef}\n                currentHotspot={currentHotspot}\n                mv={mv}\n                setCurrentHotspot={setCurrentHotspot}\n              />\n            </Grid>\n            <Grid item md={7} lg={7}>\n              <model-viewer\n                id=\"image3d-viewer\"\n                ref={modelViewRef}\n                src={`${IMAGES_3D_PATH}/${product.imagesSrc?.glb}`}\n                ios-src={`${IMAGES_3D_PATH}/${product.imagesSrc?.usdz}`}\n                style={{ width: \"100%\", height: \"70vh\", border: \"none\" }}\n                auto-rotate-delay={attributes.autoRotateDelay}\n                background-color={attributes.backgroundColor}\n                camera-orbit={toOrbitProp(\"cameraOrbit\", attributes)}\n                min-camera-orbit={toOrbitProp(\"minCameraOrbit\", attributes)}\n                max-camera-orbit={toOrbitProp(\"maxCameraOrbit\", attributes)}\n                camera-target={toOrbitProp(\"cameraTarget\", attributes)}\n                field-of-view={attributes.fieldOfView}\n                exposure={attributes.exposure}\n                shadow-intensity={attributes.shadowIntensity}\n                shadow-softness={attributes.shadowSoftness}\n                alt={attributes.alt}\n                ar\n                ar-scale={attributes.scale}\n                ar-placement={attributes.placement}\n                ar-modes=\"webxr scene-viewer quick-look\"\n                camera-controls\n                autoplay\n                quick-look-browsers=\"safari chrome firefox\"\n                loading=\"eager\"\n                interaction-prompt=\"none\"\n                {...toAttributes(attributes)}\n              >\n                {Boolean(attributes.arButtonImage) && (\n                  <input\n                    type=\"image\"\n                    src={IMAGES_PATH + attributes.arButtonImage}\n                    className=\"ar-button\"\n                    style={{ width: \"50%\" }}\n                    slot=\"ar-button\"\n                    alt={attributes.alt}\n                  />\n                )}\n              </model-viewer>\n            </Grid>\n          </Grid>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  CardHeader,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n} from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { productAnalyticsColumns } from \"components/columns\";\nimport { useSelector } from \"react-redux\";\nimport { getProjects } from \"redux/actions/project\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { getProdAnalytics } from \"redux/actions/product\";\nimport { ViewProductDialog } from \"pages/ProjectDetail/ViewProductDialog\";\n\nconst initialOptions = { project: \"\", time: \"allTime\" };\nconst btnFilters = [\n  { id: \"today\", name: \"Today\" },\n  { id: \"7days\", name: \"Last 7 days\" },\n  { id: \"30days\", name: \"Last 30 days\" },\n  { id: \"allTime\", name: \"All time\" },\n];\nexport const AnalyticsPage = () => {\n  const [options, setOptions] = useState(initialOptions);\n  const [tableTitle, setTableTitle] = useState(\"All\");\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [currentItem, setCurrentItem] = useState(null);\n\n  const appState = useSelector((state) => state);\n  const {\n    projectsGet: { projects },\n    analyticsGet: { analytics, loading },\n  } = appState;\n  useEffect(() => {\n    getProjects({});\n  }, []);\n  useEffect(() => {\n    let project = \"\";\n    if (Boolean(options.project)) {\n      project = `PROJECT: ${\n        projects.find((el) => el._id === options.project).name\n      }. `;\n    }\n    setTableTitle(\n      project + \"TIME: \" + btnFilters.find((el) => el.id === options.time).name\n    );\n    getProdAnalytics(options);\n    // eslint-disable-next-line\n  }, [options]);\n  useEffect(() => {\n    const { pageNumber, pageSize } = paginator;\n    const paginatedData = paginate(analytics, pageNumber, pageSize);\n    setPaginatedData(paginatedData);\n  }, [analytics, paginator]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onClickItem = (item) => {\n    setCurrentItem(item);\n  };\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"background.default\",\n        minHeight: \"100%\",\n        py: 3,\n      }}\n    >\n      <ViewProductDialog\n        open={Boolean(currentItem)}\n        setOpen={() => {\n          setCurrentItem(null);\n        }}\n        productId={currentItem?.product?._id}\n      />\n      <Grid container spacing={1}>\n        <Grid item lg={4} md={4} xl={6} xs={12}>\n          <Card>\n            <CardHeader title=\"Add filters\" />\n            <CardContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel id=\"select-project\">Select project</InputLabel>\n                    <Select\n                      labelId=\"select-project\"\n                      name=\"project\"\n                      value={options.project}\n                      onChange={({ target }) =>\n                        setOptions((prev) => ({\n                          ...prev,\n                          project: target.value,\n                        }))\n                      }\n                    >\n                      <MenuItem value=\"\">---</MenuItem>\n                      {projects.map((project, projectIdx) => (\n                        <MenuItem value={project._id} key={projectIdx}>\n                          {project.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <ButtonGroup\n                    variant=\"contained\"\n                    aria-label=\"outlined primary button group\"\n                  >\n                    {btnFilters.map(({ id, name }, btnIdx) => (\n                      <Button\n                        key={btnIdx}\n                        color={options.time === id ? \"primary\" : \"\"}\n                        onClick={() =>\n                          setOptions((prev) => ({ ...prev, time: id }))\n                        }\n                      >\n                        {name}\n                      </Button>\n                    ))}\n                  </ButtonGroup>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={8} md={8} xl={6} xs={12}>\n          <Typography variant=\"h4\">Analytics page</Typography>\n          <CustomisedTable\n            tableTitle={`Filters: ${tableTitle}`}\n            columns={productAnalyticsColumns(onClickItem)}\n            loading={loading}\n            data={paginatedData}\n            withPagination\n            dataCount={analytics.length}\n            pageCount={Math.ceil(analytics.length / paginator.pageSize)}\n            handlePageChange={onPageChange}\n            page={paginator.pageNumber}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { DashboardLayout } from \"layouts/dashboard\";\nimport SetPassword from \"pages/set.password.page\";\nimport { ProjectPage } from \"pages/Project\";\nimport { QuotePage } from \"pages/Quote\";\nimport { InvoicePage } from \"pages/Invoice\";\nimport { SubscriptionPage } from \"pages/Subscription\";\nimport { store } from \"redux/store\";\nimport { CustomerPage } from \"pages/Customer\";\nimport { UserProfile } from \"./pages/UserProfile\";\nimport { LoginPage } from \"pages/Login\";\nimport { ProjectDetailPage } from \"pages/ProjectDetail\";\nimport { ProductPage } from \"pages/Product\";\nimport { ProductViewPage } from \"pages/ProductView\";\nimport { AnalyticsPage } from \"pages/Analytics\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    component: LoginPage,\n  },\n  {\n    path: \"/set-password/:token\",\n    exact: true,\n    component: SetPassword,\n  },\n  {\n    path: \"/set-password/:token/:action\",\n    exact: true,\n    component: SetPassword,\n  },\n  {\n    path: \"/products/:productId\",\n    exact: true,\n    component: ProductViewPage,\n  },\n  {\n    path: \"/dashboard\",\n    component: DashboardLayout,\n    routes: [\n      {\n        path: \"/dashboard/home\",\n        exact: true,\n        component: () => {\n          const {\n            login: {\n              userInfo: { user },\n            },\n          } = store.getState();\n          const route = user.role !== \"Client\" ? \"customers\" : \"projects\";\n          return <Redirect to={`/dashboard/${route}`} />;\n        },\n      },\n      {\n        path: \"/dashboard/customers\",\n        exact: true,\n        component: CustomerPage,\n      },\n      {\n        path: \"/dashboard/projects\",\n        exact: true,\n        component: ProjectPage,\n      },\n      {\n        path: \"/dashboard/products\",\n        exact: true,\n        component: ProductPage,\n      },\n      {\n        path: \"/dashboard/projects/:projectId\",\n        exact: true,\n        component: ProjectDetailPage,\n      },\n      {\n        path: \"/dashboard/quotes\",\n        exact: true,\n        component: QuotePage,\n      },\n      {\n        path: \"/dashboard/invoices\",\n        exact: true,\n        component: InvoicePage,\n      },\n      {\n        path: \"/dashboard/subscriptions\",\n        exact: true,\n        component: SubscriptionPage,\n      },\n      {\n        path: \"/dashboard/profile\",\n        exact: true,\n        component: UserProfile,\n      },\n      {\n        path: \"/dashboard/analytics\",\n        exact: true,\n        component: AnalyticsPage,\n      },\n    ],\n  },\n  {\n    component: () => <Redirect to=\"/dashboard/home\" />,\n  },\n];\nexport default routes;\n","import React, { useEffect, useState } from \"react\";\nimport { Registration } from \"./Registration\";\nimport { useSelector } from \"react-redux\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { deleteUser, getUsersList } from \"redux/actions/user\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { userColumns } from \"components/columns/userColumns\";\nimport { CustomerModel } from \"./CustomerModel\";\nimport { AlertConfirm } from \"components/AlertConfirm\";\n\nexport const CustomerPage = () => {\n  const [paginatedUsers, setPaginatedUsers] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate(10));\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n  const [openView, setOpenView] = useState(false);\n  const [confirmDel, setConfirmDel] = useState(false);\n\n  const userState = useSelector((state) => state);\n  const {\n    userList: { loading, users },\n    userRm: { loading: deleting, loaded: deleted },\n  } = userState;\n  useEffect(() => {\n    getUsersList();\n  }, []);\n  useEffect(() => {\n    if (deleted) {\n      getUsersList();\n      setConfirmDel(false);\n    }\n  }, [deleted]);\n  useEffect(() => {\n    if (users.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedUsers = paginate(users, pageNumber, pageSize);\n      setPaginatedUsers(paginatedUsers);\n    }\n  }, [users, paginator]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onUserClick = (user = {}, action) => {\n    setCurrentItem(user);\n    if (action === \"delete\") {\n      setConfirmDel(true);\n      return;\n    }\n    if (action === \"view\") {\n      setOpenView(true);\n      return;\n    }\n    setAction(action);\n  };\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"background.default\",\n        minHeight: \"100%\",\n        py: 3,\n      }}\n    >\n      <Grid container spacing={1}>\n        <CustomerModel\n          open={openView}\n          setOpen={() => setOpenView(false)}\n          currentItem={currentItem}\n        />\n        <AlertConfirm\n          loading={deleting}\n          message={\n            currentItem &&\n            `Are you sure you want to delete ${currentItem.firstName}`\n          }\n          onConfirmYes={() => deleteUser(currentItem._id)}\n          open={confirmDel}\n          setOpen={() => setConfirmDel(false)}\n        />\n        <Grid item lg={4} md={4} xl={6} xs={12}>\n          <Registration action={action} currentItem={currentItem} />\n        </Grid>\n        <Grid item lg={8} md={8} xl={6} xs={12}>\n          <CustomisedTable\n            tableTitle=\"All users\"\n            loading={loading}\n            columns={userColumns(onUserClick)}\n            dataCount={paginatedUsers.length}\n            data={paginatedUsers}\n            withPagination\n            pageCount={Math.ceil(users.length / paginator.pageSize)}\n            handlePageChange={onPageChange}\n            page={paginator.pageNumber}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { useSelector } from \"react-redux\";\nimport { ProjectRegistration } from \"./ProjectRegistration\";\nimport { getProjects } from \"redux/actions/project\";\nimport { projectColumns } from \"components/columns\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { ProjectModel } from \"./ProjectModal\";\n\nexport const ProjectPage = () => {\n  const projectState = useSelector((state) => state);\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n  const [openView, setOpenView] = useState(false);\n  const {\n    projectsGet: { loading, projects },\n    projectAdd: { loaded: added },\n    projectEdit: { loaded: updated },\n    login: {\n      userInfo: { user },\n    },\n  } = projectState;\n  useEffect(() => {\n    if (projects.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(projects, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [projects, paginator]);\n  useEffect(() => {\n    getProjects({});\n  }, []);\n  useEffect(() => {\n    if (added || updated) {\n      setCurrentItem(null);\n      setAction(\"add\");\n      getProjects({});\n    }\n  }, [added, updated]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onProjectClick = (project = {}, action) => {\n    setCurrentItem(project);\n    if (action === \"view\") {\n      setOpenView(true);\n      return;\n    }\n    setAction(action);\n  };\n  return (\n    <Grid container spacing={2} sx={{ py: 3 }}>\n      <ProjectModel\n        open={openView}\n        setOpen={() => setOpenView(false)}\n        currentItem={currentItem}\n      />\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <ProjectRegistration action={action} currentItem={currentItem} />\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"List of projects\"\n          columns={projectColumns(onProjectClick, user)}\n          loading={loading}\n          data={paginatedData}\n          withPagination\n          dataCount={projects.length}\n          pageCount={Math.ceil(projects.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { ProductRegistration } from \"./ProductRegistraction\";\nimport { useSelector } from \"react-redux\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { productColumns } from \"components/columns/productColumns\";\nimport { deleteProduct, getProducts } from \"redux/actions/product\";\nimport { ImagePreview } from \"./ImagePreview\";\nimport { AlertConfirm } from \"components/AlertConfirm\";\nimport { notifier } from \"utils/notifier\";\n\nexport const ProductPage = () => {\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [openImgView, setOpenImgView] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n  const [confirmDel, setConfirmDel] = useState(false);\n\n  const appState = useSelector((state) => state);\n  const {\n    productsGet: { loading: fetching, products, loaded },\n    productRm: { loading: deleting, loaded: deleted, message },\n    login: {\n      userInfo: { user },\n    },\n  } = appState;\n\n  useEffect(() => {\n    if (loaded) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(products, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [products, paginator, loaded]);\n  useEffect(() => {\n    getProducts({});\n  }, []);\n  useEffect(() => {\n    if (deleted) {\n      notifier.success(message);\n      setConfirmDel(false);\n      getProducts({});\n    }\n  }, [deleted, message]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onProductClick = (product = {}, action) => {\n    setCurrentItem(product);\n    if (action === \"preview\") {\n      setOpenImgView(true);\n      return;\n    }\n    if (action === \"delete\") {\n      setConfirmDel(true);\n      return;\n    }\n    setAction(action);\n  };\n  return (\n    <Grid container spacing={2} sx={{ py: 3 }}>\n      <AlertConfirm\n        loading={deleting}\n        message={\n          currentItem && `Are you sure you want to delete ${currentItem.name}`\n        }\n        onConfirmYes={() => deleteProduct(currentItem?._id)}\n        open={confirmDel}\n        setOpen={() => setConfirmDel(false)}\n      />\n      <ImagePreview\n        open={openImgView}\n        setOpen={() => setOpenImgView(false)}\n        productId={currentItem?._id}\n      />\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <ProductRegistration\n          action={action}\n          currentItem={currentItem}\n          setAction={setAction}\n        />\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"List of 3D assets\"\n          columns={productColumns(onProductClick, user)}\n          loading={fetching}\n          data={paginatedData}\n          withPagination\n          dataCount={products.length}\n          pageCount={Math.ceil(products.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { QuoteRegistration } from \"./QuoteRegistration\";\nimport { useSelector } from \"react-redux\";\nimport { getQuotes } from \"redux/actions/quote\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { quoteColumns } from \"components/columns/quoteColumns\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { QuoteItemsDialog } from \"./QuoteItemsDialog\";\n\nexport const QuotePage = () => {\n  const quoteState = useSelector((state) => state);\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n\n  const {\n    quotesGet: { loading, quotes },\n    quoteAdd: { loaded: added },\n    quoteEdit: { loaded: updated, loading: updating },\n    login: { userInfo },\n  } = quoteState;\n  useEffect(() => {\n    if (quotes.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(quotes, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [quotes, paginator]);\n  useEffect(() => {\n    getQuotes();\n  }, []);\n  useEffect(() => {\n    if (added || updated) {\n      onReset();\n      getQuotes();\n    }\n  }, [added, updated]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onQuoteClick = (project = {}, action) => {\n    setCurrentItem(project);\n    setAction(action);\n  };\n  const onReset = () => {\n    setCurrentItem(null);\n    setAction(\"add\");\n  };\n  return (\n    <Grid\n      container\n      spacing={2}\n      sx={{\n        py: 3,\n      }}\n    >\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <QuoteRegistration action={action} currentItem={currentItem} />\n        <QuoteItemsDialog\n          open={action === \"items\"}\n          setOpen={() => onReset()}\n          quote={currentItem}\n          loading={updating}\n          user={userInfo.user}\n        />\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"All proposals\"\n          columns={quoteColumns(onQuoteClick, userInfo.user)}\n          loading={loading}\n          data={paginatedData}\n          withPagination\n          dataCount={quotes.length}\n          pageCount={Math.ceil(quotes.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { useSelector } from \"react-redux\";\nimport { InvoiceRegistration } from \"./InvoiceRegistration\";\nimport { getInvoices } from \"redux/actions/invoice\";\nimport { invoiceColumns } from \"components/columns\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\n\nexport const InvoicePage = () => {\n  const invoiceState = useSelector((state) => state);\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n  const {\n    invoicesGet: { loading, invoices },\n    invoiceEdit: { loaded: updated },\n    login: { userInfo },\n  } = invoiceState;\n  useEffect(() => {\n    if (invoices.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(invoices, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [invoices, paginator]);\n  useEffect(() => {\n    getInvoices({});\n  }, []);\n  useEffect(() => {\n    if (updated) {\n      setCurrentItem(null);\n      setAction(\"add\");\n      getInvoices({});\n    }\n  }, [updated]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onInvoiceClick = (invoice = {}, action) => {\n    setCurrentItem(invoice);\n    setAction(action);\n  };\n  return (\n    <Grid\n      container\n      spacing={2}\n      sx={{\n        py: 3,\n      }}\n    >\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <InvoiceRegistration action={action} currentItem={currentItem} />\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"List of invoices\"\n          columns={invoiceColumns(onInvoiceClick, userInfo.user)}\n          loading={loading}\n          data={paginatedData}\n          withPagination\n          dataCount={invoices.length}\n          pageCount={Math.ceil(invoices.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { useSelector } from \"react-redux\";\nimport { getGetSubscriptions } from \"redux/actions/subscription\";\nimport { subscriptionColumns } from \"components/columns\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\n\nexport const SubscriptionPage = () => {\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const {\n    subscriptionsGet: { loading, subscriptions },\n    login: { userInfo },\n  } = useSelector((state) => state);\n  useEffect(() => {\n    if (subscriptions.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(subscriptions, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [subscriptions, paginator]);\n  useEffect(() => {\n    getGetSubscriptions();\n  }, []);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  return (\n    <Grid\n      container\n      spacing={2}\n      sx={{\n        py: 3,\n      }}\n    >\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"List of subscriptions\"\n          columns={subscriptionColumns(userInfo.user)}\n          loading={loading}\n          data={paginatedData}\n          withPagination\n          dataCount={subscriptions.length}\n          pageCount={Math.ceil(subscriptions.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import { store } from \"../store\";\nimport { GET_SUBSCRIPTIONS } from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const getGetSubscriptions = () => {\n  store.dispatch({\n    type: GET_SUBSCRIPTIONS,\n    payload: http.get(\"/subscription\"),\n  });\n};\n","import React from \"react\";\nimport { Avatar, Button, Chip } from \"@material-ui/core\";\n\nexport const productAnalyticsColumns = (onItemClick) => [\n  {\n    content: (item) => (\n      <Button onClick={() => onItemClick(item, \"preview\")}>\n        {item.product?.name}\n      </Button>\n    ),\n    label: \"3D Assets\",\n  },\n  {\n    path: \"users\",\n    label: \"Users\",\n  },\n  {\n    path: \"clicks\",\n    label: \"AR Users\",\n  },\n  {\n    content: (item) => (\n      <>\n        <Chip\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          label=\"iOs\"\n          avatar={<Avatar>{item.iOs}</Avatar>}\n        />\n        <Chip\n          variant=\"outlined\"\n          color=\"secondary\"\n          size=\"small\"\n          label=\"Android\"\n          avatar={<Avatar>{item.androids}</Avatar>}\n        />\n        <Chip\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"Desktop\"\n          avatar={<Avatar>{item.desktops}</Avatar>}\n        />\n      </>\n    ),\n    label: \"Device by Users\",\n  },\n  {\n    content: (item) =>\n      item.countries.map((el, elIdx) => (\n        <Chip\n          variant=\"outlined\"\n          size=\"small\"\n          label={el.name}\n          avatar={<Avatar>{el.count}</Avatar>}\n          key={elIdx}\n        />\n      )),\n    label: \"Country by Users\",\n  },\n];\n","import { colors } from \"@material-ui/core\";\n\nconst white = \"#FFFFFF\";\nconst black = \"#000000\";\n\nconst palette = {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100],\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[\"A400\"],\n    light: colors.blue[\"A400\"],\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400],\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400],\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400],\n  },\n  purple: {\n    contrastText: white,\n    dark: \"#8967fc\",\n    main: \"#8967fc\",\n    light: \"#8967fc\",\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400],\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600],\n  },\n  background: {\n    default: \"#DFD9DF\",\n    paper: white,\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200],\n};\nexport default palette;\n","import palette from './palette';\n\nconst typography = {\n\th1: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '35px',\n\t\tletterSpacing: '-0.24px',\n\t\tlineHeight: '40px'\n\t},\n\th2: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '29px',\n\t\tletterSpacing: '-0.24px',\n\t\tlineHeight: '32px'\n\t},\n\th3: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '24px',\n\t\tletterSpacing: '-0.06px',\n\t\tlineHeight: '28px'\n\t},\n\th4: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '20px',\n\t\tletterSpacing: '-0.06px',\n\t\tlineHeight: '24px'\n\t},\n\th5: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '16px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '20px'\n\t},\n\th6: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '14px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '20px'\n\t},\n\tsubtitle1: {\n\t\tcolor: palette.text.primary,\n\t\tfontSize: '16px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '25px'\n\t},\n\tsubtitle2: {\n\t\tcolor: palette.text.secondary,\n\t\tfontWeight: 400,\n\t\tfontSize: '14px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '21px'\n\t},\n\tbody1: {\n\t\tcolor: palette.text.primary,\n\t\tfontSize: '14px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '21px'\n\t},\n\tbody2: {\n\t\tcolor: palette.text.secondary,\n\t\tfontSize: '12px',\n\t\tletterSpacing: '-0.04px',\n\t\tlineHeight: '18px'\n\t},\n\tbutton: {\n\t\tcolor: palette.text.primary,\n\t\tfontSize: '14px'\n\t},\n\tcaption: {\n\t\tcolor: palette.text.secondary,\n\t\tfontSize: '11px',\n\t\tletterSpacing: '0.33px',\n\t\tlineHeight: '13px'\n\t},\n\toverline: {\n\t\tcolor: palette.text.secondary,\n\t\tfontSize: '11px',\n\t\tfontWeight: 500,\n\t\tletterSpacing: '0.33px',\n\t\tlineHeight: '13px',\n\t\ttextTransform: 'uppercase'\n\t}\n};\nexport default typography;\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nconst overrides = {\n\tMuiButton,\n\tMuiIconButton,\n\tMuiPaper,\n\tMuiTableCell,\n\tMuiTableHead,\n\tMuiTypography\n};\nexport default overrides;\n","const MuiButton = {\n\tcontained: {\n\t\tboxShadow:\n\t\t\t'0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n\t\tbackgroundColor: '#FFFFFF'\n\t}\n};\nexport default MuiButton;\n","import palette from '../palette';\n\nconst MuiIconButton = {\n\troot: {\n\t\tcolor: palette.icon,\n\t\t'&:hover': {\n\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.03)'\n\t\t}\n\t}\n};\nexport default MuiIconButton;\n","const MuiPaper = {\n\televation1: {\n\t\tboxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n\t}\n};\nexport default MuiPaper;\n","import palette from '../palette';\nimport typography from '../typography';\n\nconst MuiTableCell = {\n\troot: {\n\t\t...typography.body1,\n\t\tborderBottom: `1px solid ${palette.divider}`\n\t}\n};\nexport default MuiTableCell;\n","import { colors } from '@material-ui/core';\n\nconst MuiTableHead = {\n\troot: {\n\t\tbackgroundColor: colors.grey[50]\n\t}\n};\nexport default MuiTableHead;\n","const MuiTypography = {\n\tgutterBottom: {\n\t\tmarginBottom: 8\n\t}\n};\nexport default MuiTypography;\n","import { createTheme } from \"@material-ui/core\";\n\nimport palette from \"./palette\";\nimport typography from \"./typography\";\nimport overrides from \"./overrides\";\n\nconst theme = createTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100,\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport { Provider as StoreProvider } from \"react-redux\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { renderRoutes } from \"react-router-config\";\nimport { store } from \"./redux/store\";\nimport routes from \"./routes\";\nimport theme from \"./theme\";\n\nfunction App() {\n  const history = createBrowserHistory();\n  return (\n    <ThemeProvider theme={theme}>\n      <StoreProvider store={store}>\n        <ToastContainer />\n        <Router history={history}>{renderRoutes(routes)}</Router>\n      </StoreProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"@google/model-viewer\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}