{"version":3,"sources":["redux/utils/baseStates.js","redux/actions/actionTypes.js","redux/utils/actions.js","redux/utils/reducer.js","redux/reducers/index.js","redux/reducers/user.reducer.js","redux/reducers/project.reducer.js","redux/reducers/quote.reducer.js","redux/reducers/invoice.reducer.js","redux/reducers/subscription.reducer.js","redux/reducers/dashboard.reducer.js","redux/reducers/file.reducer.js","utils/notifier.js","redux/utils/errorHandler.js","redux/store.js","components/dashboard/subscriptions.component.js","components/dashboard/customers.component.js","components/dashboard/count.projects.component.js","components/dashboard/quotes.component.js","utils/constants.js","utils/http.js","redux/actions/project.js","components/loading.component.js","styles/headerStyles.js","redux/actions/user.js","components/AppHeader/NavigationMenu.js","components/AppHeader/MobileMenu.js","utils/helper.js","components/AppHeader/NotificationsMenu.js","redux/actions/dashboard.js","components/AppHeader/AppHeader.js","layouts/dashboard.js","assets/ari_cube.png","pages/set.password.page.js","components/CustomizedTable/styles.js","components/Paginate.js","components/NoDisplayData.js","components/CustomizedTable/CustomizedTable.js","styles/formStyles.js","components/DraftEditor/styles.js","components/DraftEditor/DraftEditor.js","pages/Project/projectConstants.js","pages/Project/ProjectRegistration.js","components/columns/projectColumns.js","components/columns/userColumns.js","components/columns/invoiceColumns.js","components/columns/subscriptionColumns.js","utils/paginate.js","pages/Project/ProjectModal.js","redux/actions/quote.js","pages/Quote/QuoteRegistration.js","components/columns/quoteColumns.js","pages/Quote/QuoteItemsDialog.js","redux/actions/invoice.js","pages/Invoice/InvoiceRegistration.js","pages/Customer/styles.js","pages/Customer/RegistrationSteps.js","pages/Customer/Registration.js","pages/Customer/CustomerModel.js","components/AlertConfirm.js","pages/UserProfile/AccountProfile.js","pages/UserProfile/ConfirmUpdate.js","pages/UserProfile/AccountDetails.js","pages/UserProfile/UserProfile.js","pages/Login/EmailDialog.js","pages/Login/Login.js","pages/Product/productConstants.js","redux/actions/product.js","pages/Product/AttributeEditor/initialStates.js","pages/ProductView/ProductView.js","pages/ProjectDetail/ViewProductDialog.js","pages/ProjectDetail/ProjectDetail.js","pages/Product/ProductRegistraction.js","components/columns/productColumns.js","components/ButtonCounter.js","components/CameraOrbit.js","pages/Product/productStyles.js","pages/Product/AttributeEditor/Scene.js","pages/Product/AttributeEditor/Lighting.js","pages/Product/AttributeEditor/Material.js","pages/Product/AttributeEditor/Annotation.js","pages/Product/AttributeEditor/AREditor.js","pages/Product/AttributeEditor/ManageImages.js","pages/Product/AttributeEditor/Poster.js","pages/Product/AttributeEditor/AddedProducts.js","pages/Product/AttributeEditor/QRCodeViewer.js","pages/Product/AttributeEditor/AttributeEditor.js","pages/Product/ImagePreview.js","pages/Analytics/Analytics.js","routes.js","pages/Customer/Customer.js","pages/Project/Project.js","pages/Product/Product.js","pages/Quote/Quote.js","pages/Invoice/Invoice.js","pages/Subscription/Subscription.js","redux/actions/subscription.js","components/columns/productAnalyticsColumns.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","reportWebVitals.js","index.js"],"names":["baseState","key","value","loading","loaded","USER_SIGNIN","USER_SIGNOUT","USER_LIST","USER_REGISTER","SET_PASSWORD","USER_UPDATE","USER_DELETE","UPDATE_PROFILE","SEND_LINK","RESET_PASSWORD","ADD_NEW_PROJECT","EDIT_PROJECT","GET_PROJECTS","GET_PROJECT_HISTORIES","GET_PROJECT_DETAILS","ADD_NEW_LOG","ADD_PROJECT_PROD","GET_PROJECT_PROD","ADD_NEW_QUOTE","UPDATE_QUOTE","GET_QUOTES","GET_INVOICES","UPDATE_INVOICE","GET_SUBSCRIPTIONS","GET_DASHBOARD_COUNTS","GET_NOTIFICATIONS","GET_NOTIFICATIONS_COUNT","UPLOAD_PRODUCT_IMAGES","ADD_NEW_PRODUCT","GET_PRODUCTS","GET_PRODUCT_IMAGES","UPDATE_PRODUCT","UPDATE_ATTRIBUTES","GET_PRODUCT","UPLOAD_ATTR_IMAGE","RESET_UPLOAD_A_IMAGE","DELETE_ATTR_IMAGE","GENERATE_QR","GET_ANALYTICS","ADD_ANALYTIC","pending","type","fulfilled","rejected","returnData","types","string","object","array","promisedReducer","actionType","dataKey","dataType","clearAtPending","searchKey","state","action","theState","payload","data","combineReducers","login","user","userInfo","register","userList","users","passwordSet","message","projectAdd","projectsGet","projects","projectEdit","quoteAdd","quotesGet","quotes","quoteEdit","invoicesGet","invoices","invoiceEdit","subscriptionsGet","subscriptions","dashboard","counts","userEdit","userRm","profileEdit","linkSend","pwdReset","historiesGet","histories","notifsGet","notifs","notifsCount","count","projectGet","project","logAdd","log","fileUpload","productAdd","productsGet","productImg","productEdit","attrUpdate","productGet","attrImg","fileName","imgAttrDel","projectAddProd","projectProdsGet","analyticsGet","analyticAdd","qrGenerate","qr","notifier","msg","toast","TYPE","ERROR","position","POSITION","BOTTOM_RIGHT","toastId","DEFAULT","BOTTOM_LEFT","errorHandler","next","isPromise","meta","localError","catch","error","errorMessage","response","apiError","displayMsg","Array","isArray","initialState","localStorage","getItem","JSON","parse","store","preloadedState","isDev","process","middlewares","thunkMiddleware","promise","middlewareEnhancer","composeWithDevTools","applyMiddleware","enhancers","composedEnhancers","compose","createStore","rootReducer","configureStore","Subscriptions","Card","sx","height","CardContent","Grid","container","spacing","justifyContent","item","Typography","color","gutterBottom","variant","Avatar","backgroundColor","red","width","Box","pt","display","alignItems","TotalCustomers","green","TotalProjects","TotalQuotes","USER_INFO","INVOICE_ROUTE","IMAGES_3D_PATH","IMAGES_PATH","BASE_URL","token","http","axios","create","baseURL","headers","Authorization","getProjects","status","clientId","params","dispatch","get","getProjectHistories","projectId","Loading","className","useStyles","makeStyles","theme","grow","flexGrow","appBar","menuButton","marginRight","title","breakpoints","up","search","borderRadius","shape","alpha","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","sectionDesktop","sectionMobile","getUsersList","userRoleType","userUrl","updateProfile","patch","menuId","NavigationMenu","anchorEl","isMenuOpen","handleMenuClose","navigations","link","role","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","map","itemIdx","MenuItem","onClick","component","Link","to","Divider","mobileMenuId","MobileMenu","mobileMoreAnchorEl","isMobileMenuOpen","handleMobileMenuClose","handleNavMenuOpen","notificationsCount","IconButton","Badge","badgeContent","Notifications","Boolean","fullName","AccountCircle","notifUser","notif","name","userRole","createdBy","companyName","notificationsMenuId","NotificationsMenu","useSelector","toLink","url","quote","length","notifIdx","ListItem","ListItemText","primary","description","secondary","style","moment","createdAt","fromNow","getNotifications","routeParams","AppHeader","children","classes","React","useState","setAnchorEl","setMobileMoreAnchorEl","notifAnchorEl","setNotifAnchorEl","appState","useEffect","event","currentTarget","AppBar","Toolbar","noWrap","edge","firstName","ExpandMore","countsSize","sizes","Admin","lg","sm","xl","xs","Manager","Client","password","confirmPassword","SetPassword","history","match","credentials","setCredentials","set","setting","setTimeout","replace","onHandleChange","e","preventDefault","target","onSubmit","post","resetPassword","setPassword","src","Logo","alt","htmlFor","placeholder","required","onChange","disabled","useTableStyles","root","row","marginTop","spacer","importButton","exportButton","searchInput","content","tableContent","inner","nameContainer","avatar","actions","typography","button","listStyle","userSelect","active","activeLink","break","breakLink","nextLink","outline","cursor","colors","blueGrey","page","pageLink","text","textAlign","previous","previousLink","Paginate","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","rest","activeClassName","activeLinkClassName","breakClassName","breakLabel","breakLinkClassName","containerClassName","disabledClassName","nextClassName","nextLabel","nextLinkClassName","pageClassName","pageLinkClassName","previousClassName","previousLabel","previousLinkClassName","subContainerClassName","NoDisplayData","align","StyledTableCell","withStyles","head","fontSize","body","TableCell","StyledTableRow","hover","TableRow","CustomisedTable","tableTitle","dataCount","columns","selectedData","withPagination","handlePageChange","size","renderCell","column","_","path","CardHeader","Table","TableHead","columnIdx","label","TableBody","tableRow","selected","indexOf","cellColumn","cellColumnIdx","CardActions","paper","flexDirection","margin","input","form","submit","float","maxWidth","inline","fontFamily","background","border","minWidth","boxShadow","overflowY","shadows","toolbar","marginBottom","borderLeft","borderTop","borderRight","borderBottom","divider","editor","DraftEditor","setEditorState","editorState","editorClassName","onEditorStateChange","options","inDropdown","list","toolbarClassName","wrapperClassName","nOfItems","startDate","format","dueDate","budget","userId","managerId","projectStatuses","projectTypes","ProjectRegistration","currentItem","values","setValues","EditorState","createEmpty","projectState","adding","added","updating","updated","states","manager","contentState","stateFromHTML","createWithContent","ComputerOutlined","toUpperCase","projectInfo","stateToHTML","getCurrentContent","_id","addNewProject","TextField","fullWidth","autoFocus","FormControl","InputLabel","Select","labelId","userIdx","typeIdx","choiceIdx","md","utils","DateFnsUtils","inputVariant","InputAdornmentProps","views","onValueChange","floatValue","prefix","thousandSeparator","customInput","Button","projectOwnerCol","projectColumns","onProjectClick","toLocaleString","ButtonGroup","Tooltip","ViewComfy","Publish","userColumns","onUserClick","invoiceColumns","onInvoiceClick","amount","due_date","rel","href","PrintRounded","subscriptionColumns","billingCycle","expirationDate","paginate","items","pageNumber","pageSize","startIndex","Pages","slice","take","initialPaginate","Transition","forwardRef","props","ref","Slide","direction","ProjectModel","setOpen","setProject","projectType","setProjectType","currentPType","find","useBlogTextInfoContentStyles","buttonStyles","contentStyles","toDowloadUrl","projectHistory","invoice","Dialog","TransitionComponent","DialogTitle","DialogContent","overline","lastName","HtmlParser","List","historyIdx","Accordion","AccordionSummary","expandIcon","AccordionDetails","DialogActions","getQuotes","updateQuote","quoteInfo","quoteId","taxes","discount","isFixed","expiryDate","propasalText","customerNote","customer","taxInitials","quoteCycles","qStatuses","QuoteRegistration","tax","setTax","propTextState","setPropTextState","noteState","setNoteState","quoteState","updatedAt","__v","prev","newValues","onChangeTax","quoteValues","cyle","dateValue","minDate","Date","FormControlLabel","control","Switch","checked","labelPlacement","index","findIndex","i","push","onAddTax","t","tIndex","Edit","taxTitle","newTaxes","filter","onDeleteTax","Cancel","comment","hasExpired","aDate","today","theDate","getTime","quoteColumns","onQuoteClick","amounts","total","initialItem","quantity","price","aggregateInit","subtotal","QuoteItemsDialog","setItem","aggregate","setAggregate","setItems","updateItems","newItems","aggregs","grandTotal","Number","reduce","sum","totDiscount","subTotal","a","b","totTax","toFixed","calculateAggregate","onQuoteUpdate","theItems","onAdd","TableContainer","Paper","colSpan","itemName","onRemove","Delete","rowSpan","Save","ThumbUp","ThumbDown","getInvoices","invoiceStatuses","InvoiceRegistration","invoiceInfo","invoiceId","updateInvoice","backButton","completed","instructions","textAlgin","removeBotton","userRoles","CustomerInfo","autoComplete","companyUrl","ContactInfo","onPhoneChange","email","defaultCountry","countryCodeEditable","phoneNumber","LocationInfo","country","city","postalCode","address","RoleInfo","roleIdx","steps","Registration","setUserInfo","activeStep","setActiveStep","Set","setCompleted","userRegisterState","registering","registered","step","submitHandler","registerUser","updateUser","totalSteps","allStepsCompleted","isStepComplete","has","Container","CssBaseline","Stepper","alternativeLabel","nonLinear","Step","StepButton","prevCompleted","newCompleted","add","prevActiveStep","newActiveStep","CustomerModel","setCustomer","AlertConfirm","onConfirmYes","DialogContentText","details","flexShrink","progress","uploadButton","AccountProfile","locationText","dateText","Intl","DateTimeFormat","resolvedOptions","timeZone","LinearProgress","ConfirmUpdate","onConfirm","AccountDetails","openConfirm","setOpenConfirm","handleChange","noValidate","subheader","helperText","EmailDialog","sku","bgColor","website","image","productStatuses","toOrbitProp","imageProp","theImgOrbitProp","orbitProp","default","useDefault","customAttr","custom","side","ud","toAttributes","skyboxImage","environmentImage","attribs","disableZoom","autoRotate","PRODUCTS_URL","uploadProductImages","files","imageType","otherAttribs","formData","FormData","Object","keys","append","productId","imgType","config","uploadUrl","getProducts","getProduct","addVisit","ancOrigins","document","location","ancestorOrigins","orbits","io","initialStates","autoRotateDelay","cameraOrbit","minCameraOrbit","maxCameraOrbit","cameraTarget","fieldOfView","exposure","shadowIntensity","shadowSoftness","scale","placement","metalness","roughness","arButtonImage","imageFiles","hotspots","ProductViewPage","styles","attributes","setAttributes","product","otherProps","modelViewer","querySelector","addEventListener","ev","material","model","materials","pbrMetallicRoughness","setMetallicFactor","setRoughnessFactor","imagesSrc","glb","usdz","ar","autoplay","slot","addNewAnalytic","hs","hsIdx","dataPosition","dataNormal","dataText","ViewProductDialog","logInitialState","ProductRegistration","setAction","openDz","setOpenDz","uploaded","uploading","filePath","editing","edited","productBody","u","itemNumber","editProduct","projectIdx","rows","rowsMax","onSave","acceptedFiles","showPreviews","maxFileSize","filesLimit","clearOnUnmount","submitButtonText","productColumns","onProductClick","ButtonCounter","attribute","onSetValue","Remove","Add","CameraOrbit","cardTitle","onSetCounterValue","onChangeCheckbox","counterValues","Checkbox","Collapse","in","tabs","Scene","attName","onInputChange","onSliderChange","onChangeColor","onChangeSwitch","defaultValue","floatingLabelText","Slider","min","max","valueLabelDisplay","Lighting","onLightningCheck","onLighteningSelect","shrink","img","imgIdx","imageFileName","CardMedia","Material","Annotation","modelViewRef","currentHotspot","setCurrentHotspot","imageViewer","current","nextNumber","theNum","pop","hotspotNum","onClickHotspot","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","positionAndNormal","positionAndNormalFromPoint","normal","currentAttributes","newHotspot","toString","theHotspots","removeEventListener","InputLabelProps","idx","theCurrentHotspot","onRemoveHotspot","scales","placements","AREditor","scaleIdx","pl","plIdx","imageTypes","ManageImages","setImgType","deleted","deletedFile","newAttribs","splice","cancelButtonText","dialogTitle","dense","ListItemSecondaryAction","imgFile","delete","deleteAttrImg","Poster","onDownloadPoster","posterUrl","jumpCameraToGoal","Promise","resolve","requestAnimationFrame","toBlob","mimeType","idealAspect","blob","URL","createObjectURL","createElement","download","click","AddedProducts","ppFetching","projProds","prod","prodIdx","QRCodeViewer","qrCodeData","bgcolor","entries","pair","encodeURIComponent","join","generateQR","AttributeEditor","activeBtn","setActiveBtn","newValue","orientation","attributesBody","updateAttributes","currentValue","customValues","attributeValues","ImagePreview","useRef","copied","setCopied","prevAttribs","querySelectorAll","forEach","remove","el","classList","dataset","appendChild","onSelectHotspot","div","textContent","hotspot","onCopy","initialOptions","time","btnFilters","routes","exact","logins","setLogins","openDialog","setOpenDialog","redirect","split","signState","sending","stringify","window","sendLink","signin","route","dashboardState","removeItem","renderRoutes","getState","paginatedUsers","setPaginatedUsers","paginator","setPaginator","setCurrentItem","openView","setOpenView","confirmDel","setConfirmDel","userState","deleting","minHeight","py","deleteUser","Math","ceil","paginatedData","setPaginatedData","openImgView","setOpenImgView","fetching","products","newLog","setNewLog","currentProd","setCurrentProd","openViewProduct","setOpenViewProduct","projectFetching","done","getProjectDetails","ppId","urlWithParams","getProjectProds","logBody","addNewLog","onReset","invoiceState","updatedInfo","reload","setOptions","setTableTitle","analytics","filters","getProdAnalytics","onItemClick","btnIdx","Chip","iOs","androids","desktops","countries","elIdx","black","contrastText","dark","indigo","main","light","blue","success","info","warning","orange","purple","icon","grey","h1","fontWeight","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createTheme","zIndex","drawer","App","createBrowserHistory","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb5eda33.chunk.js","sourcesContent":["/**\n *\n * @param {string} key Key of initial state\n * @param {object} value Its value\n */\nexport const baseState = (key, value) => ({\n\tloading: false,\n\tloaded: false,\n\t[key]: value\n});\n","export const USER_SIGNIN = \"USER_SIGNIN\";\nexport const USER_SIGNOUT = \"USER_SIGNOUT\";\nexport const USER_LIST = \"USER_LIST\";\nexport const USER_REGISTER = \"USER_REGISTER\";\nexport const SET_PASSWORD = \"SET_PASSWORD\";\nexport const USER_UPDATE = \"USER_UPDATE\";\nexport const USER_DELETE = \"USER_DELETE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const SEND_LINK = \"SEND_LINK\";\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\n\nexport const ADD_NEW_PROJECT = \"ADD_NEW_PROJECT\";\nexport const EDIT_PROJECT = \"EDIT_PROJECT\";\nexport const CHANGE_PROJECT_STATUS = \"CHANGE_PROJECT_STATUS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT_HISTORIES = \"GET_PROJECT_HISTORIES\";\nexport const GET_PROJECT_DETAILS = \"GET_PROJECT_DETAILS\";\nexport const ADD_NEW_LOG = \"ADD_NEW_LOG\";\nexport const ADD_PROJECT_PROD = \"ADD_PROJECT_PROD\";\nexport const GET_PROJECT_PROD = \"GET_PROJECT_PROD\";\n\nexport const ADD_NEW_QUOTE = \"ADD_NEW_QUOTA\";\nexport const UPDATE_QUOTE = \"UPDATE_QUOTE\";\nexport const GET_QUOTES = \"GET_QUOTES\";\n\nexport const GET_INVOICES = \"GET_INVOICES\";\nexport const UPDATE_INVOICE = \"UPDATE_INVOICE\";\n\nexport const GET_SUBSCRIPTIONS = \"GET_SUBSCRIPTIONS\";\n\nexport const GET_DASHBOARD_COUNTS = \"GET_DASHBOARD_COUNTS\";\nexport const GET_NOTIFICATIONS = \"GET_NOTIFICATIONS\";\nexport const GET_NOTIFICATIONS_COUNT = \"GET_NOTIFICATIONS_COUNT\";\nexport const SET_NOTIFICATION_READ = \"SET_NOTIFICATION_READ\";\n\nexport const UPLOAD_PRODUCT_IMAGES = \"UPLOAD_PRODUCT_IMAGES\";\nexport const ADD_NEW_PRODUCT = \"ADD_NEW_PRODUCT\";\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\nexport const GET_PRODUCT_IMAGES = \"GET_PRODUCT_IMAGES\";\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\nexport const UPDATE_ATTRIBUTES = \"UPDATE_ATTRIBUTES\";\nexport const GET_PRODUCT = \"GET_PRODUCT\";\nexport const UPLOAD_ATTR_IMAGE = \"UPLOAD_ATTR_IMAGE\";\nexport const RESET_UPLOAD_A_IMAGE = \"RESET_UPLOAD_A_IMAGE\";\nexport const DELETE_ATTR_IMAGE = \"DELETE_ATTR_IMAGE\";\nexport const GENERATE_QR = \"GENERATE_QR\";\n\nexport const GET_ANALYTICS = \"GET_ANALYTICS\";\nexport const ADD_ANALYTIC = \"ADD_ANALYTIC\";\n","export const pending = (type) => `${type}_PENDING`;\nexport const fulfilled = (type) => `${type}_FULFILLED`;\nexport const rejected = (type) => `${type}_REJECTED`;\n","import { pending, fulfilled, rejected } from \"./actions\";\nimport { baseState } from \"./baseStates\";\n\nconst returnData = (type = \"string\") => {\n  const types = {\n    string: \"\",\n    object: {},\n    array: [],\n  };\n  return types[type];\n};\n\n/**\n *\n * @param {String} actionType\n * @param {String} dataKey\n * @param {String} dataType\n * @param {Boolean} clearAtPending\n * @param {String} searchKey The key that holds data\n * @returns {Object} state\n */\nexport const promisedReducer =\n  (\n    actionType = \"\",\n    dataKey = \"state\",\n    dataType = \"string\",\n    clearAtPending = false,\n    searchKey = \"data\"\n  ) =>\n  (state = baseState(dataKey, returnData(dataType)), action) => {\n    switch (action.type) {\n      case pending(actionType):\n        let theState = { ...state, loaded: false, loading: true };\n        if (clearAtPending) {\n          theState = { ...theState, [dataKey]: returnData(dataType) };\n        }\n        return theState;\n      case fulfilled(actionType):\n        return {\n          ...state,\n          loading: false,\n          loaded: true,\n          [dataKey]: action.payload.data[searchKey],\n        };\n      case rejected(actionType):\n      default:\n        return {\n          ...state,\n          loading: false,\n        };\n    }\n  };\n","import { combineReducers } from \"redux\";\nimport { notifsCountReducer, notifsGetReducer } from \"./dashboard.reducer\";\nimport { invoiceEditReducer, invoicesGetReducer } from \"./invoice.reducer\";\nimport {\n  dashboardReducer,\n  historiesGetReducer,\n  logAddReducer,\n  projectAddReducer,\n  projectEditReducer,\n  projectGetReducer,\n  projectsGetReducer,\n} from \"./project.reducer\";\nimport {\n  quoteAddReducer,\n  quoteEditReducer,\n  quotesGetReducer,\n} from \"./quote.reducer\";\nimport { subscriptionsGetReducer } from \"./subscription.reducer\";\nimport { promisedReducer } from \"../utils/reducer\";\nimport {\n  loginReducer,\n  profileEditReducer,\n  registerReducer,\n  resetPasswordReducer,\n  sendLinkReducer,\n  setPasswordReducer,\n  userDeleteReducer,\n  userEditReducer,\n  usersListReducer,\n} from \"./user.reducer\";\nimport {\n  ADD_ANALYTIC,\n  ADD_NEW_PRODUCT,\n  ADD_PROJECT_PROD,\n  DELETE_ATTR_IMAGE,\n  GET_ANALYTICS,\n  GET_PRODUCT,\n  GET_PRODUCTS,\n  GET_PRODUCT_IMAGES,\n  GET_PROJECT_PROD,\n  UPDATE_ATTRIBUTES,\n  UPDATE_PRODUCT,\n  UPLOAD_PRODUCT_IMAGES,\n} from \"redux/actions/actionTypes\";\nimport { attrImageReducer, qrCodeGeneratorReducer } from \"./file.reducer\";\n\nexport default combineReducers({\n  login: loginReducer,\n  register: registerReducer,\n  userList: usersListReducer,\n  passwordSet: setPasswordReducer,\n  projectAdd: projectAddReducer,\n  projectsGet: projectsGetReducer,\n  projectEdit: projectEditReducer,\n  quoteAdd: quoteAddReducer,\n  quotesGet: quotesGetReducer,\n  quoteEdit: quoteEditReducer,\n  invoicesGet: invoicesGetReducer,\n  invoiceEdit: invoiceEditReducer,\n  subscriptionsGet: subscriptionsGetReducer,\n  dashboard: dashboardReducer,\n  userEdit: userEditReducer,\n  userRm: userDeleteReducer,\n  profileEdit: profileEditReducer,\n  linkSend: sendLinkReducer,\n  pwdReset: resetPasswordReducer,\n  historiesGet: historiesGetReducer,\n  notifsGet: notifsGetReducer,\n  notifsCount: notifsCountReducer,\n  projectGet: projectGetReducer,\n  logAdd: logAddReducer,\n  fileUpload: promisedReducer(UPLOAD_PRODUCT_IMAGES, \"filePath\", \"string\"),\n  productAdd: promisedReducer(ADD_NEW_PRODUCT, \"product\", \"object\"),\n  productsGet: promisedReducer(GET_PRODUCTS, \"products\", \"array\"),\n  productImg: promisedReducer(GET_PRODUCT_IMAGES, \"image\", \"object\"),\n  productEdit: promisedReducer(UPDATE_PRODUCT, \"message\", \"string\"),\n  attrUpdate: promisedReducer(UPDATE_ATTRIBUTES, \"message\", \"string\"),\n  productGet: promisedReducer(GET_PRODUCT, \"product\", \"object\", true),\n  attrImg: attrImageReducer,\n  imgAttrDel: promisedReducer(DELETE_ATTR_IMAGE, \"deletedFile\", \"string\"),\n  projectAddProd: promisedReducer(ADD_PROJECT_PROD, \"message\", \"string\", true),\n  projectProdsGet: promisedReducer(GET_PROJECT_PROD, \"projProds\", \"array\"),\n  analyticsGet: promisedReducer(GET_ANALYTICS, \"analytics\", \"array\"),\n  analyticAdd: promisedReducer(ADD_ANALYTIC, \"analytic\", \"object\", true),\n  qrGenerate: qrCodeGeneratorReducer,\n});\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  USER_REGISTER,\n  USER_SIGNIN,\n  USER_LIST,\n  SET_PASSWORD,\n  USER_SIGNOUT,\n  USER_UPDATE,\n  USER_DELETE,\n  UPDATE_PROFILE,\n  RESET_PASSWORD,\n  SEND_LINK,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const loginReducer = (\n  state = baseState(\"userInfo\", { user: {} }),\n  action\n) => {\n  switch (action.type) {\n    case pending(USER_SIGNIN): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_SIGNIN): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        userInfo: action.payload.data.data,\n      };\n    }\n    case USER_SIGNOUT: {\n      return {\n        ...state,\n        loaded: false,\n        userInfo: { user: {} },\n      };\n    }\n    case rejected(USER_SIGNIN):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const registerReducer = (state = baseState(\"userInfo\", {}), action) => {\n  switch (action.type) {\n    case pending(USER_REGISTER): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_REGISTER): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        userInfo: action.payload.data.data,\n      };\n    }\n    case rejected(USER_REGISTER):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const usersListReducer = (state = baseState(\"users\", []), action) => {\n  switch (action.type) {\n    case pending(USER_LIST): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_LIST): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        users: action.payload.data.data,\n      };\n    }\n    case rejected(USER_LIST):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const setPasswordReducer = (\n  state = baseState(\"message\", \"\"),\n  action\n) => {\n  switch (action.type) {\n    case pending(SET_PASSWORD): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(SET_PASSWORD): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(SET_PASSWORD):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const userEditReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(USER_UPDATE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_UPDATE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: action.payload.data.message,\n      };\n    }\n    case rejected(USER_UPDATE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const userDeleteReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(USER_DELETE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(USER_DELETE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: action.payload.data.message,\n      };\n    }\n    case rejected(USER_DELETE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const profileEditReducer = (\n  state = baseState(\"userInfo\", { user: {} }),\n  action\n) => {\n  switch (action.type) {\n    case pending(UPDATE_PROFILE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(UPDATE_PROFILE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        userInfo: action.payload.data.data,\n      };\n    }\n    case rejected(UPDATE_PROFILE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const sendLinkReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(SEND_LINK): {\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    }\n    case fulfilled(SEND_LINK): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(SEND_LINK):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const resetPasswordReducer = (\n  state = baseState(\"message\", \"\"),\n  action\n) => {\n  switch (action.type) {\n    case pending(RESET_PASSWORD): {\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    }\n    case fulfilled(RESET_PASSWORD): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(RESET_PASSWORD):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  ADD_NEW_LOG,\n  ADD_NEW_PROJECT,\n  EDIT_PROJECT,\n  GET_DASHBOARD_COUNTS,\n  GET_PROJECTS,\n  GET_PROJECT_DETAILS,\n  GET_PROJECT_HISTORIES,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const projectAddReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(ADD_NEW_PROJECT): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(ADD_NEW_PROJECT): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(ADD_NEW_PROJECT):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const projectEditReducer = (\n  state = baseState(\"message\", \"\"),\n  action\n) => {\n  switch (action.type) {\n    case pending(EDIT_PROJECT): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(EDIT_PROJECT): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(EDIT_PROJECT):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const projectsGetReducer = (\n  state = baseState(\"projects\", []),\n  action\n) => {\n  switch (action.type) {\n    case pending(GET_PROJECTS): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_PROJECTS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        projects: action.payload.data.data,\n      };\n    }\n    case rejected(GET_PROJECTS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const dashboardReducer = (state = baseState(\"counts\", {}), action) => {\n  switch (action.type) {\n    case pending(GET_DASHBOARD_COUNTS): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_DASHBOARD_COUNTS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        counts: action.payload.data.data,\n      };\n    }\n    case rejected(GET_DASHBOARD_COUNTS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const historiesGetReducer = (\n  state = baseState(\"histories\", []),\n  action\n) => {\n  switch (action.type) {\n    case pending(GET_PROJECT_HISTORIES): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_PROJECT_HISTORIES): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        histories: action.payload.data.data,\n      };\n    }\n    case rejected(GET_PROJECT_HISTORIES):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const projectGetReducer = (state = baseState(\"project\", {}), action) => {\n  switch (action.type) {\n    case pending(GET_PROJECT_DETAILS): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_PROJECT_DETAILS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        project: action.payload.data.data,\n      };\n    }\n    case rejected(GET_PROJECT_DETAILS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const logAddReducer = (state = baseState(\"log\", {}), action) => {\n  switch (action.type) {\n    case pending(ADD_NEW_LOG): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(ADD_NEW_LOG): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        log: action.payload.data.data,\n      };\n    }\n    case rejected(ADD_NEW_LOG):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  ADD_NEW_QUOTE,\n  UPDATE_QUOTE,\n  GET_QUOTES,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const quoteAddReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(ADD_NEW_QUOTE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(ADD_NEW_QUOTE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(ADD_NEW_QUOTE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const quoteEditReducer = (state = baseState(\"message\", \"\"), action) => {\n  switch (action.type) {\n    case pending(UPDATE_QUOTE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(UPDATE_QUOTE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(UPDATE_QUOTE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const quotesGetReducer = (state = baseState(\"quotes\", []), action) => {\n  switch (action.type) {\n    case pending(GET_QUOTES): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_QUOTES): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        quotes: action.payload.data.data,\n      };\n    }\n    case rejected(GET_QUOTES):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport { UPDATE_INVOICE, GET_INVOICES } from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const invoiceEditReducer = (\n  state = baseState(\"message\", \"\"),\n  action\n) => {\n  switch (action.type) {\n    case pending(UPDATE_INVOICE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(UPDATE_INVOICE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        message: \"Success\",\n      };\n    }\n    case rejected(UPDATE_INVOICE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const invoicesGetReducer = (\n  state = baseState(\"invoices\", []),\n  action\n) => {\n  switch (action.type) {\n    case pending(GET_INVOICES): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_INVOICES): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        invoices: action.payload.data.data,\n      };\n    }\n    case rejected(GET_INVOICES):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport { GET_SUBSCRIPTIONS } from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const subscriptionsGetReducer = (\n  state = baseState(\"subscriptions\", []),\n  action\n) => {\n  switch (action.type) {\n    case pending(GET_SUBSCRIPTIONS): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_SUBSCRIPTIONS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        subscriptions: action.payload.data.data,\n      };\n    }\n    case rejected(GET_SUBSCRIPTIONS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  GET_NOTIFICATIONS,\n  GET_NOTIFICATIONS_COUNT,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const notifsGetReducer = (state = baseState(\"notifs\", []), action) => {\n  switch (action.type) {\n    case pending(GET_NOTIFICATIONS): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_NOTIFICATIONS): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        notifs: action.payload.data.data,\n      };\n    }\n    case rejected(GET_NOTIFICATIONS):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const notifsCountReducer = (state = baseState(\"count\", 0), action) => {\n  switch (action.type) {\n    case pending(GET_NOTIFICATIONS_COUNT): {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case fulfilled(GET_NOTIFICATIONS_COUNT): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        count: action.payload.data.data,\n      };\n    }\n    case rejected(GET_NOTIFICATIONS_COUNT):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { baseState } from \"../utils/baseStates\";\nimport {\n  UPLOAD_ATTR_IMAGE,\n  RESET_UPLOAD_A_IMAGE,\n  GENERATE_QR,\n} from \"../actions/actionTypes\";\nimport { pending, fulfilled, rejected } from \"../utils/actions\";\n\nexport const attrImageReducer = (state = baseState(\"fileName\", \"\"), action) => {\n  switch (action.type) {\n    case pending(UPLOAD_ATTR_IMAGE): {\n      return {\n        ...state,\n        loaded: false,\n        loading: true,\n      };\n    }\n    case fulfilled(UPLOAD_ATTR_IMAGE): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        fileName: action.payload.data.data,\n      };\n    }\n    case RESET_UPLOAD_A_IMAGE:\n      return {\n        ...state,\n        loaded: false,\n        fileName: \"\",\n      };\n    case rejected(UPLOAD_ATTR_IMAGE):\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\nexport const qrCodeGeneratorReducer = (state = baseState(\"qr\", \"\"), action) => {\n  switch (action.type) {\n    case GENERATE_QR: {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n        qr: action.payload,\n      };\n    }\n    default:\n      return {\n        ...state,\n        loading: false,\n      };\n  }\n};\n","import { toast } from 'react-toastify';\n\nconst messageId = 13;\nexport const notifier = {\n\terror: (msg) =>\n\t\ttoast(msg, {\n\t\t\ttype: toast.TYPE.ERROR,\n\t\t\tposition: toast.POSITION.BOTTOM_RIGHT,\n\t\t\ttoastId: messageId\n\t\t}),\n\tsuccess: (msg) =>\n\t\ttoast(msg, {\n\t\t\ttype: toast.TYPE.DEFAULT,\n\t\t\tposition: toast.POSITION.BOTTOM_LEFT,\n\t\t\ttoastId: messageId\n\t\t})\n};\n","import isPromise from 'is-promise';\nimport { notifier } from '../../utils/notifier';\n\nexport const errorHandler = () => {\n\treturn (next) => (action) => {\n\t\tif (!isPromise(action.payload)) {\n\t\t\treturn next(action);\n\t\t}\n\n\t\tif (!action.meta || !action.meta.localError) {\n\t\t\treturn next(action).catch((error) => {\n\t\t\t\tlet errorMessage = '';\n\t\t\t\tif (error.response) {\n\t\t\t\t\tconst { error: apiError, message } = error.response.data;\n\t\t\t\t\terrorMessage = apiError || message;\n\t\t\t\t} else {\n\t\t\t\t\terrorMessage = error.message;\n\t\t\t\t}\n\t\t\t\tconst displayMsg = Array.isArray(errorMessage)\n\t\t\t\t\t? errorMessage[0]\n\t\t\t\t\t: errorMessage;\n\t\t\t\tnotifier.error(displayMsg);\n\t\t\t});\n\t\t}\n\n\t\treturn next(action);\n\t};\n};\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\nimport { errorHandler } from './utils';\n\nconst initialState = {\n\tlogin: {\n\t\tuserInfo: localStorage.getItem('userInfo')\n\t\t\t? JSON.parse(localStorage.getItem('userInfo'))\n\t\t\t: { user: {} }\n\t}\n};\nconst configureStore = (preloadedState = initialState) => {\n\tconst isDev = process.env.NODE_ENV === 'development';\n\tconst middlewares = [errorHandler, thunkMiddleware, promise]; // loggerMiddleware\n\n\tconst middlewareEnhancer = isDev\n\t\t? composeWithDevTools(applyMiddleware(...middlewares))\n\t\t: applyMiddleware(...middlewares);\n\n\tconst enhancers = [middlewareEnhancer];\n\tconst composedEnhancers = compose(...enhancers);\n\n\tconst store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n\treturn store;\n};\nexport const store = configureStore();\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport MoneyIcon from \"@material-ui/icons/Money\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst Subscriptions = ({ counts }) => (\n  <Card sx={{ height: \"100%\" }}>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            Subscriptions\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {counts}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: red[600],\n              height: 56,\n              width: 56,\n            }}\n          >\n            <MoneyIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          pt: 2,\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      ></Box>\n    </CardContent>\n  </Card>\n);\n\nexport default Subscriptions;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport PeopleIcon from \"@material-ui/icons/PeopleOutlined\";\n\nconst TotalCustomers = ({ counts }) => (\n  <Card>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            TOTAL CUSTOMERS\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {counts}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: green[600],\n              height: 56,\n              width: 56,\n            }}\n          >\n            <PeopleIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: \"center\",\n          display: \"flex\",\n          pt: 2,\n        }}\n      ></Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalCustomers;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst TotalProjects = ({ counts }) => (\n  <Card>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            TOTAL PROJECTS\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {counts}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: green[600],\n              height: 56,\n              width: 56,\n            }}\n          ></Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: \"center\",\n          display: \"flex\",\n          pt: 2,\n        }}\n      ></Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalProjects;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport PeopleIcon from \"@material-ui/icons/PeopleOutlined\";\n\nconst TotalQuotes = ({ counts }) => (\n  <Card>\n    <CardContent>\n      <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n        <Grid item>\n          <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n            TOTAL PROPOSALS\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"h3\">\n            {counts}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: green[600],\n              height: 56,\n              width: 56,\n            }}\n          >\n            <PeopleIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: \"center\",\n          display: \"flex\",\n          pt: 2,\n        }}\n      ></Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalQuotes;\n","export const USER_INFO = \"userInfo\";\nexport const INVOICE_ROUTE = `${process.env.REACT_APP_API_URL}api/v1/invoice`;\nexport const IMAGES_3D_PATH = `${process.env.REACT_APP_API_URL}api/v1/files`;\nexport const IMAGES_PATH = `${process.env.REACT_APP_API_URL}api/v1/images/`;\nexport const BASE_URL = process.env.REACT_APP_FRONTEND_URL;\n","import axios from \"axios\";\nimport { USER_INFO } from \"./constants\";\n\nlet user = JSON.parse(localStorage.getItem(USER_INFO));\nlet token = \"\";\nif (user) {\n  token = user.token;\n}\n\nexport const http = axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}api/v1`,\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n});\nexport const qrCodeHttp = axios.create({\n  baseURL: process.env.REACT_APP_QR_URL,\n});\n","import { store } from \"../store\";\nimport {\n  ADD_NEW_PROJECT,\n  EDIT_PROJECT,\n  GET_DASHBOARD_COUNTS,\n  GET_PROJECT_HISTORIES,\n  GET_PROJECTS,\n  GET_PROJECT_DETAILS,\n  ADD_NEW_LOG,\n  ADD_PROJECT_PROD,\n  GET_PROJECT_PROD,\n} from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nconst BASE_URL = \"/project/\";\nexport const addNewProject = (projectInfo) => {\n  store.dispatch({\n    type: ADD_NEW_PROJECT,\n    payload: http.post(BASE_URL, projectInfo),\n  });\n};\nexport const getProjects = ({ status, clientId }) => {\n  let params = \"\";\n  if (status) {\n    params += `status=${status}&`;\n  }\n  if (clientId) {\n    params += `client=${clientId}&`;\n  }\n  store.dispatch({\n    type: GET_PROJECTS,\n    payload: http.get(`${BASE_URL}?${params}`),\n  });\n};\nexport const updateProject = (projectInfo, projectId) => {\n  store.dispatch({\n    type: EDIT_PROJECT,\n    payload: http.patch(BASE_URL + projectId, projectInfo),\n  });\n};\nexport const getDashboardCounts = () => {\n  store.dispatch({\n    type: GET_DASHBOARD_COUNTS,\n    payload: http.get(\"/home/dashboard\"),\n  });\n};\nexport const getProjectHistories = (projectId = \"\") => {\n  store.dispatch({\n    type: GET_PROJECT_HISTORIES,\n    payload: http.get(`${BASE_URL + projectId}/histories`),\n  });\n};\nexport const getProjectDetails = (projectId = \"\") => {\n  store.dispatch({\n    type: GET_PROJECT_DETAILS,\n    payload: http.get(BASE_URL + projectId),\n  });\n};\nexport const addNewLog = (projectId = \"\", logBody = {}) => {\n  store.dispatch({\n    type: ADD_NEW_LOG,\n    payload: http.post(`${BASE_URL + projectId}/histories`, logBody),\n  });\n};\nexport const addProjectProd = (newProduct = {}) => {\n  const { projectId, ...rest } = newProduct;\n  store.dispatch({\n    type: ADD_PROJECT_PROD,\n    payload: http.post(`${BASE_URL + projectId}/products`, rest),\n  });\n};\nexport const getProjectProds = (ppId, type = \"project\") => {\n  let urlWithParams = `${BASE_URL + ppId}/products`;\n  urlWithParams += `?type=${type}`;\n  store.dispatch({\n    type: GET_PROJECT_PROD,\n    payload: http.get(urlWithParams),\n  });\n};\n","import React from 'react';\n\nexport const Loading = () => {\n\treturn (\n\t\t<div className='loading text-center'>\n\t\t\t<i className='fa fa-spinner fa-spin'></i> Loading...\n\t\t</div>\n\t);\n};\nexport default Loading;\n","import { alpha, makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"#8967fc\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n","import { store } from \"../store\";\nimport {\n  RESET_PASSWORD,\n  SEND_LINK,\n  SET_PASSWORD,\n  UPDATE_PROFILE,\n  USER_DELETE,\n  USER_LIST,\n  USER_REGISTER,\n  USER_SIGNIN,\n  USER_SIGNOUT,\n  USER_UPDATE,\n} from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const signin = (userInfo) => {\n  store.dispatch({\n    type: USER_SIGNIN,\n    payload: http.post(\"/auth/login\", userInfo),\n  });\n};\nexport const registerUser = (userInfo) => {\n  store.dispatch({\n    type: USER_REGISTER,\n    payload: http.post(\"/user/register\", userInfo),\n  });\n};\nexport const signout = () => {\n  store.dispatch({ type: USER_SIGNOUT });\n};\n\nexport const getUsersList = (userRoleType = \"\") => {\n  let userUrl = \"/auth/users\";\n  if (userRoleType) {\n    userUrl += `?role=${userRoleType}`;\n  }\n  store.dispatch({\n    type: USER_LIST,\n    payload: http.get(userUrl),\n  });\n};\nexport const setPassword = (credentials) => {\n  store.dispatch({\n    type: SET_PASSWORD,\n    payload: http.patch(\"/auth/set-password\", credentials),\n  });\n};\nexport const updateUser = (userInfo) => {\n  const { _id: userId, ...rest } = userInfo;\n  store.dispatch({\n    type: USER_UPDATE,\n    payload: http.patch(`/auth/users/${userId}`, rest),\n  });\n};\nexport const deleteUser = (userId = \"\") => {\n  store.dispatch({\n    type: USER_DELETE,\n    payload: http.delete(`/auth/users/${userId}`),\n  });\n};\nexport const updateProfile = (userInfo) => {\n  store.dispatch({\n    type: UPDATE_PROFILE,\n    payload: http.patch(`/auth/edit-profile`, userInfo),\n  });\n};\nexport const sendLink = (email = \"\") => {\n  store.dispatch({\n    type: SEND_LINK,\n    payload: http.post(\"/auth/send-reset-link\", { email }),\n  });\n};\nexport const resetPassword = (credentials) => {\n  store.dispatch({\n    type: RESET_PASSWORD,\n    payload: http.post(\"/auth/reset-password\", credentials),\n  });\n};\n","import React from \"react\";\nimport { MenuItem, Menu, Divider } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { signout } from \"redux/actions/user\";\n\nexport const menuId = \"primary-search-account-menu\";\n\nexport const NavigationMenu = ({\n  anchorEl,\n  isMenuOpen,\n  handleMenuClose,\n  user,\n}) => {\n  let navigations = [\n    { link: \"analytics\", title: \"Analytics\" },\n    { link: \"products\", title: \"3D assets\" },\n    { link: \"projects\", title: \"Projects\" },\n    { link: \"quotes\", title: \"Proposals\" },\n    { link: \"invoices\", title: \"Invoices\" },\n    { link: \"subscriptions\", title: \"Subscriptions\" },\n    { link: \"profile\", title: \"My profile\" },\n  ];\n  if (user && user.role !== \"Client\") {\n    navigations = [{ link: \"customers\", title: \"Customers\" }, ...navigations];\n  }\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {navigations.map((item, itemIdx) => (\n        <MenuItem\n          onClick={handleMenuClose}\n          component={Link}\n          to={`/dashboard/${item.link}`}\n          key={itemIdx}\n        >\n          {item.title}\n        </MenuItem>\n      ))}\n      <Divider />\n      <MenuItem onClick={() => signout()}>Sign Out</MenuItem>\n    </Menu>\n  );\n};\n","import React from \"react\";\nimport { IconButton, Badge, MenuItem, Menu } from \"@material-ui/core\";\nimport {\n  AccountCircle,\n  Notifications as NotificationsIcon,\n} from \"@material-ui/icons\";\n\nexport const mobileMenuId = \"primary-search-account-menu-mobile\";\nexport const MobileMenu = ({\n  mobileMoreAnchorEl,\n  isMobileMenuOpen,\n  handleMobileMenuClose,\n  handleNavMenuOpen,\n  user,\n  notificationsCount = 0,\n}) => (\n  <Menu\n    anchorEl={mobileMoreAnchorEl}\n    anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n    id={mobileMenuId}\n    keepMounted\n    transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n    open={isMobileMenuOpen}\n    onClose={handleMobileMenuClose}\n  >\n    <MenuItem>\n      <IconButton\n        aria-label={`show ${notificationsCount} new notifications`}\n        color=\"inherit\"\n        aria-controls=\"notifications-menu\"\n        aria-haspopup=\"true\"\n      >\n        <Badge badgeContent={notificationsCount} color=\"secondary\">\n          <NotificationsIcon />\n        </Badge>\n      </IconButton>\n      <p>Notifications</p>\n    </MenuItem>\n    {Boolean(user?.fullName) && (\n      <MenuItem onClick={handleNavMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>{user.fullName}</p>\n      </MenuItem>\n    )}\n  </Menu>\n);\n","export const notifUser = (user = {}, notif = {}) => {\n  let name = \"You\";\n  if (user.role === notif.userRole) {\n    return name;\n  }\n  if (user.role === \"Client\") {\n    return `${notif.createdBy?.fullName}[${notif.userRole}]`;\n  } else {\n    return notif.createdBy?.companyName;\n  }\n};\n","import React from \"react\";\nimport {\n  ListItem,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\nimport { Link } from \"react-router-dom\";\nimport { notifUser } from \"utils/helper\";\n\nexport const notificationsMenuId = \"notifications-menu\";\n\nexport const NotificationsMenu = ({ anchorEl, onClose, user }) => {\n  const appState = useSelector((state) => state);\n  const {\n    notifsGet: { notifs, loading },\n  } = appState;\n  const toLink = (notif = {}) => {\n    let url = `/dashboard/projects/${notif.project}`;\n    if (notif.quote) {\n      url = \"/dashboard/quotes\";\n    }\n    return url;\n  };\n  return (\n    <Menu\n      id={notificationsMenuId}\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={onClose}\n    >\n      {loading ? (\n        <Loading />\n      ) : notifs.length ? (\n        notifs.map((notif, notifIdx) => (\n          <MenuItem\n            onClick={onClose}\n            key={notifIdx}\n            component={Link}\n            to={toLink(notif)}\n          >\n            <ListItem alignItems=\"flex-start\">\n              <ListItemText\n                primary={notif.description}\n                secondary={\n                  <>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      style={{ display: \"inline\" }}\n                      color=\"textPrimary\"\n                    >\n                      ({notifUser(user, notif)})\n                    </Typography>\n                    {` — ${moment(notif.createdAt).fromNow()}`}\n                  </>\n                }\n              />\n            </ListItem>\n          </MenuItem>\n        ))\n      ) : (\n        <MenuItem onClick={onClose}> No new notification</MenuItem>\n      )}\n    </Menu>\n  );\n};\n","import { store } from \"redux/store\";\nimport { GET_NOTIFICATIONS, GET_NOTIFICATIONS_COUNT } from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const getNotifications = (type = \"\") => {\n  let routeParams = \"notifications\";\n  let actionType = GET_NOTIFICATIONS;\n  if (type !== \"\") {\n    routeParams += \"?type=count\";\n    actionType = GET_NOTIFICATIONS_COUNT;\n  }\n  store.dispatch({\n    type: actionType,\n    payload: http.get(`/home/${routeParams}`),\n  });\n};\n","import React, { useEffect } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Badge,\n} from \"@material-ui/core\";\nimport {\n  AccountCircle,\n  Notifications as NotificationsIcon,\n  MoreVert as MoreIcon,\n  ExpandMore as ExpandMoreIcon,\n} from \"@material-ui/icons\";\nimport { useStyles } from \"styles/headerStyles\";\nimport { menuId, NavigationMenu } from \"./NavigationMenu\";\nimport { MobileMenu, mobileMenuId } from \"./MobileMenu\";\nimport { useSelector } from \"react-redux\";\nimport { NotificationsMenu, notificationsMenuId } from \"./NotificationsMenu\";\nimport { getNotifications } from \"redux/actions/dashboard\";\n\nexport const AppHeader = ({ children }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [notifAnchorEl, setNotifAnchorEl] = React.useState(null);\n\n  const appState = useSelector((state) => state);\n  const {\n    login: {\n      userInfo: { user },\n    },\n    notifsCount: { count },\n  } = appState;\n\n  useEffect(() => {\n    getNotifications(\"count\");\n  }, []);\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleNavMenuOpen = (event) => {\n    setMobileMoreAnchorEl(null);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const showNotifications = ({ currentTarget }) => {\n    setNotifAnchorEl(currentTarget);\n    getNotifications();\n  };\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          {/* <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton> */}\n          <Typography\n            className={classes.title}\n            variant=\"h4\"\n            color=\"inherit\"\n            noWrap\n          >\n            Augmented Reality Innovations\n          </Typography>\n          <div className={classes.grow} />\n          {Boolean(user?.fullName) && (\n            <div className={classes.sectionDesktop}>\n              <IconButton\n                aria-label={`show ${count} new notifications`}\n                color=\"inherit\"\n                aria-controls={notificationsMenuId}\n                aria-haspopup=\"true\"\n                onClick={showNotifications}\n              >\n                <Badge badgeContent={count} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n                Notifications\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleNavMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n                {user.firstName}\n                <ExpandMoreIcon />\n              </IconButton>\n            </div>\n          )}\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <NavigationMenu\n        anchorEl={anchorEl}\n        isMenuOpen={isMenuOpen}\n        handleMenuClose={handleMenuClose}\n        user={user}\n      />\n      <MobileMenu\n        mobileMoreAnchorEl={mobileMoreAnchorEl}\n        isMobileMenuOpen={isMobileMenuOpen}\n        handleMobileMenuClose={handleMobileMenuClose}\n        handleNavMenuOpen={handleNavMenuOpen}\n        user={user}\n        notificationsCount={count}\n      />\n      <NotificationsMenu\n        anchorEl={notifAnchorEl}\n        onClose={() => setNotifAnchorEl(null)}\n        user={user}\n      />\n      {children}\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { renderRoutes } from \"react-router-config\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Subscriptions from \"components/dashboard/subscriptions.component\";\nimport TotalCustomers from \"components/dashboard/customers.component\";\nimport TotalProjects from \"components/dashboard/count.projects.component\";\nimport TotalQuotes from \"components/dashboard/quotes.component\";\nimport { Link } from \"react-router-dom\";\nimport { USER_INFO } from \"../utils/constants\";\nimport { getDashboardCounts } from \"redux/actions/project\";\nimport Loading from \"components/loading.component\";\nimport { AppHeader } from \"components/AppHeader\";\n\nconst countsSize = (role) => {\n  const sizes = {\n    Admin: { lg: 3, sm: 6, xl: 3, xs: 12 },\n    Manager: { lg: 3, sm: 6, xl: 3, xs: 12 },\n    Client: { lg: 4, sm: 6, xl: 4, xs: 12 },\n  };\n  return role ? sizes[role] : sizes.Client;\n};\nexport const DashboardLayout = ({ route, history }) => {\n  const dashboardState = useSelector((state) => state);\n  const {\n    login: {\n      userInfo: { user },\n    },\n    dashboard: { loading, counts },\n  } = dashboardState;\n\n  useEffect(() => {\n    if (!user.fullName) {\n      localStorage.removeItem(USER_INFO);\n      history.replace(\"/\");\n    }\n  }, [user, history]);\n  useEffect(() => {\n    getDashboardCounts();\n  }, []);\n  return (\n    <AppHeader>\n      <Container maxWidth={false}>\n        {loading ? (\n          <Loading />\n        ) : (\n          <Grid container spacing={3}>\n            {user.role !== \"Client\" && (\n              <Grid\n                item\n                lg={countsSize(user.role).lg}\n                sm={countsSize(user.role).sm}\n                xl={countsSize(user.role).xl}\n                xs={countsSize(user.role).xs}\n                component={Link}\n                to=\"/dashboard/customers\"\n              >\n                <TotalCustomers counts={counts.users || 0} />\n              </Grid>\n            )}\n            <Grid\n              item\n              lg={countsSize(user.role).lg}\n              sm={countsSize(user.role).sm}\n              xl={countsSize(user.role).xl}\n              xs={countsSize(user.role).xs}\n              component={Link}\n              to=\"/dashboard/projects\"\n            >\n              <TotalProjects counts={counts.projects || 0} />\n            </Grid>\n            <Grid\n              item\n              lg={countsSize(user.role).lg}\n              sm={countsSize(user.role).sm}\n              xl={countsSize(user.role).xl}\n              xs={countsSize(user.role).xs}\n              component={Link}\n              to=\"/dashboard/quotes\"\n            >\n              <TotalQuotes\n                sx={{ height: \"100%\" }}\n                counts={counts.quotes || 0}\n              />\n            </Grid>\n            <Grid\n              item\n              lg={countsSize(user.role).lg}\n              sm={countsSize(user.role).sm}\n              xl={countsSize(user.role).xl}\n              xs={countsSize(user.role).xs}\n              component={Link}\n              to=\"/dashboard/subscriptions\"\n            >\n              <Subscriptions counts={counts.subscriptions || 0} />\n            </Grid>\n          </Grid>\n        )}\n        {renderRoutes(route.routes)}\n      </Container>\n    </AppHeader>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/ari_cube.2edefd08.png\";","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LoadingBox from \"../components/loading.component\";\nimport Logo from \"../assets/ari_cube.png\";\nimport { resetPassword, setPassword } from \"../redux/actions/user\";\nimport { notifier } from \"../utils/notifier\";\n\nconst initialState = { password: \"\", confirmPassword: \"\" };\nconst SetPassword = ({ history, match }) => {\n  const [credentials, setCredentials] = useState(initialState);\n\n  const {\n    passwordSet: { loaded, loading },\n    pwdReset: { loaded: set, loading: setting },\n  } = useSelector((state) => state);\n\n  useEffect(() => {\n    if (loaded || set) {\n      notifier.success(\"The password has been set\");\n      setTimeout(() => {\n        history.replace(\"/\");\n      }, 3000);\n    }\n  }, [history, loaded, set]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setCredentials({ ...credentials, [name]: value });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    delete credentials.confirmPassword;\n    credentials.token = match.params.token;\n    if (match.params.action === \"reset\") {\n      resetPassword(credentials);\n    } else {\n      setPassword(credentials);\n    }\n  };\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <img src={Logo} alt=\"#\" className=\"logo\" />\n        </div>\n        <div>\n          <h1>Set a new password</h1>\n        </div>\n        {(loading || setting) && <LoadingBox></LoadingBox>}\n        <div>\n          <label htmlFor=\"pasword\">New Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            className=\"login-input\"\n            placeholder=\"Enter password\"\n            required\n            onChange={onHandleChange}\n            value={credentials.password}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"confirmPassword\">Confirm password</label>\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            id=\"confirmPassword\"\n            className=\"login-input\"\n            placeholder=\"Confirm password\"\n            required\n            onChange={onHandleChange}\n            value={credentials.confirmPassword}\n          ></input>\n        </div>\n        <div>\n          <label />\n          <button\n            className=\"login-input btn-login primary\"\n            type=\"submit\"\n            disabled={loading}\n          >\n            Set password\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default SetPassword;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useTableStyles = makeStyles((theme) => ({\n\troot: {},\n\trow: {\n\t\theight: '42px',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tmarginTop: theme.spacing(1)\n\t},\n\tspacer: {\n\t\tflexGrow: 1\n\t},\n\timportButton: {\n\t\tmarginRight: theme.spacing(1)\n\t},\n\texportButton: {\n\t\tmarginRight: theme.spacing(1)\n\t},\n\tsearchInput: {\n\t\tmarginRight: theme.spacing(1)\n\t},\n\tcontent: {\n\t\tmarginTop: theme.spacing(2)\n\t},\n\ttableContent: {\n\t\tpadding: 0\n\t},\n\tinner: {},\n\tnameContainer: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center'\n\t},\n\tavatar: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\tactions: {\n\t\tjustifyContent: 'flex-end'\n\t}\n}));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { colors } from '@material-ui/core';\nimport ReactPaginate from 'react-paginate';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t...theme.typography.button,\n\t\tlistStyle: 'none',\n\t\tuserSelect: 'none',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center'\n\t},\n\tactive: {},\n\tactiveLink: {},\n\tbreak: {},\n\tbreakLink: {},\n\tdisabled: {},\n\tnext: {\n\t\tmarginLeft: theme.spacing(1)\n\t},\n\tnextLink: {\n\t\tpadding: '6px 16px',\n\t\toutline: 'none',\n\t\tcursor: 'pointer',\n\t\tborderRadius: 4,\n\t\t'&:hover': {\n\t\t\tbackgroundColor: colors.blueGrey[50]\n\t\t}\n\t},\n\tpage: {},\n\tpageLink: {\n\t\tcolor: theme.palette.text.secondary,\n\t\tpadding: theme.spacing(1),\n\t\toutline: 'none',\n\t\tcursor: 'pointer',\n\t\twidth: 40,\n\t\theight: 40,\n\t\tborderRadius: '50%',\n\t\tdisplay: 'block',\n\t\ttextAlign: 'center',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: colors.blueGrey[50],\n\t\t\tcolor: theme.palette.text.primary\n\t\t},\n\t\t'&$activeLink': {\n\t\t\tbackgroundColor: colors.blueGrey[50],\n\t\t\tcolor: theme.palette.text.primary\n\t\t}\n\t},\n\tprevious: {\n\t\tmarginRight: theme.spacing(1)\n\t},\n\tpreviousLink: {\n\t\tpadding: '6px 16px',\n\t\toutline: 'none',\n\t\tcursor: 'pointer',\n\t\tborderRadius: 4,\n\t\t'&:hover': {\n\t\t\tbackgroundColor: colors.blueGrey[50]\n\t\t}\n\t}\n}));\n\nexport const Paginate = ({\n\tpageCount = 0,\n\tpageRangeDisplayed = 2,\n\tmarginPagesDisplayed = 1,\n\tonPageChange,\n\tclassName,\n\t...rest\n}) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\tpageCount > 0 && (\n\t\t\t<ReactPaginate\n\t\t\t\tactiveClassName={classes.active}\n\t\t\t\tactiveLinkClassName={classes.activeLink}\n\t\t\t\tbreakClassName={classes.break}\n\t\t\t\tbreakLabel='...'\n\t\t\t\tbreakLinkClassName={classes.breakLink}\n\t\t\t\tcontainerClassName={classes.root}\n\t\t\t\tdisabledClassName={classes.disabled}\n\t\t\t\tmarginPagesDisplayed={marginPagesDisplayed}\n\t\t\t\tnextClassName={classes.next}\n\t\t\t\tnextLabel='next'\n\t\t\t\tnextLinkClassName={classes.nextLink}\n\t\t\t\tonPageChange={onPageChange}\n\t\t\t\tpageClassName={classes.page}\n\t\t\t\tpageCount={pageCount}\n\t\t\t\tpageLinkClassName={classes.pageLink}\n\t\t\t\tpageRangeDisplayed={pageRangeDisplayed}\n\t\t\t\tpreviousClassName={classes.previous}\n\t\t\t\tpreviousLabel='previous'\n\t\t\t\tpreviousLinkClassName={classes.previousLink}\n\t\t\t\tsubContainerClassName='pages pagination'\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t)\n\t);\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport const NoDisplayData = ({ message = 'No data to display' }) => {\n\treturn (\n\t\t<Typography align='center' variant='h5'>\n\t\t\t{message}\n\t\t</Typography>\n\t);\n};\n","import React from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport _ from \"lodash\";\nimport { useTableStyles } from \"./styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Paginate } from \"../Paginate\";\nimport { NoDisplayData } from \"../NoDisplayData\";\nimport { Loading } from \"../loading.component\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#8967fc\",\n    color: theme.palette.common.white,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport const CustomisedTable = ({\n  data = [],\n  tableTitle = \"\",\n  dataCount = 0,\n  pageCount = 0,\n  page = 1,\n  columns = [],\n  selectedData = [],\n  loading = false,\n  withPagination = true,\n  handlePageChange,\n  size = \"small\",\n}) => {\n  const classes = useTableStyles();\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n  return (\n    <div className={classes.root}>\n      {/* <Typography color='textSecondary' gutterBottom variant='body2'>\n\t\t\t\t{dataCount} Records found. Page {page} of {pageCount}\n\t\t\t</Typography> */}\n      <Card>\n        <CardHeader title={tableTitle} />\n        <Divider />\n        <CardContent className={classes.tableContent}>\n          {loading ? (\n            <Loading />\n          ) : data.length ? (\n            <PerfectScrollbar>\n              <Table size={size}>\n                <TableHead>\n                  <StyledTableRow>\n                    {columns.map(({ label }, columnIdx) => (\n                      <StyledTableCell key={columnIdx}>{label}</StyledTableCell>\n                    ))}\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map((item, itemIdx) => (\n                    <StyledTableRow\n                      className={classes.tableRow}\n                      hover\n                      key={itemIdx}\n                      selected={selectedData.indexOf(item.id) !== -1}\n                    >\n                      {columns.map((cellColumn, cellColumnIdx) => (\n                        <StyledTableCell key={cellColumnIdx}>\n                          {renderCell(item, cellColumn)}\n                        </StyledTableCell>\n                      ))}\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </PerfectScrollbar>\n          ) : (\n            <NoDisplayData />\n          )}\n        </CardContent>\n        {pageCount !== 0 && withPagination && (\n          <CardActions className={classes.actions}>\n            <Paginate\n              marginPagesDisplayed={2}\n              onPageChange={handlePageChange}\n              pageCount={pageCount}\n              pageRangeDisplayed={1}\n            />\n          </CardActions>\n        )}\n      </Card>\n    </div>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#8967fc\",\n  },\n  input: {\n    fontSize: 16,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    color: \"black\",\n    fontSize: 16,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#8967fc\",\n    borderRadius: 5,\n    float: \"left\",\n    maxWidth: \"100%\",\n    color: \"white\",\n    fontSize: 16,\n    \"&:hover\": {\n      backgroundColor: \"#8967fc\",\n      color: \"#FFFFFF\",\n    },\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    \"& .rdw-option-wrapper\": {\n      background: \"transparent\",\n      border: \"none\",\n      minWidth: 26,\n      padding: 6,\n      \"&:hover\": {\n        boxShadow: \"none\",\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    \"& .rdw-option-active\": {\n      boxShadow: \"none\",\n      backgroundColor: theme.palette.action.selected,\n    },\n    \"& .rdw-dropdown-wrapper\": {\n      boxShadow: \"none\",\n      background: \"transparent\",\n    },\n    \"& .rdw-dropdown-optionwrapper\": {\n      overflowY: \"auto\",\n      boxShadow: theme.shadows[10],\n      padding: theme.spacing(1),\n    },\n  },\n  toolbar: {\n    marginBottom: 0,\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    borderRight: \"none\",\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    background: \"transparent\",\n  },\n  editor: {\n    padding: theme.spacing(2),\n    height: 100,\n    color: theme.palette.text.primary,\n  },\n}));\n","import React from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { useStyles } from \"./styles\";\n\nexport const DraftEditor = ({ setEditorState, editorState }) => {\n  const classes = useStyles();\n\n  return (\n    <Editor\n      editorClassName={classes.editor}\n      editorState={editorState}\n      onEditorStateChange={setEditorState}\n      toolbar={{\n        options: [\n          \"inline\",\n          \"blockType\",\n          \"fontSize\",\n          \"fontFamily\",\n          \"list\",\n          \"textAlign\",\n          \"history\",\n        ],\n        inline: { inDropdown: true },\n        list: { inDropdown: true },\n        textAlign: { inDropdown: true },\n      }}\n      toolbarClassName={classes.toolbar}\n      wrapperClassName={classes.root}\n    />\n  );\n};\n","import moment from \"moment\";\n\nexport const initialState = {\n  name: \"\",\n  type: \"\",\n  nOfItems: \"1\",\n  startDate: moment().format(\"YYYY-MM-DD\"),\n  dueDate: moment().format(\"YYYY-MM-DD\"),\n  budget: \"\",\n  status: \"pending\",\n  description: \"\",\n  userId: \"\",\n  managerId: \"\",\n};\nexport const projectStatuses = [\"pending\", \"approved\", \"canceled\"];\nexport const projectTypes = [\n  {\n    name: \"Cube Platform\",\n    description: \"I want to publish and manage my products in 3D and AR myself\",\n  },\n  {\n    name: \"3D modeling\",\n    description: \"I need help with creating my products in 3D\",\n  },\n  {\n    name: \"3D Viewer\",\n    description: \"I want to present my product in 3D on a website\",\n  },\n  {\n    name: \"3D Configurator\",\n    description: \"I want to showcase my products in specific configurations\",\n  },\n  { name: \"AR\", description: \"I want to showcase my products in AR\" },\n];\n","import React, { useState, useEffect } from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { \n  KeyboardDatePicker, \n  MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { useSelector } from \"react-redux\";\nimport NumberFormat from \"react-number-format\";\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardActions,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { ComputerOutlined } from \"@material-ui/icons\";\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { stateFromHTML } from \"draft-js-import-html\";\nimport { addNewProject, updateProject } from \"redux/actions/project\";\nimport { Loading } from \"components/loading.component\";\nimport { useStyles } from \"styles/formStyles\";\nimport { getUsersList } from \"redux/actions/user\";\nimport { DraftEditor } from \"components/DraftEditor\";\nimport {\n  initialState,\n  projectStatuses,\n  projectTypes,\n} from \"./projectConstants\";\n\nexport const ProjectRegistration = ({ action = \"add\", currentItem = null }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState(initialState);\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const projectState = useSelector((state) => state);\n  const {\n    projectAdd: { loading: adding, loaded: added },\n    projectEdit: { loading: updating, loaded: updated },\n    userList: { users },\n    login: {\n      userInfo: { user },\n    },\n  } = projectState;\n  useEffect(() => {\n    getUsersList(\"Manager\");\n  }, []);\n  useEffect(() => {\n    if (added || updated) {\n      let states = { ...initialState };\n      setValues(states);\n      setEditorState(EditorState.createEmpty());\n    }\n  }, [added, updated, user]);\n  useEffect(() => {\n    if (currentItem && action !== \"view\") {\n      const {\n        status,\n        name,\n        description,\n        type,\n        nOfItems,\n        startDate,\n        dueDate,\n        budget,\n        manager,\n      } = currentItem;\n      const contentState = stateFromHTML(description);\n      setValues({\n        name,\n        status,\n        type,\n        nOfItems,\n        startDate: moment(startDate).format(\"YYYY-MM-DD\"),\n        dueDate: moment(dueDate).format(\"YYYY-MM-DD\"),\n        budget,\n        managerId: manager,\n      });\n      setEditorState(EditorState.createWithContent(contentState));\n    }\n  }, [currentItem, action]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setValues({ ...values, [name]: value });\n  };\n\n  const changeStartDate = (value) => {\n    setValues({...values, startDate: value})\n  }\n\n  const changeDueDate = (value) => {\n    setValues({...values, dueDate: value})\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    values.description = stateToHTML(editorState.getCurrentContent());\n    if (action !== \"add\" && currentItem) {\n      updateProject(values, currentItem._id);\n    } else {\n      addNewProject(values);\n    }\n  };\n  return (\n    <Card component=\"main\" className={classes.root}>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ComputerOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          {currentItem && action !== \"view\"\n            ? `Update \"${currentItem?.name?.toUpperCase()}\" project`\n            : \"Add a new project\"}\n        </Typography>\n        {(adding || updating) && <Loading />}\n        <form className={classes.form} onSubmit={submitHandler}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                className={classes.input}\n                name=\"name\"\n                variant=\"outlined\"\n                fullWidth\n                label=\"Project name\"\n                onChange={onHandleChange}\n                value={values.name}\n                autoFocus\n                disabled={user.role !== \"Client\"}\n              />\n            </Grid>\n            {user.role === \"Admin\" && action === \"changePm\" && (\n              <Grid item xs={12}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"project-manager\">Project manager</InputLabel>\n                  <Select\n                    labelId=\"project-manager\"\n                    value={values.managerId}\n                    name=\"managerId\"\n                    onChange={onHandleChange}\n                  >\n                    <MenuItem value=\"\">---</MenuItem>\n                    {users.map(({ _id, fullName }, userIdx) => (\n                      <MenuItem value={_id} key={userIdx}>\n                        {fullName}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            )}\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel id=\"project-type\">Project type</InputLabel>\n                <Select\n                  labelId=\"project-type\"\n                  value={values.type}\n                  name=\"type\"\n                  onChange={onHandleChange}\n                  disabled={user.role !== \"Client\"}\n                >\n                  <MenuItem value=\"\">---</MenuItem>\n                  {projectTypes.map((type, typeIdx) => (\n                    <MenuItem value={type.name} key={typeIdx}>\n                      {`${type.name} - ${type.description}`}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel id=\"project-status\">Status</InputLabel>\n                <Select\n                  labelId=\"project-status\"\n                  value={values.status}\n                  name=\"status\"\n                  onChange={onHandleChange}\n                  disabled={action !== \"change\"}\n                >\n                  <MenuItem value=\"\">---</MenuItem>\n                  {projectStatuses.map((status, choiceIdx) => (\n                    <MenuItem value={status} key={choiceIdx}>\n                      {status.toUpperCase()}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item lg={6} md={6} xl={6} xs={12}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker \n                  label= \"Start Date\"\n                  inputVariant=\"outlined\"\n                  value={values.startDate}\n                  InputAdornmentProps={{ position: \"start\" }}\n                  format=\"yyyy-MM-dd\"\n                  views={[\"year\", \"month\", \"date\"]}\n                  onChange={changeStartDate}\n                  disabled={user.role !== \"Client\"}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item lg={6} md={6} xl={6} xs={12}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker \n                  label= \"Due Date\"\n                  inputVariant=\"outlined\"\n                  value={values.dueDate} \n                  InputAdornmentProps={{ position: \"start\" }}\n                  format=\"yyyy-MM-dd\"\n                  views={[\"year\", \"month\", \"date\"]}\n                  disabled={user.role !== \"Client\"}\n                  onChange={changeDueDate}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item lg={4} md={4} xl={4} xs={12}>\n              <TextField\n                className={classes.input}\n                variant=\"outlined\"\n                fullWidth\n                type=\"number\"\n                name=\"nOfItems\"\n                label=\"Number of items\"\n                value={values.nOfItems}\n                onChange={onHandleChange}\n                disabled={user.role !== \"Client\"}\n              />\n            </Grid>\n            <Grid item lg={8} md={8} xl={8} xs={12}>\n              <NumberFormat\n                className={classes.input}\n                value={values.budget}\n                onValueChange={({ floatValue }) =>\n                  setValues({ ...values, budget: floatValue })\n                }\n                prefix=\"$\"\n                thousandSeparator\n                customInput={TextField}\n                fullWidth\n                variant=\"outlined\"\n                label=\"Budget(in USD)\"\n                disabled={user.role !== \"Client\"}\n              />\n            </Grid>\n            {user.role === \"Client\" && (\n              <Grid item xs={12}>\n                <DraftEditor\n                  editorState={editorState}\n                  setEditorState={setEditorState}\n                />\n              </Grid>\n            )}\n          </Grid>\n          <CardActions>\n            {action === \"add\" ? (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n                disabled={adding}\n              >\n                Save\n              </Button>\n            ) : (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n                disabled={updating}\n              >\n                Update the project\n              </Button>\n            )}\n          </CardActions>\n        </form>\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  ButtonGroup,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport {\n  EditRounded as EditIcon,\n  Publish as PublishIcon,\n  ViewComfy as ViewComfyIcon,\n} from \"@material-ui/icons\";\n\nexport const projectOwnerCol = (user = {}) => {\n  return user.role !== \"Client\"\n    ? [\n        {\n          content: (item) => <Typography>{item?.user?.fullName}</Typography>,\n          label: \"Project Owner\",\n        },\n      ]\n    : [];\n};\n\nexport const projectColumns = (onProjectClick, user = {}) => [\n  {\n    content: (item) => (\n      <ListItem>\n        <ListItemText primary={item.name} secondary={item.type} />\n      </ListItem>\n    ),\n    label: \"Project\",\n  },\n  ...projectOwnerCol(user),\n  { path: \"type\", label: \"Type\" },\n  { path: \"status\", label: \"Status\" },\n  {\n    content: (item) => (\n      <Typography>$ {item.budget?.toLocaleString(\"en-US\")}</Typography>\n    ),\n    label: \"Budget\",\n  },\n  {\n    content: (item) => (\n      <ButtonGroup variant=\"outlined\" size=\"small\">\n        <Tooltip title=\"View\">\n          <IconButton\n            aria-label=\"View\"\n            color=\"secondary\"\n            component={Link}\n            to={`/dashboard/projects/${item._id}`}\n          >\n            <ViewComfyIcon /> View\n          </IconButton>\n        </Tooltip>\n        {user.role === \"Client\" && (\n          <Tooltip title=\"Edit\">\n            <IconButton\n              aria-label=\"Edit\"\n              color=\"secondary\"\n              disabled={item.status === \"approved\"}\n              onClick={() => onProjectClick(item, \"edit\")}\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {user.role !== \"Client\" && (\n          <Tooltip title=\"Change status\">\n            <IconButton\n              aria-label=\"Change status\"\n              color=\"default\"\n              disabled={item.status === \"approved\"}\n              onClick={() => onProjectClick(item, \"change\")}\n            >\n              <PublishIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {user.role === \"Admin\" && (\n          <Tooltip title=\"Change project manager\">\n            <IconButton\n              aria-label=\"Change project manager\"\n              color=\"default\"\n              disabled={item.status === \"approved\"}\n              onClick={() => onProjectClick(item, \"changePm\")}\n            >\n              Change PM\n            </IconButton>\n          </Tooltip>\n        )}\n      </ButtonGroup>\n    ),\n    label: \"Actions\",\n  },\n];\n","import React from \"react\";\nimport { ButtonGroup, IconButton, Tooltip } from \"@material-ui/core\";\nimport {\n  EditRounded as EditIcon,\n  ViewComfy as ViewComfyIcon,\n  DeleteForeverRounded as DeleteIcon,\n} from \"@material-ui/icons\";\n\nexport const userColumns = (onUserClick) => [\n  { path: \"fullName\", label: \"Names\" },\n  { path: \"email\", label: \"Email\" },\n  { path: \"phoneNumber\", label: \"Phone number\" },\n  { path: \"role\", label: \"User role\" },\n  { path: \"companyName\", label: \"Company\" },\n  {\n    content: (item) => (\n      <ButtonGroup variant=\"outlined\" size=\"small\">\n        <Tooltip title=\"View\">\n          <IconButton\n            aria-label=\"View\"\n            color=\"secondary\"\n            onClick={() => onUserClick(item, \"view\")}\n          >\n            <ViewComfyIcon /> View\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <IconButton\n            aria-label=\"Edit\"\n            color=\"secondary\"\n            onClick={() => onUserClick(item, \"edit\")}\n          >\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <IconButton\n            aria-label=\"Delete\"\n            color=\"danger\"\n            onClick={() => onUserClick(item, \"delete\")}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      </ButtonGroup>\n    ),\n    label: \"Actions\",\n  },\n];\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  ButtonGroup,\n  IconButton,\n  Tooltip,\n  Typography,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport {\n  Publish as PublishIcon,\n  PrintRounded as PrintRoundedIcon,\n} from \"@material-ui/icons\";\nimport { INVOICE_ROUTE } from \"utils/constants\";\n\nexport const invoiceColumns = (onInvoiceClick, user = {}) => [\n  {\n    content: (item) => (\n      <ListItem>\n        <ListItemText\n          primary={item.project?.name}\n          secondary={item.project?.type}\n        />\n      </ListItem>\n    ),\n    label: \"Project\",\n  },\n  {\n    content: (item) => <Typography>{item?.user?.fullName}</Typography>,\n    label: \"Project owner\",\n  },\n  {\n    content: (item) => (\n      <Typography>$ {item.amount?.toLocaleString(\"en-US\")}</Typography>\n    ),\n    label: \"Amount\",\n  },\n  { path: \"status\", label: \"Status\" },\n  {\n    content: (item) => (\n      <Typography>\n        {item.status === \"pending\"\n          ? moment(item.due_date).fromNow()\n          : \"Already paid\"}\n      </Typography>\n    ),\n    label: \"Due data\",\n  },\n  {\n    content: (item) =>\n      item.status === \"pending\" && user.role !== \"Client\" ? (\n        <ButtonGroup variant=\"outlined\" size=\"small\">\n          <Tooltip title=\"Approve payment\">\n            <IconButton\n              aria-label=\"Approve payment\"\n              color=\"default\"\n              onClick={() => onInvoiceClick(item, \"change\")}\n            >\n              <PublishIcon /> Approve payment\n            </IconButton>\n          </Tooltip>\n        </ButtonGroup>\n      ) : (\n        <>\n          <Typography variant=\"caption\" color=\"error\">\n            No action needed\n          </Typography>\n          <Tooltip title=\"Print invoice\">\n            <IconButton\n              component=\"a\"\n              aria-label=\"Print invoice\"\n              color=\"default\"\n              rel=\"noreferrer\"\n              href={`${INVOICE_ROUTE}/${item._id}`}\n              target=\"_blank\"\n              size=\"small\"\n            >\n              <PrintRoundedIcon /> Download\n            </IconButton>\n          </Tooltip>\n        </>\n      ),\n    label: \"Actions\",\n  },\n];\n","import React from \"react\";\nimport moment from \"moment\";\nimport { ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport { projectOwnerCol } from \"./projectColumns\";\n\nexport const subscriptionColumns = (user = {}) => [\n  {\n    content: (item) => (\n      <ListItem>\n        <ListItemText\n          primary={item.project?.name}\n          secondary={item.project?.type}\n        />\n      </ListItem>\n    ),\n    label: \"Project\",\n  },\n  ...projectOwnerCol(user),\n  {\n    content: (item) => <Typography>{item.billingCycle}</Typography>,\n    label: \"Billing cycle\",\n  },\n  {\n    content: (item) => (\n      <Typography>$ {item.quote?.amount?.toLocaleString(\"en-US\")}</Typography>\n    ),\n    label: \"Amount\",\n  },\n  {\n    content: (item) => (\n      <Typography>{moment(item.startDate).fromNow()}</Typography>\n    ),\n    label: \"Start date\",\n  },\n  {\n    content: (item) => (\n      <Typography>\n        {item.expirationDate\n          ? moment(item.expirationDate).fromNow()\n          : \"One time pay\"}\n      </Typography>\n    ),\n    label: \"Expiration date\",\n  },\n  { path: \"status\", label: \"Status\" },\n];\n","import Pages from \"lodash\";\n\nexport const paginate = (items = [], pageNumber = 1, pageSize = 5) => {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return Pages(items).slice(startIndex).take(pageSize).value();\n};\nexport const initialPaginate = (pageSize = 5, pageNumber = 1) => ({\n  pageSize,\n  pageNumber,\n});\n","import React, { forwardRef, useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport HtmlParser from \"react-html-parser\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Slide,\n  CardContent,\n  ListItemText,\n  ListItem,\n  List,\n  Typography,\n  IconButton,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"@material-ui/core\";\nimport {\n  CloudDownloadOutlined as DownloadIcon,\n  ExpandMore as ExpandMoreIcon,\n} from \"@material-ui/icons\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport TextInfoContent from \"@mui-treasury/components/content/textInfo\";\nimport { useBlogTextInfoContentStyles } from \"@mui-treasury/styles/textInfoContent/blog\";\nimport { projectTypes } from \"./projectConstants\";\nimport { getProjectHistories } from \"redux/actions/project\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\nimport { INVOICE_ROUTE } from \"utils/constants\";\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"36ch\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\nexport const ProjectModel = ({ open = false, setOpen, currentItem = null }) => {\n  const classes = useStyles();\n\n  const [project, setProject] = useState({ name: \"\" });\n  const [projectType, setProjectType] = useState({});\n  const { loading, histories } = useSelector(\n    ({ historiesGet }) => historiesGet\n  );\n  useEffect(() => {\n    if (currentItem) {\n      setProject(currentItem);\n      getProjectHistories(currentItem._id);\n      const currentPType = projectTypes.find(\n        (e) => e.name === currentItem.type\n      );\n      setProjectType(currentPType);\n    }\n  }, [currentItem]);\n  const { button: buttonStyles, ...contentStyles } =\n    useBlogTextInfoContentStyles();\n  const toDowloadUrl = (projectHistory = {}) => {\n    let url = projectHistory.invoice;\n    if (projectHistory.quote) {\n      url = `${projectHistory.quote}?downloadType=quote`;\n    }\n    return url;\n  };\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={setOpen}\n      aria-labelledby=\"project-name\"\n      aria-describedby=\"project-description\"\n    >\n      <DialogTitle id=\"project-name\">\n        {`Project name: ${project.name.toUpperCase()}`}\n      </DialogTitle>\n      <DialogContent>\n        <CardContent>\n          <TextInfoContent\n            classes={contentStyles}\n            overline={\n              project.user?.firstName &&\n              `Created by: ${project.user.firstName} ${project.user.lastName}`\n            }\n          />\n          <ListItemText\n            primary={`Start: ${moment(project.startDate).format(\n              \"YYYY-MM-DD\"\n            )}, Due date: ${moment(project.dueDate).format(\"YYYY-MM-DD\")}`}\n          />\n          <Typography variant=\"h4\">Project type:</Typography>\n          <ListItem>\n            <ListItemText\n              primary={projectType?.name}\n              secondary={projectType?.description}\n            />\n          </ListItem>\n          <Typography variant=\"h4\">\n            Number of items: {project.nOfItems}\n          </Typography>\n          {HtmlParser(project.description)}\n          <Button className={buttonStyles}>\n            Budget: ${project.budget?.toLocaleString(\"en-US\") || 0}\n          </Button>\n          {loading ? (\n            <Loading />\n          ) : (\n            <List>\n              {histories.map((history, historyIdx) => (\n                <Accordion key={historyIdx}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls={`panel${historyIdx}a-content`}\n                    id={`panel${historyIdx}a-header`}\n                  >\n                    <ListItem alignItems=\"flex-start\">\n                      <ListItemText\n                        primary={history.description}\n                        secondary={\n                          <>\n                            <Typography\n                              component=\"span\"\n                              variant=\"body2\"\n                              className={classes.inline}\n                              color=\"textPrimary\"\n                            >\n                              {history.userRole}\n                            </Typography>\n                            {` — on ${moment(history.createdAt).format(\n                              \"MMM DD, YYYY @ HH:mm\"\n                            )}`}\n                          </>\n                        }\n                      />\n                      {(history.invoice || history.quote) && (\n                        <IconButton\n                          edge=\"end\"\n                          size=\"small\"\n                          component=\"a\"\n                          aria-label=\"Print invoice\"\n                          rel=\"noreferrer\"\n                          href={`${INVOICE_ROUTE}/${toDowloadUrl(history)}`}\n                          target=\"_blank\"\n                        >\n                          <DownloadIcon />\n                        </IconButton>\n                      )}\n                    </ListItem>\n                  </AccordionSummary>\n                  {Boolean(history.content) && (\n                    <AccordionDetails>\n                      {HtmlParser(history.content)}\n                    </AccordionDetails>\n                  )}\n                </Accordion>\n              ))}\n            </List>\n          )}\n        </CardContent>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { store } from \"../store\";\nimport { ADD_NEW_QUOTE, UPDATE_QUOTE, GET_QUOTES } from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const addNewQuote = (quoteInfo) => {\n  store.dispatch({\n    type: ADD_NEW_QUOTE,\n    payload: http.post(\"/quote\", quoteInfo),\n  });\n};\nexport const getQuotes = () => {\n  store.dispatch({\n    type: GET_QUOTES,\n    payload: http.get(\"/quote\"),\n  });\n};\nexport const updateQuote = (quoteInfo, quoteId) => {\n  store.dispatch({\n    type: UPDATE_QUOTE,\n    payload: http.patch(`/quote/${quoteId}`, quoteInfo),\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport { useSelector } from \"react-redux\";\nimport NumberFormat from \"react-number-format\";\nimport { DraftEditor } from \"components/DraftEditor\";\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { stateFromHTML } from \"draft-js-import-html\";\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  ComputerOutlined,\n  Cancel as CancelIcon,\n  Edit as EditIcon,\n} from \"@material-ui/icons\";\nimport { addNewQuote, updateQuote } from \"redux/actions/quote\";\nimport { Loading } from \"components/loading.component\";\nimport { useStyles } from \"styles/formStyles\";\nimport { getProjects } from \"redux/actions/project\";\nimport { getUsersList } from \"redux/actions/user\";\n\nconst initialState = {\n  projectId: \"\",\n  billingCycle: \"Monthly\",\n  taxes: [],\n  discount: \"0\",\n  isFixed: false,\n  expiryDate: moment().format(\"YYYY-MM-DD\"),\n  propasalText: \"\",\n  customerNote: \"\",\n  customer: \"\",\n};\nconst taxInitials = { title: \"\", amount: \"\" };\nconst quoteCycles = [\"Monthly\", \"Yearly\", \"OneTime\"];\nconst qStatuses = [\"Accepted\", \"Declined\"];\nexport const QuoteRegistration = ({ action = \"add\", currentItem = null }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState(initialState);\n  const [tax, setTax] = useState(taxInitials);\n  const [propTextState, setPropTextState] = useState(EditorState.createEmpty());\n  const [noteState, setNoteState] = useState(EditorState.createEmpty());\n  const quoteState = useSelector((state) => state);\n\n  const {\n    quoteAdd: { loading: adding, loaded: added },\n    quoteEdit: { loading: updating, loaded: updated },\n    projectsGet: { projects },\n    userList: { users },\n    login: {\n      userInfo: { user },\n    },\n  } = quoteState;\n\n  useEffect(() => {\n    getUsersList(\"Client\");\n  }, []);\n  useEffect(() => {\n    if (values.customer) {\n      getProjects({ clientId: values.customer });\n    }\n  }, [values.customer]);\n  useEffect(() => {\n    if (added || updated) {\n      setValues(initialState);\n      setPropTextState(EditorState.createEmpty());\n      setNoteState(EditorState.createEmpty());\n    }\n  }, [added, updated]);\n  useEffect(() => {\n    if (currentItem) {\n      const { project, user, updatedAt, createdAt, _id, __v, ...rest } =\n        currentItem;\n      const projectId = project._id;\n      const customer = user._id;\n      const expiryDate = moment(currentItem.expiryDate).format(\"YYYY-MM-DD\");\n      setValues({ ...rest, projectId, expiryDate, customer });\n      const propasalText = stateFromHTML(rest.propasalText);\n      const customerNote = stateFromHTML(rest.customerNote);\n      setPropTextState(EditorState.createWithContent(propasalText));\n      setNoteState(EditorState.createWithContent(customerNote));\n    }\n  }, [currentItem]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setValues((prev) => {\n      const newValues = { ...prev, [name]: value };\n      if (name === \"customer\") {\n        newValues.projectId = \"\";\n      }\n      return newValues;\n    });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    values.propasalText = stateToHTML(propTextState.getCurrentContent());\n    values.customerNote = stateToHTML(noteState.getCurrentContent());\n    const { amount, customer, ...quoteValues } = values;\n    if (action !== \"add\" && currentItem) {\n      updateQuote(quoteValues, currentItem._id);\n    } else {\n      addNewQuote(quoteValues);\n    }\n  };\n  const onSetSeen = (e) => {\n    const {\n      target: { checked },\n    } = e;\n    setValues({ ...values, status: checked ? \"Pending\" : \"Draft\" });\n  };\n  const onAddTax = () => {\n    const taxes = [...values.taxes];\n    const index = taxes.findIndex((i) => i.title === tax.title);\n    if (index < 0) {\n      taxes.push(tax);\n    } else {\n      taxes[index].title = tax.title;\n      taxes[index].amount = tax.amount;\n    }\n    setValues((prev) => ({ ...prev, taxes }));\n    setTax(taxInitials);\n  };\n  const onDeleteTax = (taxTitle) => {\n    const newTaxes = values.taxes.filter((t) => t.title !== taxTitle);\n    setValues((prev) => ({ ...prev, taxes: newTaxes }));\n  };\n  const onChangeTax = ({ target: { name, value } }) => {\n    setTax((prev) => ({ ...prev, [name]: value }));\n  };\n  return (\n    <Card component=\"main\" className={classes.root}>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ComputerOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          {currentItem\n            ? `Update \"${currentItem.project.name.toUpperCase()}\" proposal`\n            : \"Add a new proposal\"}\n        </Typography>\n        {(adding || updating) && <Loading />}\n        {((currentItem && action !== \"items\") ||\n          (action === \"add\" && user.role !== \"Client\")) && (\n          <form className={classes.form} onSubmit={submitHandler}>\n            <Grid container spacing={1}>\n              {(action === \"add\" || action === \"edit\") && (\n                <>\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"customer-or-comp\">\n                        Customer or company\n                      </InputLabel>\n                      <Select\n                        labelId=\"customer-or-comp\"\n                        value={values.customer}\n                        name=\"customer\"\n                        onChange={onHandleChange}\n                        disabled={user.role === \"Client\"}\n                      >\n                        <MenuItem value=\"\">---</MenuItem>\n                        {users.map((user, userIdx) => (\n                          <MenuItem value={user._id} key={userIdx}>\n                            {user.fullName}, {user.companyName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"select-project\">\n                        Select project\n                      </InputLabel>\n                      <Select\n                        labelId=\"select-project\"\n                        value={values.projectId}\n                        name=\"projectId\"\n                        onChange={onHandleChange}\n                        disabled={!Boolean(values.customer)}\n                      >\n                        <MenuItem value=\"\">---</MenuItem>\n                        {projects.map(({ _id, name, user }, choiceIdx) => (\n                          <MenuItem value={_id} key={choiceIdx}>\n                            {`${name} ---> ${user?.fullName}`}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </>\n              )}\n              {(action === \"add\" || action === \"edit\") && (\n                <Grid item xs={12}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel id=\"billing-cycle\">Billing cycle</InputLabel>\n                    <Select\n                      labelId=\"billing-cycle\"\n                      value={values.billingCycle}\n                      name=\"billingCycle\"\n                      onChange={onHandleChange}\n                      disabled={action === \"change\"}\n                    >\n                      <MenuItem value=\"\">---</MenuItem>\n                      {quoteCycles.map((cyle, choiceIdx) => (\n                        <MenuItem value={cyle} key={choiceIdx}>\n                          {cyle.toUpperCase()}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n              {(action === \"add\" || action === \"edit\") && (\n                <>\n                  <Grid item xs={12}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <KeyboardDatePicker\n                        label=\"Expiry Date\"\n                        inputVariant=\"outlined\"\n                        fullWidth\n                        value={values.expiryDate}\n                        InputAdornmentProps={{ position: \"start\" }}\n                        format=\"yyyy-MM-dd\"\n                        views={[\"year\", \"month\", \"date\"]}\n                        onChange={(dateValue) =>\n                          setValues((prev) => ({\n                            ...prev,\n                            expiryDate: dateValue,\n                          }))\n                        }\n                        minDate={new Date()}\n                      />\n                    </MuiPickersUtilsProvider>\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={8} lg={8}>\n                    {values.isFixed ? (\n                      <NumberFormat\n                        className={classes.input}\n                        value={values.discount}\n                        onValueChange={({ floatValue }) =>\n                          setValues({ ...values, discount: floatValue })\n                        }\n                        prefix=\"$\"\n                        thousandSeparator\n                        customInput={TextField}\n                        fullWidth\n                        variant=\"outlined\"\n                        label=\"Discount(in USD)\"\n                      />\n                    ) : (\n                      <TextField\n                        name=\"discount\"\n                        variant=\"outlined\"\n                        type=\"number\"\n                        fullWidth\n                        label=\"Discount(in %)\"\n                        onChange={onHandleChange}\n                        value={values.discount}\n                      />\n                    )}\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={4} lg={4}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={values.isFixed}\n                          onChange={({ target: { checked } }) =>\n                            setValues({ ...values, isFixed: checked })\n                          }\n                        />\n                      }\n                      label=\"Is fixed?\"\n                      labelPlacement=\"top\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={5} lg={5}>\n                    <TextField\n                      name=\"title\"\n                      variant=\"outlined\"\n                      fullWidth\n                      label=\"Tax title\"\n                      size=\"small\"\n                      onChange={onChangeTax}\n                      value={tax.title}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={5} lg={5}>\n                    <TextField\n                      name=\"amount\"\n                      variant=\"outlined\"\n                      type=\"number\"\n                      fullWidth\n                      label=\"Tax(in %)\"\n                      size=\"small\"\n                      onChange={onChangeTax}\n                      value={tax.amount}\n                      disabled={!Boolean(tax.title)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={12} md={2} lg={2}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={!Boolean(tax.amount)}\n                      onClick={() => onAddTax()}\n                    >\n                      Add\n                    </Button>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <ul>\n                      {values.taxes.map((t, tIndex) => (\n                        <li key={tIndex}>\n                          <strong>{t.title}: </strong>\n                          {`${t.amount}%`}\n                          <IconButton size=\"small\" onClick={() => setTax(t)}>\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => onDeleteTax(t.title)}\n                          >\n                            <CancelIcon />\n                          </IconButton>\n                        </li>\n                      ))}\n                    </ul>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h4\">Propasal text</Typography>\n                    <DraftEditor\n                      editorState={propTextState}\n                      setEditorState={setPropTextState}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h4\">Customer note</Typography>\n                    <DraftEditor\n                      editorState={noteState}\n                      setEditorState={setNoteState}\n                    />\n                  </Grid>\n                </>\n              )}\n              {action === \"change\" && (\n                <Grid item xs={12}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel id=\"project-status\">Status</InputLabel>\n                    <Select\n                      labelId=\"project-status\"\n                      value={values.status}\n                      name=\"status\"\n                      onChange={onHandleChange}\n                    >\n                      <MenuItem value=\"\">---</MenuItem>\n                      {qStatuses.map((status, choiceIdx) => (\n                        <MenuItem value={status} key={choiceIdx}>\n                          {status.toUpperCase()}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n              {values.status && action === \"change\" && (\n                <Grid item xs={12}>\n                  <TextField\n                    className={classes.input}\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"comment\"\n                    label=\"Add comment\"\n                    value={values.comment}\n                    onChange={onHandleChange}\n                  />\n                </Grid>\n              )}\n              {action === \"edit\" && currentItem.items?.length > 0 && (\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={values.status !== \"Draft\"}\n                        onChange={onSetSeen}\n                      />\n                    }\n                    disabled={\n                      values.status !== \"Draft\" && values.status !== \"Pending\"\n                    }\n                    label=\"Send proposal\"\n                  />\n                </Grid>\n              )}\n            </Grid>\n            <CardActions>\n              {action === \"add\" ? (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={adding}\n                >\n                  Save\n                </Button>\n              ) : (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={updating}\n                >\n                  Update the proposal\n                </Button>\n              )}\n            </CardActions>\n          </form>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  ButtonGroup,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { EditRounded as EditIcon } from \"@material-ui/icons\";\nimport { projectOwnerCol } from \"./projectColumns\";\n\nconst hasExpired = (aDate) => {\n  const today = new Date();\n  const theDate = new Date(aDate);\n  return today.getTime() > theDate.getTime();\n};\nexport const quoteColumns = (onQuoteClick, user = {}) => [\n  {\n    content: (item) => (\n      <ListItem>\n        <ListItemText\n          primary={item.project?.name}\n          secondary={item.project?.type}\n        />\n      </ListItem>\n    ),\n    label: \"Project\",\n  },\n  ...projectOwnerCol(user),\n  { path: \"billingCycle\", label: \"Billing cycle\" },\n  {\n    content: (item) =>\n      item.amounts?.total ? (\n        <Typography>\n          $ {item.amounts?.total?.toLocaleString(\"en-US\")}\n        </Typography>\n      ) : (\n        \"-\"\n      ),\n    label: \"Amount\",\n  },\n  {\n    content: (item) => (\n      <Typography>\n        {item.status === \"Pending\" && hasExpired(item.expiryDate)\n          ? \"Dead\"\n          : item.status}\n      </Typography>\n    ),\n    label: \"Status\",\n  },\n  {\n    content: (item) => (\n      <ButtonGroup variant=\"outlined\" size=\"small\">\n        <Tooltip title=\"Manage items\">\n          <IconButton\n            aria-label=\"manage-items\"\n            color=\"secondary\"\n            onClick={() => onQuoteClick(item, \"items\")}\n            size=\"small\"\n          >\n            View\n          </IconButton>\n        </Tooltip>\n        {user.role !== \"Client\" &&\n          (item.status === \"Pending\" ||\n            item.status === \"Draft\" ||\n            hasExpired(item.expiryDate)) && (\n            <Tooltip title=\"Edit\">\n              <IconButton\n                aria-label=\"Edit\"\n                color=\"secondary\"\n                onClick={() => onQuoteClick(item, \"edit\")}\n              >\n                <EditIcon />\n                Edit\n              </IconButton>\n            </Tooltip>\n          )}\n      </ButtonGroup>\n    ),\n    label: \"Actions\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport HtmlParser from \"react-html-parser\";\nimport {\n  Button,\n  ButtonGroup,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  EditRounded as EditIcon,\n  Delete as DeleteIcon,\n  ThumbUp as ThumbUpIcon,\n  ThumbDown as ThumbDownIcon,\n  Save as SaveIcon,\n  Cancel as CancelIcon,\n} from \"@material-ui/icons\";\nimport { NoDisplayData } from \"components/NoDisplayData\";\nimport { updateQuote } from \"redux/actions/quote\";\nimport { INVOICE_ROUTE } from \"utils/constants\";\n\nconst initialItem = { name: \"\", quantity: \"\", price: \"\", total: \"\" };\nconst aggregateInit = { subtotal: 0, tax: 0, discount: 0, total: 0 };\n\nconst calculateAggregate = (items = [], { taxes, discount, isFixed }) => {\n  const grandTotal = Number(items.reduce((sum, item) => sum + item.total, 0));\n  const totDiscount = isFixed ? discount : (grandTotal * discount) / 100;\n  const subTotal = grandTotal - totDiscount;\n  const tax = taxes.reduce((a, b) => a + b.amount, 0);\n  const totTax = (subTotal * tax) / 100;\n  const aggreg = {\n    subtotal: grandTotal.toFixed(2),\n    tax: totTax.toFixed(2),\n    discount: totDiscount.toFixed(2),\n    total: (subTotal + totTax).toFixed(2),\n  };\n  // console.log(aggreg);\n  return aggreg;\n};\nconst hasExpired = (aDate) => {\n  const today = new Date();\n  const theDate = new Date(aDate);\n  return today.getTime() < theDate.getTime();\n};\nexport const QuoteItemsDialog = ({\n  open,\n  setOpen,\n  quote,\n  loading = false,\n  user = {},\n}) => {\n  const [item, setItem] = useState(initialItem);\n  const [aggregate, setAggregate] = useState(aggregateInit);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    if (quote && quote.items) {\n      setItems(quote?.items || []);\n      setAggregate(quote?.amounts || {});\n    }\n  }, [quote]);\n  const onHandleChange = ({ target: { name, value } }) => {\n    setItem((prev) => ({ ...prev, [name]: value }));\n  };\n  const onHandleCommentChange = ({ target: { value } }) => {\n    quote.comment = value;\n  };\n  const updateItems = (newItems) => {\n    const aggregs = calculateAggregate(newItems, quote);\n    setItems(newItems);\n    setAggregate(aggregs);\n    setItem(initialItem);\n    quote.items = newItems;\n    quote.amounts = aggregs;\n  };\n  const onAdd = () => {\n    const theItems = [...items];\n    const index = theItems.findIndex((i) => i.name === item.name);\n    item.total = item.price * item.quantity;\n    if (index < 0) {\n      theItems.push(item);\n    } else {\n      theItems[index].price = item.price;\n      theItems[index].quantity = item.quantity;\n      theItems[index].total = item.total;\n    }\n    updateItems(theItems);\n  };\n  const onRemove = (itemName) => {\n    const newItems = items.filter((i) => i.name !== itemName);\n    updateItems(newItems);\n  };\n  const onQuoteUpdate = (status = \"Draft\") => {\n    const { project, user, updatedAt, createdAt, _id, __v, ...rest } = quote;\n    rest.projectId = project._id;\n    rest.status = status;\n    updateQuote(rest, _id);\n  };\n  return (\n    <Dialog\n      open={open}\n      keepMounted\n      onClose={setOpen}\n      maxWidth=\"lg\"\n      fullWidth\n      aria-labelledby=\"quote-items-title\"\n      aria-describedby=\"quote-items-description\"\n    >\n      <DialogTitle id=\"quote-items-title\">Manage proposal items</DialogTitle>\n      <DialogContent>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={12} md={7} lg={7}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\">Propasal text</Typography>\n              <hr />\n              {HtmlParser(quote?.propasalText)}\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\">Customer note</Typography>\n              <hr />\n              {HtmlParser(quote?.customerNote)}\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={12} md={5} lg={5}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12} md={4} lg={4}>\n                <TextField\n                  name=\"name\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"Name\"\n                  onChange={onHandleChange}\n                  value={item.name}\n                  size=\"small\"\n                  disabled={\n                    user.role === \"Client\" ||\n                    (quote?.status !== \"Draft\" && quote?.status !== \"Pending\")\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={3} lg={3}>\n                <TextField\n                  name=\"price\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"Price\"\n                  type=\"number\"\n                  onChange={onHandleChange}\n                  value={item.price}\n                  size=\"small\"\n                  disabled={item.name === \"\"}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={3} lg={3}>\n                <TextField\n                  name=\"quantity\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"Quantity\"\n                  type=\"number\"\n                  onChange={onHandleChange}\n                  value={item.quantity}\n                  size=\"small\"\n                  disabled={item.price <= 0}\n                />\n              </Grid>\n              <Grid item xs={12} sm={12} md={2} lg={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => onAdd()}\n                  disabled={item.quantity <= 0}\n                >\n                  Add\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <TableContainer component={Paper}>\n                  {items.length > 0 ? (\n                    <Table aria-label=\"item-table\" size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell align=\"center\" colSpan={3}>\n                            Item details\n                          </TableCell>\n                          <TableCell align=\"right\">Item price</TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell>Name</TableCell>\n                          <TableCell align=\"right\">Qty.</TableCell>\n                          <TableCell align=\"right\">Price</TableCell>\n                          <TableCell align=\"right\">Total</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {items.map((item, itemIdx) => (\n                          <TableRow key={itemIdx}>\n                            <TableCell>\n                              {item.name}\n                              {user.role !== \"Client\" && (\n                                <>\n                                  <IconButton\n                                    size=\"small\"\n                                    onClick={() =>\n                                      setItem((prev) => ({ ...prev, ...item }))\n                                    }\n                                  >\n                                    <EditIcon />\n                                  </IconButton>\n                                  <IconButton\n                                    size=\"small\"\n                                    onClick={() => onRemove(item.name)}\n                                  >\n                                    <DeleteIcon />\n                                  </IconButton>\n                                </>\n                              )}\n                            </TableCell>\n                            <TableCell align=\"right\">{item.quantity}</TableCell>\n                            <TableCell align=\"right\">\n                              ${item.price?.toLocaleString(\"en-US\")}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                              ${item.total?.toLocaleString(\"en-US\")}\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                        <TableRow>\n                          <TableCell rowSpan={4} />\n                          <TableCell colSpan={2}>Subtotal</TableCell>\n                          <TableCell align=\"right\">\n                            ${aggregate.subtotal?.toLocaleString(\"en-US\")}\n                          </TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell>Taxes</TableCell>\n                          <TableCell align=\"right\">\n                            {quote?.taxes?.reduce(\n                              (a, b) => a + `${b.amount}%, `,\n                              \"\"\n                            )}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            ${aggregate.tax?.toLocaleString(\"en-US\")}\n                          </TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell>Discount</TableCell>\n                          <TableCell align=\"right\">\n                            {quote?.isFixed\n                              ? `${quote?.discount.toLocaleString(\"en-US\")}`\n                              : `${quote?.discount}%`}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            ${aggregate.discount?.toLocaleString(\"en-US\")}\n                          </TableCell>\n                        </TableRow>\n                        <TableRow>\n                          <TableCell colSpan={2}>Total</TableCell>\n                          <TableCell align=\"right\">\n                            ${aggregate.total?.toLocaleString(\"en-US\")}\n                          </TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  ) : (\n                    <NoDisplayData message=\"Not items added yet\" />\n                  )}\n                </TableContainer>\n              </Grid>\n              {user.role === \"Client\" && (\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    name=\"comment\"\n                    label=\"Add comment\"\n                    value={quote?.comment}\n                    disabled={quote?.status !== \"Pending\"}\n                    onChange={onHandleCommentChange}\n                  />\n                </Grid>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          component=\"a\"\n          aria-label=\"Print invoice\"\n          rel=\"noreferrer\"\n          href={`${INVOICE_ROUTE}/${quote?._id}?downloadType=proposal`}\n          target=\"_blank\"\n        >\n          Download PDF\n        </Button>\n        {(quote?.status === \"Pending\" ||\n          quote?.status === \"Draft\" ||\n          hasExpired(quote?.expiryDate)) && (\n          <ButtonGroup variant=\"outlined\" color=\"primary\">\n            {user.role !== \"Client\" ? (\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => onQuoteUpdate()}\n                disabled={loading}\n              >\n                <SaveIcon />\n                {loading ? \"Saving,...\" : \"Save\"}\n              </Button>\n            ) : (\n              quote?.status === \"Pending\" && (\n                <>\n                  <Button\n                    aria-label=\"Change status\"\n                    color=\"primary\"\n                    disabled={loading}\n                    onClick={() => onQuoteUpdate(\"Accepted\")}\n                  >\n                    <ThumbUpIcon />\n                    {loading ? \"Saving,...\" : \"Accept\"}\n                  </Button>\n                  <Button\n                    aria-label=\"Change status\"\n                    color=\"secondary\"\n                    disabled={loading}\n                    onClick={() => onQuoteUpdate(\"Declined\")}\n                  >\n                    <ThumbDownIcon />\n                    {loading ? \"Saving,...\" : \"Decline\"}\n                  </Button>\n                </>\n              )\n            )}\n          </ButtonGroup>\n        )}\n        <Button color=\"default\" variant=\"contained\" onClick={() => setOpen()}>\n          <CancelIcon />\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { store } from \"../store\";\nimport { UPDATE_INVOICE, GET_INVOICES } from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const getInvoices = () => {\n  store.dispatch({\n    type: GET_INVOICES,\n    payload: http.get(\"/invoice\"),\n  });\n};\nexport const updateInvoice = (invoiceInfo = {}, invoiceId = \"\") => {\n  const { quoteId, ...rest } = invoiceInfo;\n  store.dispatch({\n    type: UPDATE_INVOICE,\n    payload: http.patch(`/invoice/${invoiceId}`, rest),\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardActions,\n} from \"@material-ui/core\";\nimport { ComputerOutlined } from \"@material-ui/icons\";\nimport { Loading } from \"components/loading.component\";\nimport { useStyles } from \"styles/formStyles\";\nimport { updateInvoice } from \"redux/actions/invoice\";\n\nconst initialState = {\n  amount: \"\",\n  status: \"pending\",\n};\nconst invoiceStatuses = [\"pending\", \"paid\"];\nexport const InvoiceRegistration = ({ action = \"add\", currentItem = null }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState(initialState);\n  const inviceState = useSelector((state) => state);\n\n  const {\n    invoiceEdit: { loading: updating, loaded: updated },\n  } = inviceState;\n\n  useEffect(() => {\n    if (updated) {\n      setValues(initialState);\n    }\n  }, [updated]);\n  useEffect(() => {\n    if (currentItem) {\n      const { status, amount } = currentItem;\n      setValues({ amount, status });\n    }\n  }, [currentItem]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setValues({ ...values, [name]: value });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (action !== \"add\" && currentItem) {\n      updateInvoice(values, currentItem._id);\n    }\n  };\n  return (\n    <Card component=\"main\" className={classes.root}>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ComputerOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          Invoice\n        </Typography>\n        {updating && <Loading />}\n        {currentItem ? (\n          <form className={classes.form} onSubmit={submitHandler}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  className={classes.input}\n                  name=\"amount\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"Invoice amount\"\n                  onChange={onHandleChange}\n                  value={values.amount}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"invoice-status\">Status</InputLabel>\n                  <Select\n                    labelId=\"invoice-status\"\n                    value={values.status}\n                    name=\"status\"\n                    onChange={onHandleChange}\n                    disabled={action !== \"change\"}\n                  >\n                    <MenuItem value=\"\">---</MenuItem>\n                    {invoiceStatuses.map((status, choiceIdx) => (\n                      <MenuItem value={status} key={choiceIdx}>\n                        {status.toUpperCase()}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <CardActions>\n              {action === \"add\" ? (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                >\n                  Save\n                </Button>\n              ) : (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={updating}\n                >\n                  Change invoice status\n                </Button>\n              )}\n            </CardActions>\n          </form>\n        ) : (\n          <Typography variant=\"caption\">\n            You can change a status of an invoice\n          </Typography>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: \"#8967fc\",\n    height: 100,\n    width: 100,\n  },\n  input: {\n    fontSize: 16,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(2),\n    color: \"black\",\n    fontSize: 16,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#8967fc\",\n    borderRadius: 5,\n    float: \"left\",\n    maxWidth: \"100%\",\n    color: \"white\",\n    fontSize: 16,\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  completed: {\n    display: \"inline-block\",\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  root: {},\n  content: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    textAlgin: \"center\",\n  },\n  name: {\n    marginTop: theme.spacing(1),\n  },\n  removeBotton: {\n    width: \"100%\",\n  },\n}));\n","import React from \"react\";\nimport {\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport PhoneInput from \"material-ui-phone-number\";\n\nconst userRoles = [\"Client\", \"Manager\"];\nexport const CustomerInfo = ({ userInfo = {}, onHandleChange }) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <TextField\n          name=\"firstName\"\n          variant=\"outlined\"\n          fullWidth\n          id=\"firstName\"\n          label=\"First Name\"\n          onChange={onHandleChange}\n          value={userInfo.firstName}\n          autoFocus\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          name=\"lastName\"\n          variant=\"outlined\"\n          fullWidth\n          id=\"lastName\"\n          label=\"Last Name\"\n          onChange={onHandleChange}\n          value={userInfo.lastName}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"companyName\"\n          label=\"Company Name\"\n          autoComplete=\"Company Name\"\n          value={userInfo.companyName}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"companyUrl\"\n          label=\"Company URL\"\n          value={userInfo.companyUrl}\n          onChange={onHandleChange}\n        />\n      </Grid>\n    </Grid>\n  );\n};\nexport const ContactInfo = ({\n  userInfo = {},\n  onHandleChange,\n  onPhoneChange,\n}) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          value={userInfo.email}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <PhoneInput\n          variant=\"outlined\"\n          fullWidth\n          autoComplete=\"phone number\"\n          label=\"Phone Number\"\n          defaultCountry=\"rw\"\n          countryCodeEditable={false}\n          value={userInfo.phoneNumber}\n          onChange={onPhoneChange}\n        />\n      </Grid>\n    </Grid>\n  );\n};\nexport const LocationInfo = ({ userInfo = {}, onHandleChange }) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item lg={6} md={6} xl={6} xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"country\"\n          autoComplete=\"country\"\n          value={userInfo.country}\n          disabled\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item lg={6} md={6} xl={6} xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label=\"City\"\n          name=\"city\"\n          autoComplete=\"city\"\n          value={userInfo.city}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label=\"State\"\n          name=\"state\"\n          autoComplete=\"state\"\n          value={userInfo.state}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          label=\"Postal code\"\n          name=\"postalCode\"\n          value={userInfo.postalCode}\n          onChange={onHandleChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          name=\"address\"\n          label=\"Your Address\"\n          type=\"address\"\n          id=\"address\"\n          autoComplete=\"address\"\n          value={userInfo.address}\n          onChange={onHandleChange}\n        />\n      </Grid>\n    </Grid>\n  );\n};\nexport const RoleInfo = ({ userInfo = {}, onHandleChange }) => {\n  return (\n    <Grid container spacing={1}>\n      <FormControl variant=\"outlined\" fullWidth>\n        <InputLabel id=\"user-role\">Role</InputLabel>\n        <Select\n          labelId=\"user-role\"\n          value={userInfo.role}\n          name=\"role\"\n          onChange={onHandleChange}\n        >\n          <MenuItem value=\"\">---</MenuItem>\n          {userRoles.map((role, roleIdx) => (\n            <MenuItem value={role} key={roleIdx}>\n              {role.toUpperCase()}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Grid>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  Grid,\n  Typography,\n  Container,\n  Stepper,\n  Step,\n  StepButton,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport LoadingBox from \"components/loading.component\";\nimport { getUsersList, registerUser, updateUser } from \"redux/actions/user\";\nimport { useStyles } from \"./styles\";\nimport {\n  CustomerInfo,\n  ContactInfo,\n  LocationInfo,\n  RoleInfo,\n} from \"./RegistrationSteps\";\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  companyName: \"\",\n  companyUrl: \"\",\n  email: \"\",\n  phoneNumber: \"\",\n  address: \"\",\n  country: \"\",\n  state: \"\",\n  city: \"\",\n  postalCode: \"\",\n  role: \"client\",\n};\nconst steps = [\"User information\", \"Contact\", \"Location\", \"Permission\"];\n\nexport const Registration = ({ action = \"add\", currentItem = null }) => {\n  const classes = useStyles();\n  const [userInfo, setUserInfo] = useState(initialState);\n  const [activeStep, setActiveStep] = useState(0);\n  const [completed, setCompleted] = useState(new Set([0]));\n\n  const userRegisterState = useSelector((state) => state);\n  const {\n    register: { loading: registering, loaded: registered },\n    userEdit: { loading: updating, loaded: updated },\n  } = userRegisterState;\n\n  useEffect(() => {\n    if (registered || updated) {\n      getUsersList();\n      setUserInfo(initialState);\n      setActiveStep(0);\n      setCompleted(new Set([0]));\n    }\n  }, [registered, updated]);\n  useEffect(() => {\n    if (currentItem && action === \"edit\") {\n      setUserInfo(currentItem);\n      setActiveStep(0);\n      setCompleted(new Set([0]));\n    }\n  }, [currentItem, action]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setUserInfo({ ...userInfo, [name]: value });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (action === \"add\") {\n      registerUser(userInfo);\n    }\n    if (action === \"edit\") {\n      updateUser(userInfo);\n    }\n  };\n  const onPhoneChange = (value, country) => {\n    setUserInfo({ ...userInfo, phoneNumber: value, country: country.name });\n  };\n  const totalSteps = () => steps.length;\n\n  const completedSteps = () => completed.size;\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const isLastStep = () => activeStep === totalSteps() - 1;\n\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? steps.findIndex((step, i) => !completed.has(i))\n        : activeStep + 1;\n\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n    setCompleted((prevCompleted) => {\n      const newCompleted = new Set(prevCompleted);\n      newCompleted.add(step);\n      return newCompleted;\n    });\n  };\n\n  const isStepComplete = (step) => completed.has(step);\n  const getStepContent = (step) => {\n    const stepsContent = [\n      {\n        label: \"Step 1: Fill customer information\",\n        component: (\n          <CustomerInfo userInfo={userInfo} onHandleChange={onHandleChange} />\n        ),\n      },\n      {\n        label: \"Step 2: Customer contacts\",\n        component: (\n          <ContactInfo\n            userInfo={userInfo}\n            onHandleChange={onHandleChange}\n            onPhoneChange={onPhoneChange}\n          />\n        ),\n      },\n      {\n        label: \"Step 3: Location\",\n        component: (\n          <LocationInfo userInfo={userInfo} onHandleChange={onHandleChange} />\n        ),\n      },\n      {\n        label: \"Step 4: Customer role\",\n        component: (\n          <RoleInfo userInfo={userInfo} onHandleChange={onHandleChange} />\n        ),\n      },\n    ];\n    return stepsContent[step];\n  };\n  return (\n    <Container component=\"main\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          {currentItem ? `Update ${currentItem.firstName}` : \"REGISTER USER\"}\n        </Typography>\n        <Stepper alternativeLabel nonLinear activeStep={activeStep}>\n          {steps.map((label, index) => (\n            <Step key={index}>\n              <StepButton\n                onClick={handleStep(index)}\n                completed={isStepComplete(index)}\n              >\n                {label}\n              </StepButton>\n            </Step>\n          ))}\n        </Stepper>\n        {registering && <LoadingBox></LoadingBox>}\n        <form className={classes.form}>\n          <div>\n            <Grid className={classes.instructions}>\n              {getStepContent(activeStep).component}\n            </Grid>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                Next\n              </Button>\n              {action === \"add\" && (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={registering}\n                  onClick={submitHandler}\n                >\n                  Save\n                </Button>\n              )}\n              {action === \"edit\" && (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={updating}\n                  onClick={submitHandler}\n                >\n                  {currentItem ? `Update ${currentItem.firstName}` : \"Update\"}\n                </Button>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </Container>\n  );\n};\n","import React, { forwardRef, useState, useEffect } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Slide,\n  Typography,\n  Avatar,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyles } from \"./styles\";\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const CustomerModel = ({\n  open = false,\n  setOpen,\n  currentItem = null,\n}) => {\n  const classes = useStyles();\n  const [customer, setCustomer] = useState({});\n  useEffect(() => {\n    if (currentItem) {\n      setCustomer(currentItem);\n    }\n  }, [currentItem]);\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={setOpen}\n      aria-labelledby=\"customer-name\"\n      aria-describedby=\"customer-description\"\n      maxWidth=\"lg\"\n    >\n      <DialogTitle id=\"customer-name\">\n        {`Customer names: ${customer.firstName}`}\n      </DialogTitle>\n      <DialogContent>\n        <Avatar className={classes.avatar} src={customer.avatar} />\n        <Typography className={classes.name} gutterBottom variant=\"h3\">\n          {customer.firstName} {customer.lastName}({customer.role})\n        </Typography>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} md={8} lg={8}>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {customer.city}, {customer.state}, {customer.country}\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {customer.phoneNumber}\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {customer.email}\n            </Typography>\n            <Typography color=\"textSecondary\" variant=\"body2\">\n              Postal code: {customer.postalCode}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} lg={4}>\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              Company: {customer.companyName}\n              <br />\n              Company URL:{customer.companyUrl}\n              <br />\n            </Typography>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nexport const AlertConfirm = ({\n  open,\n  setOpen,\n  onConfirmYes,\n  loading = false,\n  message = \"\",\n}) => {\n  return (\n    <Dialog aria-labelledby=\"dialog-title\" onClose={setOpen} open={open}>\n      <DialogTitle id=\"dialog-title\">Confirm action</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{message}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={setOpen}>\n          Cancel\n        </Button>\n        <Button color=\"primary\" disabled={loading} onClick={onConfirmYes}>\n          {loading ? \"Loading,...\" : \"Yes\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Avatar,\n  Typography,\n  Divider,\n  Button,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  details: {\n    display: \"flex\",\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0,\n  },\n  progress: {\n    marginTop: theme.spacing(2),\n  },\n  uploadButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport const AccountProfile = ({ user }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <div className={classes.details}>\n          <div>\n            <Typography gutterBottom variant=\"h2\">\n              {user.firstName} {user.lastName}\n            </Typography>\n            <Typography\n              className={classes.locationText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {user.city}, {user.country}\n            </Typography>\n            <Typography\n              className={classes.dateText}\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n              {moment().format(\"hh:mm A\")} (\n              {Intl.DateTimeFormat().resolvedOptions().timeZone})\n            </Typography>\n          </div>\n          <Avatar className={classes.avatar} src={user.avatar} />\n        </div>\n        <div className={classes.progress}>\n          <Typography variant=\"body1\">My profile</Typography>\n          <LinearProgress value={100} variant=\"determinate\" />\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button className={classes.uploadButton} color=\"primary\" variant=\"text\">\n          Upload picture\n        </Button>\n        <Button variant=\"text\">Remove picture</Button>\n      </CardActions>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography,\n} from \"@material-ui/core\";\n\nexport const ConfirmUpdate = ({\n  open,\n  setOpen,\n  userInfo,\n  onChange,\n  onConfirm,\n}) => {\n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"md\"\n      onClose={setOpen}\n      aria-labelledby=\"confirm-dialog\"\n    >\n      <DialogTitle id=\"confirm-dialog\">Confirm update</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To update your information to this website, please enter your password\n          address here.\n        </DialogContentText>\n        <Typography color=\"error\">\n          AFTER UPDATING YOUR INFORMATION THE SYSTEM WILL LOG YOU OUT\n        </Typography>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          name=\"password\"\n          value={userInfo.password}\n          label=\"Enter your password\"\n          type=\"password\"\n          fullWidth\n          onChange={onChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={onConfirm} color=\"primary\">\n          Confirm update\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Grid,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport PhoneInput from \"material-ui-phone-number\";\nimport { ConfirmUpdate } from \"./ConfirmUpdate\";\nimport { updateProfile } from \"redux/actions/user\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  companyName: \"\",\n  companyUrl: \"\",\n  email: \"\",\n  phoneNumber: \"\",\n  address: \"\",\n  country: \"\",\n  state: \"\",\n  city: \"\",\n  password: \"\",\n  postalCode: \"\",\n  role: \"client\",\n};\nexport const AccountDetails = ({ user, loading = false }) => {\n  const [userInfo, setUserInfo] = useState(initialState);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (user.createdAt) {\n      setUserInfo(user);\n    }\n  });\n\n  const handleChange = ({ target: { name, value } }) => {\n    setUserInfo({ ...userInfo, [name]: value });\n  };\n  const onPhoneChange = (value, country) => {\n    setUserInfo({ ...userInfo, phoneNumber: value, country: country.name });\n  };\n\n  return (\n    <Card className={classes.root}>\n      <form autoComplete=\"off\" noValidate>\n        <ConfirmUpdate\n          open={openConfirm}\n          setOpen={() => setOpenConfirm(false)}\n          userInfo={userInfo}\n          onChange={handleChange}\n          onConfirm={() => {\n            updateProfile(userInfo);\n            setOpenConfirm(false);\n          }}\n        />\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\n        {/* <Typography variant=\"h6\" color=\"error\" align=\"right\">\n          You will be logged out after successful update profile\n        </Typography> */}\n        <Divider />\n        <CardContent>\n          <Grid container spacing={2}>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                margin=\"dense\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={userInfo.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                margin=\"dense\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={userInfo.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Company name\"\n                margin=\"dense\"\n                name=\"companyName\"\n                onChange={handleChange}\n                required\n                value={userInfo.companyName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Company URL\"\n                margin=\"dense\"\n                name=\"companyUrl\"\n                onChange={handleChange}\n                required\n                value={userInfo.companyUrl}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                margin=\"dense\"\n                name=\"email\"\n                onChange={handleChange}\n                disabled\n                value={userInfo.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <PhoneInput\n                variant=\"outlined\"\n                fullWidth\n                autoComplete=\"phone number\"\n                label=\"Phone Number\"\n                defaultCountry=\"rw\"\n                margin=\"dense\"\n                countryCodeEditable={false}\n                value={userInfo.phoneNumber}\n                onChange={onPhoneChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"address\"\n                label=\"Your Address\"\n                margin=\"dense\"\n                autoComplete=\"address\"\n                value={userInfo.address}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item md={3} xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"City\"\n                name=\"city\"\n                margin=\"dense\"\n                autoComplete=\"city\"\n                value={userInfo.city}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item md={3} xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"State\"\n                name=\"state\"\n                margin=\"dense\"\n                autoComplete=\"state\"\n                value={userInfo.state}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item md={3} xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Postal code\"\n                name=\"postalCode\"\n                margin=\"dense\"\n                value={userInfo.postalCode}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item md={3} xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                name=\"country\"\n                margin=\"dense\"\n                autoComplete=\"country\"\n                value={userInfo.country}\n                disabled\n                onChange={handleChange}\n                onClick={() => updateProfile(userInfo)}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={loading}\n            onClick={() => updateProfile(userInfo)}\n          >\n            {loading ? \"Updating\" : \"Save information\"}\n          </Button>\n        </CardActions>\n      </form>\n    </Card>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { AccountProfile } from \"./AccountProfile\";\nimport { AccountDetails } from \"./AccountDetails\";\nimport { useSelector } from \"react-redux\";\nimport { USER_INFO } from \"utils/constants\";\nimport { notifier } from \"utils/notifier\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport const UserProfile = () => {\n  const classes = useStyles();\n  const {\n    login: { userInfo },\n    profileEdit: { loading, loaded, userInfo: updatedInfo },\n  } = useSelector((state) => state);\n\n  useEffect(() => {\n    if (loaded) {\n      notifier.success(\"Your account has been successfully updated.\");\n      localStorage.setItem(USER_INFO, JSON.stringify(updatedInfo));\n      setTimeout(() => {\n        window.location.reload();\n      }, 3000);\n    }\n  }, [loaded, updatedInfo]);\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item lg={4} md={6} xl={4} xs={12}>\n          <AccountProfile user={userInfo.user} />\n        </Grid>\n        <Grid item lg={8} md={6} xl={8} xs={12}>\n          <AccountDetails user={userInfo.user} loading={loading} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography,\n} from \"@material-ui/core\";\n\nexport const EmailDialog = ({\n  open,\n  setOpen,\n  userInfo,\n  onChange,\n  onConfirm,\n  loading = false,\n}) => {\n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"md\"\n      onClose={setOpen}\n      aria-labelledby=\"confirm-dialog\"\n    >\n      <DialogTitle id=\"confirm-dialog\">Email Dialog</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To reset your password, please enter your email address here.\n        </DialogContentText>\n        <Typography color=\"secondary\">\n          WE WILL SEND YOU A LINK TO HELP YOU RESET YOUR PASSWORD\n        </Typography>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          name=\"email\"\n          value={userInfo.email}\n          label=\"Enter your email\"\n          type=\"email\"\n          fullWidth\n          onChange={onChange}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={onConfirm} color=\"primary\" disabled={loading}>\n          {loading ? \"Loading,...\" : \"Send the link\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LoadingBox from \"components/loading.component\";\nimport Logo from \"assets/ari_cube.png\";\nimport { sendLink, signin } from \"redux/actions/user\";\nimport { USER_INFO } from \"utils/constants\";\nimport { Link } from \"@material-ui/core\";\nimport { EmailDialog } from \"./EmailDialog\";\nimport { notifier } from \"utils/notifier\";\n\nconst initialState = { email: \"\", password: \"\" };\nexport const LoginPage = (props) => {\n  const [logins, setLogins] = useState(initialState);\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const redirect = props.location.search\n    ? props.location.search.split(\"=\")[1]\n    : \"dashboard/home\";\n  const signState = useSelector((state) => state);\n  const {\n    login: { userInfo, loading },\n    linkSend: { loaded, loading: sending },\n  } = signState;\n  useEffect(() => {\n    if (userInfo.user.fullName) {\n      localStorage.setItem(USER_INFO, JSON.stringify(userInfo));\n      window.location.href = redirect;\n      setLogins(initialState);\n    }\n  }, [props.history, redirect, userInfo]);\n  useEffect(() => {\n    if (loaded) {\n      setOpenDialog(false);\n      notifier.success(\"Email was sent to your mail box\");\n      setLogins(initialState);\n    }\n  }, [loaded]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setLogins({ ...logins, [name]: value });\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    signin(logins);\n  };\n  return (\n    <div className=\"login-page\">\n      <EmailDialog\n        open={openDialog}\n        setOpen={() => setOpenDialog(false)}\n        userInfo={logins}\n        onChange={onHandleChange}\n        onConfirm={() => sendLink(logins.email)}\n        loading={sending}\n      />\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <img src={Logo} alt=\"#\" className=\"logo\" />\n        </div>\n        <div>\n          <h1>Sign In to ARI CUBE</h1>\n        </div>\n        {loading && <LoadingBox></LoadingBox>}\n        <div>\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            required\n            onChange={onHandleChange}\n            value={logins.email}\n            className=\"login-input\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password\"\n            required\n            onChange={onHandleChange}\n            value={logins.password}\n            className=\"login-input\"\n          />\n        </div>\n        <div>\n          <button className=\"login-input btn-login primary\" type=\"submit\">\n            Login\n          </button>\n          <Link\n            component=\"button\"\n            variant=\"body2\"\n            onClick={() => setOpenDialog(true)}\n          >\n            Forget password?\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { IMAGES_PATH } from \"utils/constants\";\n\nexport const initialState = {\n  name: \"\",\n  customer: \"\",\n  project: \"\",\n  price: \"\",\n  status: \"\",\n  sku: \"\",\n  bgColor: \"#FAFAFA\",\n  description: \"\",\n  website: \"\",\n  image: \"\",\n};\nexport const productStatuses = [\"QA\", \"COMPLETED\"];\nexport const toOrbitProp = (type = \"cameraOrbit\", imageProp = {}) => {\n  const theImgOrbitProp = imageProp[type];\n  let orbitProp = theImgOrbitProp?.default;\n  if (!theImgOrbitProp?.useDefault) {\n    orbitProp = \"\";\n\n    const customAttr = theImgOrbitProp?.custom;\n\n    orbitProp += `${customAttr?.side}deg`;\n    orbitProp += ` ${customAttr?.ud}deg`;\n    orbitProp += ` ${customAttr?.side}%`;\n  }\n  return orbitProp;\n};\nexport const toAttributes = (imageProp) => {\n  const { skyboxImage, environmentImage } = imageProp;\n  let attribs = {};\n  if (imageProp.disableZoom) {\n    attribs[\"disable-zoom\"] = \"true\";\n  }\n  if (imageProp.autoRotate) {\n    attribs[\"auto-rotate\"] = \"true\";\n  }\n  if (skyboxImage?.active && skyboxImage?.image) {\n    attribs[\"skybox-image\"] = IMAGES_PATH + skyboxImage?.image;\n  }\n  if (environmentImage?.active && environmentImage?.image) {\n    attribs[\"environment-image\"] = IMAGES_PATH + environmentImage?.image;\n  }\n  return attribs;\n};\n","import { store } from \"../store\";\nimport {\n  ADD_ANALYTIC,\n  ADD_NEW_PRODUCT,\n  DELETE_ATTR_IMAGE,\n  GENERATE_QR,\n  GET_ANALYTICS,\n  GET_PRODUCT,\n  GET_PRODUCTS,\n  GET_PRODUCT_IMAGES,\n  RESET_UPLOAD_A_IMAGE,\n  UPDATE_ATTRIBUTES,\n  UPDATE_PRODUCT,\n  UPLOAD_ATTR_IMAGE,\n  UPLOAD_PRODUCT_IMAGES,\n} from \"./actionTypes\";\nimport { http } from \"utils/http\";\nimport { BASE_URL } from \"utils/constants\";\n\nconst PRODUCTS_URL = \"/products\";\nexport const uploadProductImages = (\n  files,\n  imageType = \"image3d\",\n  otherAttribs = {}\n) => {\n  const formData = new FormData();\n  for (const key of Object.keys(files)) {\n    formData.append(\"productFiles\", files[key]);\n  }\n  const { productId, imgType } = otherAttribs;\n  const config = {\n    headers: { \"Content-Type\": \"multipart/form-data\" },\n  };\n  let uploadUrl = `${PRODUCTS_URL}/upload/${imageType}`;\n  let actionType = UPLOAD_PRODUCT_IMAGES;\n  if (productId && imgType) {\n    uploadUrl += `?productId=${productId}&imgType=${imgType}`;\n  }\n  if (imageType === \"attr-image\") {\n    actionType = UPLOAD_ATTR_IMAGE;\n  }\n  store.dispatch({\n    type: actionType,\n    payload: http.post(uploadUrl, formData, config),\n  });\n};\nexport const addNewProduct = (productBody) => {\n  store.dispatch({\n    type: ADD_NEW_PRODUCT,\n    payload: http.post(PRODUCTS_URL, productBody),\n  });\n};\nexport const getProducts = ({ projectId }) => {\n  let params = \"?\";\n  if (projectId) {\n    params += `project=${projectId}`;\n  }\n  store.dispatch({\n    type: GET_PRODUCTS,\n    payload: http.get(PRODUCTS_URL + params),\n  });\n};\nexport const getProductImages = (productId = \"\") => {\n  store.dispatch({\n    type: GET_PRODUCT_IMAGES,\n    payload: http.get(`${PRODUCTS_URL}/files/${productId}`),\n  });\n};\nexport const editProduct = (productBody) => {\n  const { _id, __v, ...rest } = productBody;\n  // console.log(productBody);\n  store.dispatch({\n    type: UPDATE_PRODUCT,\n    payload: http.patch(`${PRODUCTS_URL}/${_id}`, rest),\n  });\n};\nexport const updateAttributes = (attributesBody = {}, productId = \"\") => {\n  store.dispatch({\n    type: UPDATE_ATTRIBUTES,\n    payload: http.patch(\n      `${PRODUCTS_URL}/attributes/${productId}`,\n      attributesBody\n    ),\n  });\n};\nexport const getProduct = (productId, addVisit = false) => {\n  const config = {};\n  const params = addVisit ? \"?analyticType=visit\" : \"\";\n  const ancOrigins = document.location?.ancestorOrigins || [];\n  if (ancOrigins.length > 0) {\n    config.headers = { \"ancestor-origin\": ancOrigins[0] };\n  }\n  store.dispatch({\n    type: GET_PRODUCT,\n    payload: http.get(`${PRODUCTS_URL}/${productId + params}`, config),\n  });\n};\nexport const uploadAttrImage = (formData, imageType = \"\", productId = {}) => {\n  const config = {\n    headers: { \"Content-Type\": \"multipart/form-data\" },\n  };\n  let uploadUrl = `${PRODUCTS_URL}/upload/${imageType}`;\n  uploadUrl += `/${productId}`;\n  store.dispatch({\n    type: UPLOAD_ATTR_IMAGE,\n    payload: http.post(uploadUrl, formData, config),\n  });\n};\nexport const resetUploadAttrImg = () => {\n  store.dispatch({\n    type: RESET_UPLOAD_A_IMAGE,\n  });\n};\nexport const deleteAttrImg = (productId = \"\", imgFile = \"\") => {\n  const url = `${PRODUCTS_URL}/${productId}/image/${imgFile}`;\n  store.dispatch({\n    type: DELETE_ATTR_IMAGE,\n    payload: http.delete(url),\n  });\n};\nexport const getProdAnalytics = (filters = {}) => {\n  let params = `?time=${filters.time || \"allTime\"}`;\n  if (filters.project) {\n    params += `&project=${filters.project}`;\n  }\n  store.dispatch({\n    type: GET_ANALYTICS,\n    payload: http.get(`${PRODUCTS_URL}/get/analytics${params}`),\n  });\n};\nexport const addNewAnalytic = (productId, type = \"visit\") => {\n  const params = `?analyticType=${type}`;\n  store.dispatch({\n    type: ADD_ANALYTIC,\n    payload: http.post(`${PRODUCTS_URL}/${productId}/analytics${params}`),\n  });\n};\nexport const generateQR = (productId) => {\n  const qrCodeData = {\n    data: `${BASE_URL}/products/${productId}`,\n    size: \"200x200\",\n    bgcolor: \"FFFFFF\",\n    color: \"9722FF\",\n  };\n  const params = Object.entries(qrCodeData)\n    .map((pair) => pair.map(encodeURIComponent).join(\"=\"))\n    .join(\"&\");\n  store.dispatch({\n    type: GENERATE_QR,\n    payload: `${process.env.REACT_APP_QR_URL}/create-qr-code/?${params}`,\n  });\n};\n","const orbits = { side: 50, ud: 50, io: 50 };\nexport const initialStates = {\n  disableZoom: false,\n  autoRotate: true,\n  autoRotateDelay: 3000,\n  backgroundColor: \"#ffffff\",\n  cameraOrbit: { default: \"0deg 75deg 105%\", custom: orbits, useDefault: true },\n  minCameraOrbit: {\n    default: \"Infinity 22.5deg auto\",\n    custom: orbits,\n    useDefault: true,\n  },\n  maxCameraOrbit: {\n    default: \"Infinity 157.5deg auto\",\n    custom: orbits,\n    useDefault: true,\n  },\n  cameraTarget: { default: \"auto auto auto\", custom: \"\", useDefault: true },\n  fieldOfView: 10,\n  exposure: 1,\n  shadowIntensity: 0,\n  shadowSoftness: 0,\n  alt: \"\",\n  scale: \"auto\",\n  placement: \"floor\",\n  metalness: 0,\n  roughness: 0,\n  arButtonImage: \"\",\n  skyboxImage: {\n    active: false,\n    image: \"\",\n  },\n  environmentImage: {\n    active: false,\n    image: \"\",\n  },\n  imageFiles: [],\n  hotspots: [],\n};\n","import React, { useEffect, useState } from \"react\";\nimport { toAttributes, toOrbitProp } from \"pages/Product/productConstants\";\nimport { IMAGES_3D_PATH, IMAGES_PATH } from \"utils/constants\";\nimport { addNewAnalytic, getProduct } from \"redux/actions/product\";\nimport { initialStates } from \"pages/Product/AttributeEditor/initialStates\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\n\nexport const ProductViewPage = ({\n  match,\n  styles = { width: \"100%\", height: \"100vh\" },\n  addVisit = true,\n}) => {\n  const [attributes, setAttributes] = useState(initialStates);\n  const appState = useSelector((state) => state);\n  const { productId } = match.params;\n  const {\n    productGet: { product, loaded, loading },\n    analyticAdd: { loading: adding },\n  } = appState;\n  useEffect(() => {\n    if (productId) {\n      getProduct(productId, addVisit);\n    }\n  }, [productId, addVisit]);\n  useEffect(() => {\n    if (loaded) {\n      const { src, ...otherProps } = product.image;\n      setAttributes(otherProps);\n    }\n  }, [loaded, product]);\n  useEffect(() => {\n    const modelViewer = document.querySelector(\"model-viewer#image3d-viewer\");\n    if (loaded && modelViewer) {\n      modelViewer.addEventListener(\"load\", (ev) => {\n        let material = modelViewer.model.materials[0];\n        material.pbrMetallicRoughness.setMetallicFactor(attributes.metalness);\n        material.pbrMetallicRoughness.setRoughnessFactor(attributes.roughness);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaded]);\n  if (loading) return <Loading />;\n  if (!Boolean(product.imagesSrc)) return null;\n  return (\n    <model-viewer\n      id=\"image3d-viewer\"\n      src={`${IMAGES_3D_PATH}/${product.imagesSrc?.glb}`}\n      ios-src={`${IMAGES_3D_PATH}/${product.imagesSrc?.usdz}`}\n      style={{\n        ...styles,\n        border: \"none\",\n        backgroundColor: attributes.backgroundColor,\n      }}\n      auto-rotate-delay={attributes.autoRotateDelay}\n      background-color={attributes.backgroundColor}\n      camera-orbit={toOrbitProp(\"cameraOrbit\", attributes)}\n      min-camera-orbit={toOrbitProp(\"minCameraOrbit\", attributes)}\n      max-camera-orbit={toOrbitProp(\"maxCameraOrbit\", attributes)}\n      camera-target={toOrbitProp(\"cameraTarget\", attributes)}\n      field-of-view={attributes.fieldOfView}\n      exposure={attributes.exposure}\n      shadow-intensity={attributes.shadowIntensity}\n      shadow-softness={attributes.shadowSoftness}\n      alt={attributes.alt}\n      ar-scale={attributes.scale}\n      placement={attributes.placement}\n      ar\n      ar-modes=\"webxr scene-viewer quick-look\"\n      camera-controls\n      autoplay\n      quick-look-browsers=\"safari chrome firefox\"\n      loading=\"eager\"\n      {...toAttributes(attributes)}\n    >\n      {Boolean(attributes.arButtonImage) && (\n        <input\n          type=\"image\"\n          src={IMAGES_PATH + attributes.arButtonImage}\n          id=\"ar-button\"\n          className=\"ar-button\"\n          slot=\"ar-button\"\n          alt={attributes.alt}\n          disabled={adding}\n          onClick={() => addNewAnalytic(product._id, \"click\")}\n        />\n      )}\n      {attributes.hotspots?.map((hs, hsIdx) => (\n        <button\n          key={hsIdx}\n          slot={`hotspot-${hsIdx}`}\n          className=\"hotspot\"\n          style={{ backgroundColor: hs.bgColor }}\n          data-position={hs.dataPosition}\n          data-normal={hs.dataNormal}\n        >\n          <div className=\"annotation\">{hs.dataText}</div>\n        </button>\n      ))}\n    </model-viewer>\n  );\n};\n","import React from \"react\";\nimport { ProductViewPage } from \"pages/ProductView\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\n\nexport const ViewProductDialog = ({ productId, open, setOpen }) => {\n  const match = { params: { productId } };\n  return (\n    <Dialog\n      open={open}\n      keepMounted\n      onClose={setOpen}\n      maxWidth=\"lg\"\n      fullWidth\n      aria-labelledby=\"view-product\"\n      aria-describedby=\"project-description\"\n    >\n      <DialogTitle id=\"view-product\">Asset View</DialogTitle>\n      <DialogContent>\n        <Grid container>\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <ProductViewPage\n              match={match}\n              styles={{ width: \"100%\", height: \"70vh\" }}\n              addVisit={false}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"secondary\" onClick={() => setOpen()}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport HtmlParser from \"react-html-parser\";\nimport { DraftEditor } from \"components/DraftEditor\";\nimport { EditorState } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  ListItemText,\n  ListItem,\n  List,\n  Typography,\n  IconButton,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  CardActions,\n  CardHeader,\n  TextField,\n  Divider,\n  Box,\n} from \"@material-ui/core\";\nimport {\n  CloudDownloadOutlined as DownloadIcon,\n  ExpandMore as ExpandMoreIcon,\n  ComputerOutlined,\n} from \"@material-ui/icons\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport TextInfoContent from \"@mui-treasury/components/content/textInfo\";\nimport { useBlogTextInfoContentStyles } from \"@mui-treasury/styles/textInfoContent/blog\";\nimport {\n  addNewLog,\n  getProjectDetails,\n  getProjectHistories,\n  getProjectProds,\n} from \"redux/actions/project\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\nimport { INVOICE_ROUTE } from \"utils/constants\";\nimport { projectTypes } from \"pages/Project/projectConstants\";\nimport { useStyles } from \"styles/formStyles\";\nimport { notifUser } from \"utils/helper\";\n// import { AddProductDialog } from \"./AddProductDialog\";\nimport { NoDisplayData } from \"components/NoDisplayData\";\nimport { ViewProductDialog } from \"./ViewProductDialog\";\n\nconst logInitialState = { title: \"\", description: \"\" };\n// const productInitialState = { product: \"\", website: \"\", projectId: \"\" };\nexport const ProjectDetailPage = ({ match }) => {\n  const classes = useStyles();\n\n  const [projectType, setProjectType] = useState({});\n  const [newLog, setNewLog] = useState(logInitialState);\n  // const [newProduct, setNewProduct] = useState(productInitialState);\n  const [currentProd, setCurrentProd] = useState({});\n  // const [openAddProduct, setOpenAddProduct] = useState(false);\n  const [openViewProduct, setOpenViewProduct] = useState(false);\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const { projectId } = match.params;\n\n  const appState = useSelector((state) => state);\n  const {\n    historiesGet: { loading, histories },\n    projectGet: { loading: projectFetching, loaded, project },\n    logAdd: { loading: adding, loaded: done },\n    login: {\n      userInfo: { user },\n    },\n    // projectAddProd: { loaded: productAdded },\n    projectProdsGet: { loading: ppFetching, projProds },\n  } = appState;\n  useEffect(() => {\n    if (projectId) {\n      // Fetch the project\n      getProjectDetails(projectId);\n      getProjectProds(projectId);\n    }\n  }, [projectId]);\n  useEffect(() => {\n    if (projectId && loaded) {\n      // setNewProduct((prev) => ({ ...prev, projectId }));\n      getProjectHistories(projectId);\n      const currentPType = projectTypes.find((e) => e.name === project.type);\n      setProjectType(currentPType);\n    }\n  }, [projectId, loaded, project.type]);\n  useEffect(() => {\n    if (done) {\n      getProjectHistories(projectId);\n      setNewLog(logInitialState);\n      setEditorState(EditorState.createEmpty());\n    }\n  }, [done, projectId]);\n  // useEffect(() => {\n  //   if (productAdded) {\n  //     setNewProduct({ ...productInitialState, projectId });\n  //     setOpenAddProduct(false);\n  //     getProjectProds(projectId);\n  //   }\n  // }, [productAdded, projectId]);\n  const { button: buttonStyles, ...contentStyles } =\n    useBlogTextInfoContentStyles();\n  const toDowloadUrl = (projectHistory = {}) => {\n    let url = projectHistory.invoice;\n    if (projectHistory.quote) {\n      url = `${projectHistory.quote}?downloadType=proposal`;\n    }\n    return url;\n  };\n  const onChangeInput = ({ target: { name, value } }) => {\n    setNewLog({ ...newLog, [name]: value });\n  };\n  return (\n    <Grid\n      container\n      spacing={2}\n      sx={{\n        py: 3,\n      }}\n    >\n      {/* <AddProductDialog\n        open={openAddProduct}\n        setOpen={() => setOpenAddProduct(false)}\n        values={newProduct}\n        projectId={projectId}\n        setValues={setNewProduct}\n      /> */}\n      <ViewProductDialog\n        open={openViewProduct}\n        setOpen={() => {\n          setCurrentProd({});\n          setOpenViewProduct(false);\n        }}\n        productId={currentProd._id}\n      />\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <Card component=\"main\" className={classes.root}>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <ComputerOutlined />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h4\">\n              {project.name}\n            </Typography>\n            <Typography variant=\"caption\">\n              {`Created by: ${project.user?.fullName}`}\n            </Typography>\n          </div>\n          <CardHeader title=\"3D assets added\" />\n          <Divider />\n          <CardContent>\n            {ppFetching && !projProds.length ? (\n              <Loading />\n            ) : projProds.length ? (\n              <List>\n                {projProds.map((prod, prodIdx) => (\n                  <ListItem divider key={prodIdx} component={Button}>\n                    <ListItemText\n                      primary={prod.product?.name}\n                      secondary={`added ${moment(prod.createdAt).fromNow()}`}\n                      onClick={() => {\n                        setOpenViewProduct(true);\n                        setCurrentProd(prod.product);\n                      }}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <NoDisplayData message=\"No asset added yet\" />\n            )}\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <Card\n          aria-labelledby=\"project-name\"\n          aria-describedby=\"project-description\"\n        >\n          <CardHeader\n            title={`Project name: ${project.name?.toUpperCase()}`}\n            // action={\n            //   <Button\n            //     variant=\"outlined\"\n            //     color=\"primary\"\n            //     onClick={() => setOpenAddProduct(true)}\n            //   >\n            //     Add a 3d asset\n            //   </Button>\n            // }\n          />\n          <CardContent>\n            {projectFetching ? (\n              <Loading />\n            ) : (\n              <>\n                <TextInfoContent\n                  classes={contentStyles}\n                  overline={\n                    project.user?.fullName &&\n                    `Created by: ${project.user.fullName}`\n                  }\n                />\n                <ListItemText\n                  primary={`Start: ${moment(project.startDate).format(\n                    \"YYYY-MM-DD\"\n                  )}, Due date: ${moment(project.dueDate).format(\n                    \"YYYY-MM-DD\"\n                  )}`}\n                />\n                <Typography variant=\"h4\">Project type:</Typography>\n                <ListItem>\n                  <ListItemText\n                    primary={projectType?.name}\n                    secondary={projectType?.description}\n                  />\n                </ListItem>\n                <Typography variant=\"h4\">\n                  Number of items: {project.nOfItems}\n                </Typography>\n                {HtmlParser(project.description)}\n                <Button className={buttonStyles}>\n                  Budget: ${project.budget?.toLocaleString(\"en-US\") || 0}\n                </Button>\n                {loading && !histories.length ? (\n                  <Loading />\n                ) : (\n                  <CardContent>\n                    <Card>\n                      <CardHeader title=\"Add custom log\" />\n                      <CardContent>\n                        <Grid item xs={12} sm={12} md={8} lg={8}>\n                          <Grid container spacing={2}>\n                            <TextField\n                              label=\"Log title\"\n                              placeholder=\"Type here\"\n                              name=\"title\"\n                              fullWidth\n                              value={newLog.title}\n                              onChange={onChangeInput}\n                            />\n                            <DraftEditor\n                              editorState={editorState}\n                              setEditorState={setEditorState}\n                            />\n                          </Grid>\n                          <Grid item xs={12} sm={12} md={2} lg={2}></Grid>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={adding}\n                            onClick={() => {\n                              newLog.description = stateToHTML(\n                                editorState.getCurrentContent()\n                              );\n                              addNewLog(projectId, newLog);\n                            }}\n                          >\n                            Send\n                          </Button>\n                        </Grid>\n                      </CardContent>\n                    </Card>\n                    <List>\n                      {histories.map((history, historyIdx) => (\n                        <Accordion key={historyIdx}>\n                          <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls={`panel${historyIdx}a-content`}\n                            id={`panel${historyIdx}a-header`}\n                          >\n                            <ListItem alignItems=\"flex-start\">\n                              <ListItemText\n                                primary={history.description}\n                                secondary={\n                                  <>\n                                    <Typography\n                                      component=\"span\"\n                                      variant=\"body2\"\n                                      className={classes.inline}\n                                      color=\"textPrimary\"\n                                    >\n                                      {notifUser(user, history)}\n                                    </Typography>\n                                    {` — on ${moment(history.createdAt).format(\n                                      \"MMM DD, YYYY @ HH:mm\"\n                                    )}`}\n                                  </>\n                                }\n                              />\n                              {(history.invoice || history.quote) && (\n                                <IconButton\n                                  edge=\"end\"\n                                  size=\"small\"\n                                  component=\"a\"\n                                  aria-label=\"Print invoice\"\n                                  rel=\"noreferrer\"\n                                  href={`${INVOICE_ROUTE}/${toDowloadUrl(\n                                    history\n                                  )}`}\n                                  target=\"_blank\"\n                                >\n                                  <DownloadIcon />\n                                </IconButton>\n                              )}\n                            </ListItem>\n                          </AccordionSummary>\n                          {Boolean(history.content) && (\n                            <AccordionDetails>\n                              <Box>{HtmlParser(history.content)}</Box>\n                            </AccordionDetails>\n                          )}\n                        </Accordion>\n                      ))}\n                    </List>\n                  </CardContent>\n                )}\n              </>\n            )}\n          </CardContent>\n          <CardActions>\n            <Button onClick={() => {}} color=\"primary\">\n              Close\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport NumberFormat from \"react-number-format\";\nimport { ComputerOutlined } from \"@material-ui/icons\";\nimport { useStyles } from \"styles/formStyles\";\nimport { initialState, productStatuses } from \"./productConstants\";\nimport { notifier } from \"utils/notifier\";\nimport {\n  addNewProduct,\n  editProduct,\n  getProducts,\n  uploadProductImages,\n} from \"redux/actions/product\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getUsersList } from \"redux/actions/user\";\nimport { getProjects } from \"redux/actions/project\";\n\nexport const ProductRegistration = ({\n  action = \"add\",\n  currentItem = null,\n  setAction,\n}) => {\n  const classes = useStyles();\n  const [values, setValues] = useState(initialState);\n  const [openDz, setOpenDz] = useState(false);\n  const appState = useSelector((state) => state);\n  const {\n    fileUpload: { loaded: uploaded, loading: uploading, filePath },\n    productAdd: { loading: adding, loaded: added },\n    productEdit: { loading: editing, loaded: edited },\n    userList: { users },\n    projectsGet: { projects },\n    login: {\n      userInfo: { user },\n    },\n  } = appState;\n  useEffect(() => {\n    getUsersList(\"Client\");\n  }, []);\n  useEffect(() => {\n    if (values.customer) {\n      getProjects({ clientId: values.customer });\n    }\n  }, [values.customer]);\n  const onHandleChange = (e) => {\n    e.preventDefault();\n    const {\n      target: { name, value },\n    } = e;\n    setValues((prev) => {\n      const newValues = { ...prev, [name]: value };\n      if (name === \"customer\") {\n        newValues.project = \"\";\n      }\n      return newValues;\n    });\n  };\n  useEffect(() => {\n    if (uploaded && filePath) {\n      setValues({ ...values, image: filePath });\n      setOpenDz(false);\n      notifier.success(\"Images uploaded\");\n    }\n    // eslint-disable-next-line\n  }, [uploaded, filePath]);\n  useEffect(() => {\n    if (added || edited) {\n      setAction(\"add\");\n      setValues(initialState);\n      getProducts({});\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [added, edited]);\n  useEffect(() => {\n    if (currentItem && action === \"edit\") {\n      const { createdAt, updatedAt, image, project, customer, ...rest } =\n        currentItem;\n      setValues({ ...rest, project: project?._id, customer: customer?._id });\n    }\n  }, [action, currentItem]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const user = users.find((u) => u._id === values.customer);\n    values.website = user?.companyUrl;\n    if (action === \"add\") {\n      addNewProduct(values);\n    }\n    if (action === \"edit\") {\n      delete values.itemNumber;\n      editProduct(values);\n    }\n  };\n  const onUploadImages = (files) => {\n    if (files.length !== 2) {\n      notifier.error(\"Sorry only two files are needed\");\n      return;\n    }\n\n    uploadProductImages(files);\n  };\n  return (\n    <Card component=\"main\" className={classes.root}>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <ComputerOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h4\">\n          {action === \"add\" && user.role === \"Client\"\n            ? \"3D Assets\"\n            : action === \"edit\"\n            ? `Update ${currentItem?.name.toUpperCase()}`\n            : \"Add a new 3D asset\"}\n        </Typography>\n        {((action === \"add\" && user.role !== \"Client\") ||\n          action === \"edit\") && (\n          <form className={classes.form} onSubmit={submitHandler}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  className={classes.input}\n                  name=\"name\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"3D Asset name\"\n                  onChange={onHandleChange}\n                  value={values.name}\n                />\n              </Grid>\n              {user.role !== \"Client\" && (\n                <>\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"customer-or-comp\">\n                        Customer or company\n                      </InputLabel>\n                      <Select\n                        labelId=\"customer-or-comp\"\n                        value={values.customer}\n                        name=\"customer\"\n                        onChange={onHandleChange}\n                        disabled={user.role === \"Client\"}\n                      >\n                        <MenuItem value=\"\">---</MenuItem>\n                        {users.map((user, userIdx) => (\n                          <MenuItem value={user._id} key={userIdx}>\n                            {user.fullName}, {user.companyName}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <InputLabel id=\"select-project\">\n                        Select project\n                      </InputLabel>\n                      <Select\n                        labelId=\"select-project\"\n                        value={values.project}\n                        name=\"project\"\n                        onChange={onHandleChange}\n                        disabled={\n                          !Boolean(values.customer) || user.role === \"Client\"\n                        }\n                      >\n                        <MenuItem value=\"\">---</MenuItem>\n                        {projects.map((project, projectIdx) => (\n                          <MenuItem value={project._id} key={projectIdx}>\n                            {project.name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </>\n              )}\n              <Grid item lg={6} md={6} sm={6} xs={12}>\n                <TextField\n                  className={classes.input}\n                  name=\"sku\"\n                  variant=\"outlined\"\n                  fullWidth\n                  label=\"SKU\"\n                  onChange={onHandleChange}\n                  value={values.sku}\n                />\n              </Grid>\n              <Grid item lg={6} md={6} sm={6} xs={12}>\n                <NumberFormat\n                  className={classes.input}\n                  value={values.price}\n                  onValueChange={({ floatValue }) =>\n                    setValues({ ...values, price: floatValue })\n                  }\n                  prefix=\"$\"\n                  thousandSeparator\n                  customInput={TextField}\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"Price(in USD)\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"product-status\">Status</InputLabel>\n                  <Select\n                    labelId=\"product-status\"\n                    value={values.status}\n                    name=\"status\"\n                    onChange={onHandleChange}\n                  >\n                    <MenuItem value=\"\">---</MenuItem>\n                    {productStatuses.map((status, choiceIdx) => (\n                      <MenuItem value={status} key={choiceIdx}>\n                        {status}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  className={classes.input}\n                  variant=\"outlined\"\n                  fullWidth\n                  name=\"description\"\n                  label=\"Description\"\n                  rows={3}\n                  rowsMax={4}\n                  value={values.description}\n                  onChange={onHandleChange}\n                />\n              </Grid>\n              {action === \"add\" && user.role !== \"Client\" && (\n                <Grid item xs={12}>\n                  <Button onClick={() => setOpenDz(true)}>\n                    Add the 3D asset files\n                  </Button>\n                  <DropzoneDialog\n                    open={openDz}\n                    onSave={onUploadImages}\n                    acceptedFiles={[\".gltf\", \".glb\", \".usdz\"]}\n                    showPreviews={true}\n                    maxFileSize={50000000}\n                    filesLimit={2}\n                    onClose={() => setOpenDz(false)}\n                    clearOnUnmount={uploaded}\n                    submitButtonText={\n                      uploading\n                        ? \"Uploading files, please wait,...\"\n                        : \"Save files\"\n                    }\n                  />\n                </Grid>\n              )}\n            </Grid>\n            <CardActions>\n              {action === \"add\" && user.role !== \"Client\" && (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={adding}\n                >\n                  Save\n                </Button>\n              )}\n              {action === \"edit\" && (\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                  disabled={editing}\n                >\n                  Update the asset\n                </Button>\n              )}\n            </CardActions>\n          </form>\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Typography,\n  ButtonGroup,\n  IconButton,\n  Tooltip,\n} from \"@material-ui/core\";\nimport {\n  EditRounded as EditIcon,\n  ViewComfy as ViewComfyIcon,\n} from \"@material-ui/icons\";\n\nexport const productColumns = (onProductClick, user) => [\n  {\n    content: (item) => (\n      <Button onClick={() => onProductClick(item, \"preview\")}>\n        {item.name}\n      </Button>\n    ),\n    label: \"Asset name\",\n  },\n  {\n    content: (item) => (\n      <Typography>\n        {item.customer.fullName}, {item.customer.companyName}\n      </Typography>\n    ),\n    label: \"Customer\",\n  },\n  {\n    content: (item) => <Typography>{item.project?.name}</Typography>,\n    label: \"Project\",\n  },\n  { path: \"sku\", label: \"SKU\" },\n  {\n    content: (item) => (\n      <Typography>\n        {item.price ? `$ ${item.price?.toLocaleString(\"en-US\")}` : \"\"}\n      </Typography>\n    ),\n    label: \"Price\",\n  },\n  { path: \"status\", label: \"Status\" },\n  {\n    content: (item) => (\n      <ButtonGroup variant=\"outlined\" size=\"small\">\n        <Tooltip title=\"View\">\n          <IconButton\n            aria-label=\"View\"\n            color=\"secondary\"\n            onClick={() => onProductClick(item, \"preview\")}\n          >\n            <ViewComfyIcon /> View\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <IconButton\n            aria-label=\"Edit\"\n            color=\"secondary\"\n            onClick={() => onProductClick(item, \"edit\")}\n          >\n            <EditIcon /> Edit\n          </IconButton>\n        </Tooltip>\n      </ButtonGroup>\n    ),\n    label: \"Actions\",\n  },\n];\n","import React from \"react\";\nimport { Button, ButtonGroup, Grid, Typography } from \"@material-ui/core\";\nimport { Add as AddIcon, Remove as RemoveIcon } from \"@material-ui/icons\";\n\nexport const ButtonCounter = ({\n  label,\n  attribute,\n  name,\n  values = {},\n  onSetValue,\n}) => {\n  return (\n    <Grid container>\n      <Grid item xs={6} sm={6} md={6}>\n        <Typography variant=\"h6\">{label}</Typography>\n      </Grid>\n      <Grid item xs={6} sm={6} md={6}>\n        <ButtonGroup size=\"small\">\n          <Button\n            aria-label=\"reduce\"\n            onClick={() => onSetValue(attribute, name, -1)}\n          >\n            <RemoveIcon fontSize=\"small\" />\n          </Button>\n          <Button>{values[name]}</Button>\n          <Button\n            aria-label=\"increase\"\n            onClick={() => onSetValue(attribute, name, 1)}\n          >\n            <AddIcon fontSize=\"small\" />\n          </Button>\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { ButtonCounter } from \"./ButtonCounter\";\nimport { Collapse } from \"@material-ui/core\";\n\nexport const CameraOrbit = ({\n  cardTitle,\n  onSetCounterValue,\n  onChangeCheckbox,\n  counterValues = {},\n  attribute,\n}) => {\n  return (\n    <Card>\n      <CardHeader title={cardTitle} />\n      <CardContent>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={counterValues.useDefault}\n              onChange={({ target }) => onChangeCheckbox(target, attribute)}\n            />\n          }\n          label=\"Default value\"\n        />\n        <Collapse in={!counterValues.useDefault}>\n          <ButtonCounter\n            label=\"Side to side\"\n            onSetValue={onSetCounterValue}\n            attribute={attribute}\n            values={counterValues.custom}\n            name=\"side\"\n          />\n          <ButtonCounter\n            label=\"Up and down\"\n            onSetValue={onSetCounterValue}\n            attribute={attribute}\n            values={counterValues.custom}\n            name=\"ud\"\n          />\n          <ButtonCounter\n            label=\"In and out\"\n            onSetValue={onSetCounterValue}\n            attribute={attribute}\n            values={counterValues.custom}\n            name=\"io\"\n          />\n        </Collapse>\n      </CardContent>\n    </Card>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n    // backgroundColor: theme.palette.background.paper,\n    // display: \"flex\",\n    height: 450,\n    overflowY: \"auto\",\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  editor: {\n    backgroundColor: theme.palette.background.default,\n    height: 500,\n  },\n}));\n","import React from \"react\";\nimport {\n  Card,\n  Collapse,\n  FormControlLabel,\n  Slider,\n  Switch,\n  TextField,\n  Typography,\n  CardContent,\n} from \"@material-ui/core\";\nimport ColorPicker from \"material-ui-color-picker\";\nimport { CameraOrbit } from \"components/CameraOrbit\";\nimport { useStyles } from \"../productStyles\";\n\nexport const Scene = ({\n  attributes = {},\n  attName,\n  onInputChange,\n  onSetCounterValue,\n  onSliderChange,\n  onChangeColor,\n  onChangeSwitch,\n  onChangeCheckbox,\n}) => {\n  const classes = useStyles();\n  return (\n    <Collapse in={attName === \"scene\"}>\n      <Card className={classes.root}>\n        <CardContent>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={attributes.disableZoom}\n                onChange={onChangeSwitch}\n                name=\"disableZoom\"\n                color=\"primary\"\n              />\n            }\n            label=\"Disable zoom\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={attributes.autoRotate}\n                onChange={onChangeSwitch}\n                name=\"autoRotate\"\n                color=\"primary\"\n              />\n            }\n            label=\"Auto rotate\"\n          />\n          <TextField\n            label=\"Auto rotate delay\"\n            type=\"number\"\n            name=\"autoRotateDelay\"\n            value={attributes.autoRotateDelay}\n            fullWidth\n            onChange={onInputChange}\n          />\n          <ColorPicker\n            defaultValue=\"Color\"\n            name=\"backgroundColor\"\n            floatingLabelText=\"Background color\"\n            onChange={onChangeColor}\n            fullWidth\n            value={attributes.backgroundColor}\n          />\n\n          <CameraOrbit\n            cardTitle=\"Camera orbit\"\n            onSetCounterValue={onSetCounterValue}\n            counterValues={attributes.cameraOrbit}\n            onChangeCheckbox={onChangeCheckbox}\n            attribute=\"cameraOrbit\"\n          />\n          <CameraOrbit\n            cardTitle=\"Min Camera orbit\"\n            onSetCounterValue={onSetCounterValue}\n            counterValues={attributes.minCameraOrbit}\n            onChangeCheckbox={onChangeCheckbox}\n            attribute=\"minCameraOrbit\"\n          />\n          <CameraOrbit\n            cardTitle=\"Max Camera orbit\"\n            onSetCounterValue={onSetCounterValue}\n            counterValues={attributes.maxCameraOrbit}\n            onChangeCheckbox={onChangeCheckbox}\n            attribute=\"maxCameraOrbit\"\n          />\n          <Typography variant=\"h4\" id=\"field-of-view\" gutterBottom>\n            Field of view\n          </Typography>\n          <Slider\n            aria-labelledby=\"field-of-view\"\n            min={0}\n            step={5}\n            max={50}\n            valueLabelDisplay=\"on\"\n            name=\"fieldOfView\"\n            value={attributes.fieldOfView}\n            onChange={(e, value) => onSliderChange(\"fieldOfView\", value)}\n          />\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Checkbox,\n  Collapse,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  MenuItem,\n  Select,\n  Slider,\n  Typography,\n} from \"@material-ui/core\";\nimport { IMAGES_PATH } from \"utils/constants\";\n\nexport const Lighting = ({\n  attName,\n  attributes,\n  onSliderChange,\n  onLightningCheck,\n  onLighteningSelect,\n}) => {\n  return (\n    <Collapse in={attName === \"lighting\"}>\n      <Card>\n        <CardHeader title=\"Image lighting\" />\n        <CardContent>\n          <Typography variant=\"h4\" id=\"exposure\" gutterBottom>\n            Exposure\n          </Typography>\n          <Slider\n            aria-labelledby=\"exposure\"\n            min={0}\n            step={0.01}\n            max={2}\n            valueLabelDisplay=\"on\"\n            name=\"exposure\"\n            value={attributes.exposure}\n            onChange={(e, value) => onSliderChange(\"exposure\", value)}\n          />\n          <Typography variant=\"h4\" id=\"shadow-intensity\" gutterBottom>\n            Shadow intensity\n          </Typography>\n          <Slider\n            aria-labelledby=\"shadow-intensity\"\n            min={0}\n            step={0.1}\n            max={1}\n            valueLabelDisplay=\"on\"\n            name=\"shadowIntensity\"\n            value={attributes.shadowIntensity}\n            onChange={(e, value) => onSliderChange(\"shadowIntensity\", value)}\n          />\n          <Typography variant=\"h4\" id=\"shadow-softness\" gutterBottom>\n            Shadow softness\n          </Typography>\n          <Slider\n            aria-labelledby=\"shadow-softness\"\n            min={0}\n            step={0.1}\n            max={1}\n            valueLabelDisplay=\"on\"\n            name=\"shadowSoftness\"\n            value={attributes.shadowSoftness}\n            onChange={(e, value) => onSliderChange(\"shadowSoftness\", value)}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={attributes.skyboxImage?.active}\n                onChange={({ target }) =>\n                  onLightningCheck(target, \"skyboxImage\")\n                }\n              />\n            }\n            label=\"Skybox image\"\n          />\n          {attributes.skyboxImage?.active && (\n            <FormControl fullWidth>\n              <InputLabel shrink id=\"select-skybox-image\">\n                Images\n              </InputLabel>\n              <Select\n                labelId=\"select-skybox-image\"\n                name=\"skyboxImage\"\n                value={attributes.skyboxImage?.image}\n                onChange={({ target }) =>\n                  onLighteningSelect(target, \"skyboxImage\")\n                }\n              >\n                {attributes.imageFiles\n                  ?.filter((img) => img.imageType === \"skybox\")\n                  .map((img, imgIdx) => (\n                    <MenuItem value={img.imageFileName} key={imgIdx}>\n                      {img.imageFileName}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          )}\n          {Boolean(attributes.skyboxImage?.image) && (\n            <CardMedia\n              image={IMAGES_PATH + attributes.skyboxImage?.image}\n              component=\"img\"\n              height=\"140\"\n            />\n          )}\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={attributes.environmentImage?.active}\n                onChange={({ target }) =>\n                  onLightningCheck(target, \"environmentImage\")\n                }\n              />\n            }\n            label=\"Environment image\"\n          />\n          {attributes.environmentImage?.active && (\n            <FormControl fullWidth>\n              <InputLabel shrink id=\"select-environment-image\">\n                Images\n              </InputLabel>\n              <Select\n                labelId=\"select-environment-image\"\n                name=\"environmentImage\"\n                value={attributes.environmentImage?.image}\n                onChange={({ target }) =>\n                  onLighteningSelect(target, \"environmentImage\")\n                }\n              >\n                {attributes.imageFiles\n                  ?.filter((img) => img.imageType === \"skybox\")\n                  .map((img, imgIdx) => (\n                    <MenuItem value={img.imageFileName} key={imgIdx}>\n                      {img.imageFileName}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          )}\n          {Boolean(attributes.environmentImage?.image) && (\n            <CardMedia\n              image={IMAGES_PATH + attributes.environmentImage?.image}\n              component=\"img\"\n              height=\"140\"\n            />\n          )}\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  Slider,\n  Typography,\n} from \"@material-ui/core\";\n\nexport const Material = ({ attName, attributes, onSliderChange }) => {\n  return (\n    <Collapse in={attName === \"material\"}>\n      <Card>\n        <CardHeader title=\"Image material\" />\n        <CardContent>\n          <Typography variant=\"h4\" id=\"metalness\" gutterBottom>\n            Matelness\n          </Typography>\n          <Slider\n            aria-labelledby=\"metalness\"\n            min={0}\n            step={0.01}\n            max={1}\n            valueLabelDisplay=\"on\"\n            name=\"metalness\"\n            value={attributes.metalness}\n            onChange={(e, value) => onSliderChange(\"metalness\", value)}\n          />\n          <Typography variant=\"h4\" id=\"roughness\" gutterBottom>\n            Roughness\n          </Typography>\n          <Slider\n            aria-labelledby=\"roughness\"\n            min={0}\n            step={0.01}\n            max={1}\n            valueLabelDisplay=\"on\"\n            name=\"roughness\"\n            value={attributes.roughness}\n            onChange={(e, value) => onSliderChange(\"roughness\", value)}\n          />\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  TextField,\n} from \"@material-ui/core\";\nimport ColorPicker from \"material-ui-color-picker\";\nimport { useStyles } from \"../productStyles\";\n\nexport const Annotation = ({\n  attName,\n  attributes = {},\n  setAttributes,\n  onInputChange,\n  modelViewRef = {},\n  currentHotspot,\n  setCurrentHotspot,\n}) => {\n  const classes = useStyles();\n  const imageViewer = modelViewRef.current;\n\n  const onAddHotspot = () => {\n    imageViewer.addEventListener(\"click\", onClickHotspot);\n  };\n  const onRemoveHotspot = () => {\n    if (currentHotspot) {\n      const currentAttributes = { ...attributes };\n      const theHotspots = currentAttributes.hotspots.filter(\n        (hs) => hs.hotspotNum !== currentHotspot.hotspotNum\n      );\n      // currentAttributes.hotspots = theHotspots;\n      // console.log(currentAttributes.hotspots);\n      setAttributes((prev) => ({ ...prev, hotspots: theHotspots }));\n      setCurrentHotspot(null);\n    }\n  };\n  const nextNumber = () => {\n    const hotspots = [...attributes.hotspots];\n    let theNum = 1;\n    if (hotspots.length > 0) {\n      const lastHotspot = hotspots.pop();\n      theNum = lastHotspot.hotspotNum + 1;\n    }\n    // console.log(\"theNum====>\", theNum);\n    return theNum;\n  };\n  const onClickHotspot = (event) => {\n    const rect = imageViewer.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const positionAndNormal = imageViewer.positionAndNormalFromPoint(x, y);\n    if (!positionAndNormal) {\n      return;\n    }\n    const { position, normal } = positionAndNormal;\n    const currentAttributes = { ...attributes };\n    const newHotspot = {\n      dataPosition: position.toString(),\n      dataNormal: normal.toString(),\n      dataText: \"\",\n      bgColor: \"black\",\n      hotspotNum: nextNumber(),\n      selected: \"selected\",\n    };\n    const theHotspots = currentAttributes.hotspots.map((hs) => ({\n      ...hs,\n      selected: \"\",\n    }));\n    theHotspots.push(newHotspot);\n    // currentAttributes.hotspots = [newHotspot, ...theHotspots];\n    // console.log(currentAttributes.hotspots);\n    setAttributes({ ...attributes, hotspots: theHotspots });\n    setCurrentHotspot(newHotspot);\n    // const newHotspot = document.createElement(\"button\");\n    // newHotspot.slot = `hotspot-${hotstpotCount}`;\n    // setHotspotCount((count) => count + 1);\n    // newHotspot.classList.add(\"hotspot\");\n    // newHotspot.dataset.position = position.toString();\n    // if (normal != null) {\n    //   newHotspot.dataset.normal = normal.toString();\n    // }\n    // imageViewer.appendChild(newHotspot);\n    // selectHotspot(newHotspot);\n    // newHotspot.addEventListener(\"click\", () => {\n    //   selectHotspot(newHotspot);\n    // });\n    // const div = document.createElement(\"div\");\n    // div.classList.add(\"annotation\");\n    // div.textContent =\n    //   \"data-position:\\r\\n\" + position + \"\\r\\ndata-normal:\\r\\n\" + normal;\n    // newHotspot.appendChild(div);\n    imageViewer.removeEventListener(\"click\", onClickHotspot);\n  };\n  const onChangeAnnotationText = ({ target }) => {\n    if (currentHotspot) {\n      const currentAttributes = { ...attributes };\n      const idx = currentAttributes.hotspots.findIndex(\n        (hs) => hs.dataNormal === currentHotspot.dataNormal\n      );\n      const theCurrentHotspot = { ...currentHotspot, dataText: target.value };\n      setCurrentHotspot(theCurrentHotspot);\n\n      currentAttributes.hotspots[idx].dataText = target.value;\n\n      setAttributes(currentAttributes);\n    }\n  };\n  const onChangeColor = (color) => {\n    if (currentHotspot) {\n      const currentAttributes = { ...attributes };\n      const idx = currentAttributes.hotspots.findIndex(\n        (hs) => hs.dataNormal === currentHotspot.dataNormal\n      );\n      const theCurrentHotspot = { ...currentHotspot, bgColor: color };\n      setCurrentHotspot(theCurrentHotspot);\n\n      currentAttributes.hotspots[idx].bgColor = color;\n\n      setAttributes(currentAttributes);\n    }\n  };\n  return (\n    <Collapse in={attName === \"annotation\"}>\n      <Card className={classes.root}>\n        <CardHeader title=\"Modal annotation\" />\n        <CardContent>\n          <TextField\n            label=\"Model alt text\"\n            style={{ margin: 8 }}\n            placeholder=\"Type here\"\n            fullWidth\n            margin=\"normal\"\n            name=\"alt\"\n            value={attributes.alt}\n            onChange={onInputChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <Button color=\"primary\" onClick={() => onAddHotspot()}>\n            Add new hotspot\n          </Button>\n          <TextField\n            label=\"Model alt text\"\n            style={{ margin: 8 }}\n            placeholder=\"Type annotation text\"\n            fullWidth\n            margin=\"normal\"\n            name=\"dataText\"\n            value={currentHotspot?.dataText}\n            disabled={!currentHotspot}\n            onChange={onChangeAnnotationText}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <ColorPicker\n            defaultValue=\"Click to select color\"\n            name=\"bgColor\"\n            floatingLabelText=\"Hotspot background color\"\n            onChange={onChangeColor}\n            disabled={!currentHotspot}\n            fullWidth\n            value={currentHotspot?.bgColor}\n          />\n          <Button\n            color=\"secondary\"\n            disabled={!currentHotspot}\n            onClick={() => onRemoveHotspot()}\n          >\n            Remove hotspot\n          </Button>\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Collapse,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { IMAGES_PATH } from \"utils/constants\";\n\nconst scales = [\"auto\", \"fixed\"];\nconst placements = [\"floor\", \"wall\"];\nexport const AREditor = ({ attName, attributes = {}, onInputChange }) => {\n  return (\n    <Collapse in={attName === \"ar\"}>\n      <Card>\n        <CardHeader title=\"AR Editor\" />\n        <CardContent>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"select-scale\">\n              AR scale\n            </InputLabel>\n            <Select\n              labelId=\"select-scale\"\n              name=\"scale\"\n              value={attributes.scale}\n              onChange={onInputChange}\n            >\n              {scales.map((scale, scaleIdx) => (\n                <MenuItem value={scale} key={scaleIdx}>\n                  {scale.toUpperCase()}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"select-placement\">\n              AR placement\n            </InputLabel>\n            <Select\n              labelId=\"select-placement\"\n              name=\"placement\"\n              value={attributes.placement}\n              onChange={onInputChange}\n            >\n              {placements.map((pl, plIdx) => (\n                <MenuItem value={pl} key={plIdx}>\n                  {pl.toUpperCase()}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          {attributes.imageFiles?.filter((img) => img.imageType === \"custom\")\n            .length > 0 && (\n            <FormControl fullWidth>\n              <InputLabel shrink id=\"select-ar-button-image\">\n                AR button image\n              </InputLabel>\n              <Select\n                labelId=\"select-ar-button-image\"\n                name=\"arButtonImage\"\n                value={attributes.arButtonImage}\n                onChange={onInputChange}\n              >\n                <MenuItem value=\"\">Empty</MenuItem>\n                {attributes.imageFiles\n                  ?.filter((img) => img.imageType === \"custom\")\n                  .map((img, imgIdx) => (\n                    <MenuItem value={img.imageFileName} key={imgIdx}>\n                      {img.imageFileName}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          )}\n          {Boolean(attributes.arButtonImage) && (\n            <CardMedia\n              image={IMAGES_PATH + attributes.arButtonImage}\n              component=\"img\"\n              height=\"40\"\n            />\n          )}\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  FormControl,\n  IconButton,\n  InputLabel,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport { useSelector } from \"react-redux\";\nimport {\n  deleteAttrImg,\n  resetUploadAttrImg,\n  uploadProductImages,\n} from \"redux/actions/product\";\n\nconst imageTypes = [\n  { id: \"skybox\", name: \"Skybox & environment\" },\n  { id: \"custom\", name: \"Custom AR\" },\n];\nexport const ManageImages = ({\n  attName,\n  attributes = {},\n  setAttributes,\n  productId,\n}) => {\n  const [imgType, setImgType] = useState(imageTypes[0].id);\n  const [open, setOpen] = useState(false);\n\n  const {\n    attrImg: { loading, loaded, fileName },\n    imgAttrDel: { loaded: deleted, deletedFile },\n  } = useSelector((state) => state);\n\n  useEffect(() => {\n    if (loaded) {\n      const newAttribs = { ...attributes };\n      newAttribs.imageFiles?.push({\n        imageType: imgType,\n        imageFileName: fileName,\n      });\n      setAttributes(newAttribs);\n      setOpen(false);\n      resetUploadAttrImg();\n    }\n    // eslint-disable-next-line\n  }, [loaded, fileName]);\n  useEffect(() => {\n    if (deleted) {\n      const newAttribs = { ...attributes };\n      const idx = newAttribs.imageFiles?.findIndex(\n        (img) => img.imageFileName === deletedFile\n      );\n      newAttribs.imageFiles?.splice(idx, 1);\n      setAttributes(newAttribs);\n    }\n    // eslint-disable-next-line\n  }, [deleted, deletedFile]);\n  const onSelectChange = ({ target }) => {\n    setImgType(target.value);\n  };\n  const onUploadImage = (files) => {\n    const attrs = { productId, imgType };\n    uploadProductImages(files, \"attr-image\", attrs);\n  };\n  return (\n    <Collapse in={attName === \"manage_images\"}>\n      <Card>\n        <CardHeader title=\"Manage images\" />\n        <CardContent>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"select-image-type\">\n              Image type\n            </InputLabel>\n            <Select\n              labelId=\"select-image-type\"\n              name=\"imageType\"\n              value={imgType}\n              onChange={onSelectChange}\n            >\n              {imageTypes.map((type, typeIdx) => (\n                <MenuItem value={type.id} key={typeIdx}>\n                  {type.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <Button\n            onClick={() => setOpen(true)}\n          >{`Upload ${imgType} image`}</Button>\n          <DropzoneDialog\n            acceptedFiles={[\"image/*\"]}\n            cancelButtonText={\"cancel\"}\n            submitButtonText={loading ? \"Uploading,...\" : \"Submit\"}\n            maxFileSize={5000000}\n            clearOnUnmount={loaded}\n            open={open}\n            onClose={() => setOpen(false)}\n            onSave={onUploadImage}\n            dialogTitle={`Upload ${imgType.toUpperCase()} image`}\n          />\n          <List dense>\n            {attributes?.imageFiles\n              ?.filter((img) => img.imageType === imgType)\n              .map((img, imgIdx) => (\n                <ListItem key={imgIdx}>\n                  <ListItemText primary={img.imageFileName} />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      onClick={() =>\n                        deleteAttrImg(productId, img.imageFileName)\n                      }\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n          </List>\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n} from \"@material-ui/core\";\n\nexport const Poster = ({ attName, modelViewRef }) => {\n  const onDownloadPoster = async () => {\n    const imageViewer = modelViewRef.current;\n    let posterUrl = \"\";\n    imageViewer.fieldOfView = \"auto\";\n    imageViewer.jumpCameraToGoal();\n    await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n    const blob = await imageViewer.toBlob({\n      mimeType: \"image/png\",\n      idealAspect: true,\n    });\n    posterUrl = URL.createObjectURL(blob);\n\n    const a = document.createElement(\"a\");\n    a.href = posterUrl;\n    a.download = \"poster.png\";\n    a.click();\n  };\n  return (\n    <Collapse in={attName === \"poster\"}>\n      <Card>\n        <CardHeader title=\"Poster\" />\n        <CardContent>\n          <Button color=\"primary\" onClick={onDownloadPoster}>\n            Download poster\n          </Button>\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\nimport { NoDisplayData } from \"components/NoDisplayData\";\n// import { getProjectProds } from \"redux/actions/project\";\n\nexport const AddedProducts = ({ attName, productId }) => {\n  const appState = useSelector((state) => state);\n\n  const {\n    projectProdsGet: { loading: ppFetching, projProds },\n  } = appState;\n  useEffect(() => {\n    // getProjectProds(productId, \"product\");\n  }, [productId]);\n  return (\n    <Collapse in={attName === \"added_projects\"}>\n      <Card>\n        <CardHeader title=\"Added projects\" />\n        <CardContent>\n          {ppFetching && !projProds.length ? (\n            <Loading />\n          ) : projProds.length ? (\n            <List>\n              {projProds.map((prod, prodIdx) => (\n                <ListItem divider key={prodIdx}>\n                  <ListItemText\n                    primary={prod.project?.name}\n                    secondary={prod.website}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <NoDisplayData message=\"No project added yet\" />\n          )}\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React from \"react\";\nimport { Card, CardContent, CardHeader, Collapse } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { generateQR } from \"redux/actions/product\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"components/loading.component\";\n\nexport const QRCodeViewer = ({ attName, productId }) => {\n  const {\n    qrGenerate: { loading, loaded, qr },\n  } = useSelector((state) => state);\n  useEffect(() => {\n    if (productId) {\n      generateQR(productId);\n    }\n  }, [productId]);\n\n  return (\n    <Collapse in={attName === \"qr-code\"}>\n      <Card>\n        <CardHeader title=\"Scan the QR code to preview 3D asset in your space\" />\n        <CardContent>\n          {loading && <Loading />}\n          {loaded && (\n            // <h1>Image loaded</h1>\n            <img src={qr} alt=\"QR code\" loading=\"lazy\" />\n          )}\n        </CardContent>\n      </Card>\n    </Collapse>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Button, ButtonGroup, Grid } from \"@material-ui/core\";\nimport { Scene } from \"./Scene\";\nimport { Lighting } from \"./Lighting\";\nimport { Material } from \"./Material\";\nimport { Annotation } from \"./Annotation\";\nimport { AREditor } from \"./AREditor\";\nimport { useStyles } from \"../productStyles\";\nimport { updateAttributes } from \"redux/actions/product\";\nimport { useSelector } from \"react-redux\";\nimport { ManageImages } from \"./ManageImages\";\nimport { initialStates } from \"./initialStates\";\nimport { Poster } from \"./Poster\";\nimport { AddedProducts } from \"./AddedProducts\";\nimport { QRCodeViewer } from \"./QRCodeViewer\";\n\nexport const AttributeEditor = ({\n  productId,\n  attributes,\n  setAttributes,\n  modelViewRef,\n  currentHotspot,\n  setCurrentHotspot,\n}) => {\n  const classes = useStyles();\n  const [activeBtn, setActiveBtn] = useState(\"scene\");\n\n  const appState = useSelector((state) => state);\n  const {\n    attrUpdate: { loading },\n    login: {\n      userInfo: { user },\n    },\n  } = appState;\n\n  const onSetCounterValue = (attribute, name, currentValue) => {\n    const customValues = { ...attributes[attribute].custom };\n    customValues[name] += currentValue;\n    attributes[attribute].custom = customValues;\n    setAttributes({ ...attributes, [attribute]: attributes[attribute] });\n  };\n  const onInputChange = ({ target: { name, value } }) => {\n    setAttributes({ ...attributes, [name]: value });\n  };\n  const onSliderChange = (name, newValue) => {\n    setAttributes({ ...attributes, [name]: newValue });\n  };\n  const onChangeColor = (color) => {\n    setAttributes({ ...attributes, backgroundColor: color });\n  };\n  const onChangeSwitch = ({ target: { name, checked } }) => {\n    setAttributes({ ...attributes, [name]: checked });\n  };\n  const onChangeCheckbox = ({ checked }, attribute) => {\n    const attributeValues = { ...attributes[attribute] };\n    attributeValues.useDefault = checked;\n    if (checked) {\n      attributeValues.custom = initialStates[attribute].custom;\n    }\n    setAttributes({ ...attributes, [attribute]: attributeValues });\n  };\n  const onLightningCheck = ({ checked }, attribute) => {\n    const attributeValues = { ...attributes[attribute] };\n    attributeValues.active = checked;\n    if (!checked) {\n      attributeValues.image = \"\";\n    }\n    setAttributes({ ...attributes, [attribute]: attributeValues });\n  };\n  const onLighteningSelect = ({ value }, attribute) => {\n    const attributeValues = { ...attributes[attribute] };\n    attributeValues.image = value;\n    setAttributes({ ...attributes, [attribute]: attributeValues });\n  };\n  return (\n    <Grid container spacing={2} className={classes.editor}>\n      <Grid item sm={4} md={4}>\n        <ButtonGroup\n          orientation=\"vertical\"\n          color=\"primary\"\n          aria-label=\"vertical contained primary button group\"\n          variant=\"text\"\n        >\n          <Button\n            color={activeBtn === \"scene\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"scene\")}\n          >\n            Scene\n          </Button>\n          <Button\n            color={activeBtn === \"lighting\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"lighting\")}\n          >\n            Lighting\n          </Button>\n          <Button\n            color={activeBtn === \"material\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"material\")}\n          >\n            Material\n          </Button>\n          <Button\n            color={activeBtn === \"annotation\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"annotation\")}\n          >\n            Annotations\n          </Button>\n          <Button\n            color={activeBtn === \"ar\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"ar\")}\n          >\n            AR\n          </Button>\n          <Button\n            color={activeBtn === \"poster\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"poster\")}\n          >\n            Poster\n          </Button>\n          {user.role !== \"Client\" && (\n            <Button\n              color={activeBtn === \"manage_images\" ? \"primary\" : \"secondary\"}\n              onClick={() => setActiveBtn(\"manage_images\")}\n            >\n              Manage images\n            </Button>\n          )}\n          {/* <Button\n            color={activeBtn === \"added_projects\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"added_projects\")}\n          >\n            Added projects\n          </Button> */}\n          <Button\n            color={activeBtn === \"qr-code\" ? \"primary\" : \"secondary\"}\n            onClick={() => setActiveBtn(\"qr-code\")}\n          >\n            View QR code\n          </Button>\n        </ButtonGroup>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          disabled={loading}\n          onClick={() => updateAttributes(attributes, productId)}\n        >\n          Save Changes\n        </Button>\n      </Grid>\n      <Grid item sm={8} md={8}>\n        <Scene\n          attName={activeBtn}\n          attributes={attributes}\n          onInputChange={onInputChange}\n          onSetCounterValue={onSetCounterValue}\n          onSliderChange={onSliderChange}\n          onChangeColor={onChangeColor}\n          onChangeSwitch={onChangeSwitch}\n          onChangeCheckbox={onChangeCheckbox}\n        />\n        <Lighting\n          attName={activeBtn}\n          attributes={attributes}\n          onSliderChange={onSliderChange}\n          onLightningCheck={onLightningCheck}\n          onLighteningSelect={onLighteningSelect}\n        />\n        <Material\n          attName={activeBtn}\n          attributes={attributes}\n          onSliderChange={onSliderChange}\n        />\n        <Annotation\n          attName={activeBtn}\n          attributes={attributes}\n          onInputChange={onInputChange}\n          modelViewRef={modelViewRef}\n          setAttributes={setAttributes}\n          currentHotspot={currentHotspot}\n          setCurrentHotspot={setCurrentHotspot}\n        />\n        <AREditor\n          attName={activeBtn}\n          attributes={attributes}\n          onInputChange={onInputChange}\n        />\n        <Poster attName={activeBtn} modelViewRef={modelViewRef} />\n        {user.role !== \"Client\" && (\n          <ManageImages\n            attName={activeBtn}\n            attributes={attributes}\n            setAttributes={setAttributes}\n            productId={productId}\n          />\n        )}\n        <AddedProducts attName={activeBtn} productId={productId} />\n        <QRCodeViewer attName={activeBtn} productId={productId} />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { getProduct } from \"redux/actions/product\";\nimport { useSelector } from \"react-redux\";\nimport { BASE_URL, IMAGES_3D_PATH, IMAGES_PATH } from \"utils/constants\";\nimport Loading from \"components/loading.component\";\nimport { AttributeEditor } from \"./AttributeEditor\";\nimport { toOrbitProp, toAttributes } from \"./productConstants\";\nimport { initialStates } from \"./AttributeEditor/initialStates\";\n\nexport const ImagePreview = ({ open, setOpen, productId = null }) => {\n  const modelViewRef = useRef(null);\n  const [attributes, setAttributes] = useState(initialStates);\n  const [currentHotspot, setCurrentHotspot] = useState(null);\n  const [copied, setCopied] = useState(false);\n  const appState = useSelector((state) => state);\n  const {\n    productGet: { loading, product, loaded },\n  } = appState;\n  useEffect(() => {\n    if (productId && open) {\n      getProduct(productId);\n    }\n  }, [productId, open]);\n  useEffect(() => {\n    if (loaded) {\n      const { src, ...otherProps } = product.image;\n      setAttributes((prevAttribs) => ({ prevAttribs, ...otherProps }));\n      setCopied(false);\n      setCurrentHotspot(null);\n    }\n  }, [loaded, product]);\n  useEffect(() => {\n    const modelViewer = document.querySelector(\"model-viewer#image3d-viewer\");\n    document.querySelectorAll(\"button.hotspot\").forEach((e) => e.remove());\n    if (attributes.hotspots.length && modelViewer) {\n      attributes.hotspots.forEach((el) => {\n        const newHotspot = document.createElement(\"button\");\n        newHotspot.slot = `hotspot-${el.hotspotNum}`;\n        newHotspot.classList.add(\"hotspot\");\n        newHotspot.style.backgroundColor = el.bgColor;\n        newHotspot.dataset.position = el.dataPosition;\n        newHotspot.dataset.normal = el.dataNormal;\n\n        modelViewer.appendChild(newHotspot);\n        newHotspot.addEventListener(\"click\", () => {\n          onSelectHotspot(el);\n        });\n        const div = document.createElement(\"div\");\n        div.classList.add(\"annotation\");\n        div.textContent = el.dataText;\n        newHotspot.appendChild(div);\n      });\n    }\n  }, [attributes.hotspots, currentHotspot]);\n  useEffect(() => {\n    const modelViewer = document.querySelector(\"model-viewer#image3d-viewer\");\n    if (loaded && modelViewer) {\n      modelViewer.addEventListener(\"load\", (ev) => {\n        let material = modelViewer.model.materials[0];\n        material.pbrMetallicRoughness.setMetallicFactor(attributes.metalness);\n        material.pbrMetallicRoughness.setRoughnessFactor(attributes.roughness);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaded]);\n\n  useEffect(() => {\n    const modelViewer = modelViewRef.current;\n    if (modelViewer && modelViewer.model) {\n      let material = modelViewer.model.materials[0];\n      material.pbrMetallicRoughness.setMetallicFactor(attributes.metalness);\n      material.pbrMetallicRoughness.setRoughnessFactor(attributes.roughness);\n    }\n  }, [attributes.metalness, attributes.roughness]);\n  const onSelectHotspot = (hotspot) => {\n    setCurrentHotspot(hotspot);\n  };\n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"lg\"\n      fullWidth\n      onClose={setOpen}\n      aria-labelledby=\"product-dialog-title\"\n      aria-describedby=\"product-dialog-description\"\n    >\n      <DialogTitle id=\"product-dialog-title\">{product?.name}</DialogTitle>\n      <DialogActions>\n        <CopyToClipboard\n          text={`${BASE_URL}/products/${productId}`}\n          onCopy={() => setCopied(true)}\n        >\n          <Button color={copied ? \"secondary\" : \"\"}>\n            {copied ? \"Copied!\" : \"Copy the embeded code\"}\n          </Button>\n        </CopyToClipboard>\n        <Button onClick={setOpen} color=\"primary\" autoFocus>\n          Exit\n        </Button>\n      </DialogActions>\n      <DialogContent id=\"product-dialog-description\">\n        {loading && !Boolean(product.image) ? (\n          <Loading />\n        ) : (\n          <Grid\n            container\n            spacing={2}\n            style={{ backgroundColor: attributes.backgroundColor }}\n          >\n            <Grid item md={5} lg={5}>\n              <AttributeEditor\n                productId={productId}\n                attributes={attributes}\n                setAttributes={setAttributes}\n                modelViewRef={modelViewRef}\n                currentHotspot={currentHotspot}\n                setCurrentHotspot={setCurrentHotspot}\n              />\n            </Grid>\n            <Grid item md={7} lg={7}>\n              <model-viewer\n                id=\"image3d-viewer\"\n                ref={modelViewRef}\n                src={`${IMAGES_3D_PATH}/${product.imagesSrc?.glb}`}\n                ios-src={`${IMAGES_3D_PATH}/${product.imagesSrc?.usdz}`}\n                style={{ width: \"100%\", height: \"70vh\", border: \"none\" }}\n                auto-rotate-delay={attributes.autoRotateDelay}\n                background-color={attributes.backgroundColor}\n                camera-orbit={toOrbitProp(\"cameraOrbit\", attributes)}\n                min-camera-orbit={toOrbitProp(\"minCameraOrbit\", attributes)}\n                max-camera-orbit={toOrbitProp(\"maxCameraOrbit\", attributes)}\n                camera-target={toOrbitProp(\"cameraTarget\", attributes)}\n                field-of-view={attributes.fieldOfView}\n                exposure={attributes.exposure}\n                shadow-intensity={attributes.shadowIntensity}\n                shadow-softness={attributes.shadowSoftness}\n                alt={attributes.alt}\n                ar-scale={attributes.scale}\n                placement={attributes.placement}\n                ar\n                camera-controls\n                autoplay\n                ar-modes=\"webxr scene-viewer quick-look\"\n                quick-look-browsers=\"safari chrome firefox\"\n                loading=\"eager\"\n                interaction-prompt=\"none\"\n                {...toAttributes(attributes)}\n              >\n                {Boolean(attributes.arButtonImage) && (\n                  <input\n                    type=\"image\"\n                    src={IMAGES_PATH + attributes.arButtonImage}\n                    className=\"ar-button\"\n                    style={{ width: \"50%\" }}\n                    slot=\"ar-button\"\n                    alt={attributes.alt}\n                  />\n                )}\n              </model-viewer>\n            </Grid>\n          </Grid>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={setOpen} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  CardHeader,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n} from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { productAnalyticsColumns } from \"components/columns\";\nimport { useSelector } from \"react-redux\";\nimport { getProjects } from \"redux/actions/project\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { getProdAnalytics } from \"redux/actions/product\";\nimport { ViewProductDialog } from \"pages/ProjectDetail/ViewProductDialog\";\n\nconst initialOptions = { project: \"\", time: \"allTime\" };\nconst btnFilters = [\n  { id: \"today\", name: \"Today\" },\n  { id: \"7days\", name: \"Last 7 days\" },\n  { id: \"30days\", name: \"Last 30 days\" },\n  { id: \"allTime\", name: \"All time\" },\n];\nexport const AnalyticsPage = () => {\n  const [options, setOptions] = useState(initialOptions);\n  const [tableTitle, setTableTitle] = useState(\"All\");\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [currentItem, setCurrentItem] = useState(null);\n\n  const appState = useSelector((state) => state);\n  const {\n    projectsGet: { projects },\n    analyticsGet: { analytics, loading },\n  } = appState;\n  useEffect(() => {\n    getProjects({});\n  }, []);\n  useEffect(() => {\n    let project = \"\";\n    if (Boolean(options.project)) {\n      project = `PROJECT: ${\n        projects.find((el) => el._id === options.project).name\n      }. `;\n    }\n    setTableTitle(\n      project + \"TIME: \" + btnFilters.find((el) => el.id === options.time).name\n    );\n    getProdAnalytics(options);\n    // eslint-disable-next-line\n  }, [options]);\n  useEffect(() => {\n    const { pageNumber, pageSize } = paginator;\n    const paginatedData = paginate(analytics, pageNumber, pageSize);\n    setPaginatedData(paginatedData);\n  }, [analytics, paginator]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onClickItem = (item) => {\n    setCurrentItem(item);\n  };\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"background.default\",\n        minHeight: \"100%\",\n        py: 3,\n      }}\n    >\n      <ViewProductDialog\n        open={Boolean(currentItem)}\n        setOpen={() => {\n          setCurrentItem(null);\n        }}\n        productId={currentItem?.product?._id}\n      />\n      <Grid container spacing={1}>\n        <Grid item lg={4} md={4} xl={6} xs={12}>\n          <Card>\n            <CardHeader title=\"Add filters\" />\n            <CardContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel id=\"select-project\">Select project</InputLabel>\n                    <Select\n                      labelId=\"select-project\"\n                      name=\"project\"\n                      value={options.project}\n                      onChange={({ target }) =>\n                        setOptions((prev) => ({\n                          ...prev,\n                          project: target.value,\n                        }))\n                      }\n                    >\n                      <MenuItem value=\"\">---</MenuItem>\n                      {projects.map((project, projectIdx) => (\n                        <MenuItem value={project._id} key={projectIdx}>\n                          {project.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <ButtonGroup\n                    variant=\"contained\"\n                    aria-label=\"outlined primary button group\"\n                  >\n                    {btnFilters.map(({ id, name }, btnIdx) => (\n                      <Button\n                        key={btnIdx}\n                        color={options.time === id ? \"primary\" : \"\"}\n                        onClick={() =>\n                          setOptions((prev) => ({ ...prev, time: id }))\n                        }\n                      >\n                        {name}\n                      </Button>\n                    ))}\n                  </ButtonGroup>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item lg={8} md={8} xl={6} xs={12}>\n          <Typography variant=\"h4\">Analytics page</Typography>\n          <CustomisedTable\n            tableTitle={`Filters: ${tableTitle}`}\n            columns={productAnalyticsColumns(onClickItem)}\n            loading={loading}\n            data={paginatedData}\n            withPagination\n            dataCount={analytics.length}\n            pageCount={Math.ceil(analytics.length / paginator.pageSize)}\n            handlePageChange={onPageChange}\n            page={paginator.pageNumber}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { DashboardLayout } from \"layouts/dashboard\";\nimport SetPassword from \"pages/set.password.page\";\nimport { ProjectPage } from \"pages/Project\";\nimport { QuotePage } from \"pages/Quote\";\nimport { InvoicePage } from \"pages/Invoice\";\nimport { SubscriptionPage } from \"pages/Subscription\";\nimport { store } from \"redux/store\";\nimport { CustomerPage } from \"pages/Customer\";\nimport { UserProfile } from \"./pages/UserProfile\";\nimport { LoginPage } from \"pages/Login\";\nimport { ProjectDetailPage } from \"pages/ProjectDetail\";\nimport { ProductPage } from \"pages/Product\";\nimport { ProductViewPage } from \"pages/ProductView\";\nimport { AnalyticsPage } from \"pages/Analytics\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    component: LoginPage,\n  },\n  {\n    path: \"/set-password/:token\",\n    exact: true,\n    component: SetPassword,\n  },\n  {\n    path: \"/set-password/:token/:action\",\n    exact: true,\n    component: SetPassword,\n  },\n  {\n    path: \"/products/:productId\",\n    exact: true,\n    component: ProductViewPage,\n  },\n  {\n    path: \"/dashboard\",\n    component: DashboardLayout,\n    routes: [\n      {\n        path: \"/dashboard/home\",\n        exact: true,\n        component: () => {\n          const {\n            login: {\n              userInfo: { user },\n            },\n          } = store.getState();\n          const route = user.role !== \"Client\" ? \"customers\" : \"projects\";\n          return <Redirect to={`/dashboard/${route}`} />;\n        },\n      },\n      {\n        path: \"/dashboard/customers\",\n        exact: true,\n        component: CustomerPage,\n      },\n      {\n        path: \"/dashboard/projects\",\n        exact: true,\n        component: ProjectPage,\n      },\n      {\n        path: \"/dashboard/products\",\n        exact: true,\n        component: ProductPage,\n      },\n      {\n        path: \"/dashboard/projects/:projectId\",\n        exact: true,\n        component: ProjectDetailPage,\n      },\n      {\n        path: \"/dashboard/quotes\",\n        exact: true,\n        component: QuotePage,\n      },\n      {\n        path: \"/dashboard/invoices\",\n        exact: true,\n        component: InvoicePage,\n      },\n      {\n        path: \"/dashboard/subscriptions\",\n        exact: true,\n        component: SubscriptionPage,\n      },\n      {\n        path: \"/dashboard/profile\",\n        exact: true,\n        component: UserProfile,\n      },\n      {\n        path: \"/dashboard/analytics\",\n        exact: true,\n        component: AnalyticsPage,\n      },\n    ],\n  },\n  {\n    component: () => <Redirect to=\"/dashboard/home\" />,\n  },\n];\nexport default routes;\n","import React, { useEffect, useState } from \"react\";\nimport { Registration } from \"./Registration\";\nimport { useSelector } from \"react-redux\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { deleteUser, getUsersList } from \"redux/actions/user\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { userColumns } from \"components/columns/userColumns\";\nimport { CustomerModel } from \"./CustomerModel\";\nimport { AlertConfirm } from \"components/AlertConfirm\";\n\nexport const CustomerPage = () => {\n  const [paginatedUsers, setPaginatedUsers] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate(10));\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n  const [openView, setOpenView] = useState(false);\n  const [confirmDel, setConfirmDel] = useState(false);\n\n  const userState = useSelector((state) => state);\n  const {\n    userList: { loading, users },\n    userRm: { loading: deleting, loaded: deleted },\n  } = userState;\n  useEffect(() => {\n    getUsersList();\n  }, []);\n  useEffect(() => {\n    if (deleted) {\n      getUsersList();\n      setConfirmDel(false);\n    }\n  }, [deleted]);\n  useEffect(() => {\n    if (users.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedUsers = paginate(users, pageNumber, pageSize);\n      setPaginatedUsers(paginatedUsers);\n    }\n  }, [users, paginator]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onUserClick = (user = {}, action) => {\n    setCurrentItem(user);\n    if (action === \"delete\") {\n      setConfirmDel(true);\n      return;\n    }\n    if (action === \"view\") {\n      setOpenView(true);\n      return;\n    }\n    setAction(action);\n  };\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"background.default\",\n        minHeight: \"100%\",\n        py: 3,\n      }}\n    >\n      <Grid container spacing={1}>\n        <CustomerModel\n          open={openView}\n          setOpen={() => setOpenView(false)}\n          currentItem={currentItem}\n        />\n        <AlertConfirm\n          loading={deleting}\n          message={\n            currentItem &&\n            `Are you sure you want to delete ${currentItem.firstName}`\n          }\n          onConfirmYes={() => deleteUser(currentItem._id)}\n          open={confirmDel}\n          setOpen={() => setConfirmDel(false)}\n        />\n        <Grid item lg={4} md={4} xl={6} xs={12}>\n          <Registration action={action} currentItem={currentItem} />\n        </Grid>\n        <Grid item lg={8} md={8} xl={6} xs={12}>\n          <CustomisedTable\n            tableTitle=\"All users\"\n            loading={loading}\n            columns={userColumns(onUserClick)}\n            dataCount={paginatedUsers.length}\n            data={paginatedUsers}\n            withPagination\n            pageCount={Math.ceil(users.length / paginator.pageSize)}\n            handlePageChange={onPageChange}\n            page={paginator.pageNumber}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { useSelector } from \"react-redux\";\nimport { ProjectRegistration } from \"./ProjectRegistration\";\nimport { getProjects } from \"redux/actions/project\";\nimport { projectColumns } from \"components/columns\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { ProjectModel } from \"./ProjectModal\";\n\nexport const ProjectPage = () => {\n  const projectState = useSelector((state) => state);\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n  const [openView, setOpenView] = useState(false);\n  const {\n    projectsGet: { loading, projects },\n    projectAdd: { loaded: added },\n    projectEdit: { loaded: updated },\n    login: {\n      userInfo: { user },\n    },\n  } = projectState;\n  useEffect(() => {\n    if (projects.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(projects, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [projects, paginator]);\n  useEffect(() => {\n    getProjects({});\n  }, []);\n  useEffect(() => {\n    if (added || updated) {\n      setCurrentItem(null);\n      setAction(\"add\");\n      getProjects({});\n    }\n  }, [added, updated]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onProjectClick = (project = {}, action) => {\n    setCurrentItem(project);\n    if (action === \"view\") {\n      setOpenView(true);\n      return;\n    }\n    setAction(action);\n  };\n  return (\n    <Grid container spacing={2} sx={{ py: 3 }}>\n      <ProjectModel\n        open={openView}\n        setOpen={() => setOpenView(false)}\n        currentItem={currentItem}\n      />\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <ProjectRegistration action={action} currentItem={currentItem} />\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"List of projects\"\n          columns={projectColumns(onProjectClick, user)}\n          loading={loading}\n          data={paginatedData}\n          withPagination\n          dataCount={projects.length}\n          pageCount={Math.ceil(projects.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { ProductRegistration } from \"./ProductRegistraction\";\nimport { useSelector } from \"react-redux\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { productColumns } from \"components/columns/productColumns\";\nimport { getProducts } from \"redux/actions/product\";\nimport { ImagePreview } from \"./ImagePreview\";\n\nexport const ProductPage = () => {\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [openImgView, setOpenImgView] = useState(false);\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n\n  const appState = useSelector((state) => state);\n  const {\n    productsGet: { loading: fetching, products },\n    login: {\n      userInfo: { user },\n    },\n  } = appState;\n\n  useEffect(() => {\n    if (products.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(products, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [products, paginator]);\n  useEffect(() => {\n    getProducts({});\n  }, []);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onProductClick = (product = {}, action) => {\n    setCurrentItem(product);\n    if (action === \"preview\") {\n      setOpenImgView(true);\n      return;\n    }\n    setAction(action);\n  };\n  return (\n    <Grid container spacing={2} sx={{ py: 3 }}>\n      <ImagePreview\n        open={openImgView}\n        setOpen={() => setOpenImgView(false)}\n        productId={currentItem?._id}\n      />\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <ProductRegistration\n          action={action}\n          currentItem={currentItem}\n          setAction={setAction}\n        />\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"List of 3D assets\"\n          columns={productColumns(onProductClick, user)}\n          loading={fetching}\n          data={paginatedData}\n          withPagination\n          dataCount={products.length}\n          pageCount={Math.ceil(products.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { QuoteRegistration } from \"./QuoteRegistration\";\nimport { useSelector } from \"react-redux\";\nimport { getQuotes } from \"redux/actions/quote\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\nimport { quoteColumns } from \"components/columns/quoteColumns\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { QuoteItemsDialog } from \"./QuoteItemsDialog\";\n\nexport const QuotePage = () => {\n  const quoteState = useSelector((state) => state);\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n\n  const {\n    quotesGet: { loading, quotes },\n    quoteAdd: { loaded: added },\n    quoteEdit: { loaded: updated, loading: updating },\n    login: { userInfo },\n  } = quoteState;\n  useEffect(() => {\n    if (quotes.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(quotes, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [quotes, paginator]);\n  useEffect(() => {\n    getQuotes();\n  }, []);\n  useEffect(() => {\n    if (added || updated) {\n      onReset();\n      getQuotes();\n    }\n  }, [added, updated]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onQuoteClick = (project = {}, action) => {\n    setCurrentItem(project);\n    setAction(action);\n  };\n  const onReset = () => {\n    setCurrentItem(null);\n    setAction(\"add\");\n  };\n  return (\n    <Grid\n      container\n      spacing={2}\n      sx={{\n        py: 3,\n      }}\n    >\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <QuoteRegistration action={action} currentItem={currentItem} />\n        <QuoteItemsDialog\n          open={action === \"items\"}\n          setOpen={() => onReset()}\n          quote={currentItem}\n          loading={updating}\n          user={userInfo.user}\n        />\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"All proposals\"\n          columns={quoteColumns(onQuoteClick, userInfo.user)}\n          loading={loading}\n          data={paginatedData}\n          withPagination\n          dataCount={quotes.length}\n          pageCount={Math.ceil(quotes.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { useSelector } from \"react-redux\";\nimport { InvoiceRegistration } from \"./InvoiceRegistration\";\nimport { getInvoices } from \"redux/actions/invoice\";\nimport { invoiceColumns } from \"components/columns\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\n\nexport const InvoicePage = () => {\n  const invoiceState = useSelector((state) => state);\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const [currentItem, setCurrentItem] = useState(null);\n  const [action, setAction] = useState(\"add\");\n  const {\n    invoicesGet: { loading, invoices },\n    invoiceEdit: { loaded: updated },\n    login: { userInfo },\n  } = invoiceState;\n  useEffect(() => {\n    if (invoices.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(invoices, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [invoices, paginator]);\n  useEffect(() => {\n    getInvoices({});\n  }, []);\n  useEffect(() => {\n    if (updated) {\n      setCurrentItem(null);\n      setAction(\"add\");\n      getInvoices({});\n    }\n  }, [updated]);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  const onInvoiceClick = (invoice = {}, action) => {\n    setCurrentItem(invoice);\n    setAction(action);\n  };\n  return (\n    <Grid\n      container\n      spacing={2}\n      sx={{\n        py: 3,\n      }}\n    >\n      <Grid item xs={12} sm={4} md={4} lg={4}>\n        <InvoiceRegistration action={action} currentItem={currentItem} />\n      </Grid>\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"List of invoices\"\n          columns={invoiceColumns(onInvoiceClick, userInfo.user)}\n          loading={loading}\n          data={paginatedData}\n          withPagination\n          dataCount={invoices.length}\n          pageCount={Math.ceil(invoices.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { CustomisedTable } from \"components/CustomizedTable\";\nimport { useSelector } from \"react-redux\";\nimport { getGetSubscriptions } from \"redux/actions/subscription\";\nimport { subscriptionColumns } from \"components/columns\";\nimport { initialPaginate, paginate } from \"utils/paginate\";\n\nexport const SubscriptionPage = () => {\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [paginator, setPaginator] = useState(initialPaginate());\n  const {\n    subscriptionsGet: { loading, subscriptions },\n    login: { userInfo },\n  } = useSelector((state) => state);\n  useEffect(() => {\n    if (subscriptions.length > 0) {\n      const { pageNumber, pageSize } = paginator;\n      const paginatedData = paginate(subscriptions, pageNumber, pageSize);\n      setPaginatedData(paginatedData);\n    }\n  }, [subscriptions, paginator]);\n  useEffect(() => {\n    getGetSubscriptions();\n  }, []);\n  const onPageChange = ({ selected }) => {\n    setPaginator({ ...paginator, pageNumber: selected + 1 });\n  };\n  return (\n    <Grid\n      container\n      spacing={2}\n      sx={{\n        py: 3,\n      }}\n    >\n      <Grid item xs={12} sm={8} md={8} lg={8}>\n        <CustomisedTable\n          tableTitle=\"List of subscriptions\"\n          columns={subscriptionColumns(userInfo.user)}\n          loading={loading}\n          data={paginatedData}\n          withPagination\n          dataCount={subscriptions.length}\n          pageCount={Math.ceil(subscriptions.length / paginator.pageSize)}\n          handlePageChange={onPageChange}\n          page={paginator.pageNumber}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n","import { store } from \"../store\";\nimport { GET_SUBSCRIPTIONS } from \"./actionTypes\";\nimport { http } from \"utils/http\";\n\nexport const getGetSubscriptions = () => {\n  store.dispatch({\n    type: GET_SUBSCRIPTIONS,\n    payload: http.get(\"/subscription\"),\n  });\n};\n","import React from \"react\";\nimport { Avatar, Button, Chip } from \"@material-ui/core\";\n\nexport const productAnalyticsColumns = (onItemClick) => [\n  {\n    content: (item) => (\n      <Button onClick={() => onItemClick(item, \"preview\")}>\n        {item.product?.name}\n      </Button>\n    ),\n    label: \"3D Assets\",\n  },\n  {\n    path: \"users\",\n    label: \"Users\",\n  },\n  {\n    path: \"clicks\",\n    label: \"AR Users\",\n  },\n  {\n    content: (item) => (\n      <>\n        <Chip\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          label=\"iOs\"\n          avatar={<Avatar>{item.iOs}</Avatar>}\n        />\n        <Chip\n          variant=\"outlined\"\n          color=\"secondary\"\n          size=\"small\"\n          label=\"Android\"\n          avatar={<Avatar>{item.androids}</Avatar>}\n        />\n        <Chip\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"Desktop\"\n          avatar={<Avatar>{item.desktops}</Avatar>}\n        />\n      </>\n    ),\n    label: \"Device by Users\",\n  },\n  {\n    content: (item) =>\n      item.countries.map((el, elIdx) => (\n        <Chip\n          variant=\"outlined\"\n          size=\"small\"\n          label={el.name}\n          avatar={<Avatar>{el.count}</Avatar>}\n          key={elIdx}\n        />\n      )),\n    label: \"Country by Users\",\n  },\n];\n","import { colors } from \"@material-ui/core\";\n\nconst white = \"#FFFFFF\";\nconst black = \"#000000\";\n\nconst palette = {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100],\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[\"A400\"],\n    light: colors.blue[\"A400\"],\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400],\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400],\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400],\n  },\n  purple: {\n    contrastText: white,\n    dark: \"#8967fc\",\n    main: \"#8967fc\",\n    light: \"#8967fc\",\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400],\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600],\n  },\n  background: {\n    default: \"#DFD9DF\",\n    paper: white,\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200],\n};\nexport default palette;\n","import palette from './palette';\n\nconst typography = {\n\th1: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '35px',\n\t\tletterSpacing: '-0.24px',\n\t\tlineHeight: '40px'\n\t},\n\th2: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '29px',\n\t\tletterSpacing: '-0.24px',\n\t\tlineHeight: '32px'\n\t},\n\th3: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '24px',\n\t\tletterSpacing: '-0.06px',\n\t\tlineHeight: '28px'\n\t},\n\th4: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '20px',\n\t\tletterSpacing: '-0.06px',\n\t\tlineHeight: '24px'\n\t},\n\th5: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '16px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '20px'\n\t},\n\th6: {\n\t\tcolor: palette.text.primary,\n\t\tfontWeight: 500,\n\t\tfontSize: '14px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '20px'\n\t},\n\tsubtitle1: {\n\t\tcolor: palette.text.primary,\n\t\tfontSize: '16px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '25px'\n\t},\n\tsubtitle2: {\n\t\tcolor: palette.text.secondary,\n\t\tfontWeight: 400,\n\t\tfontSize: '14px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '21px'\n\t},\n\tbody1: {\n\t\tcolor: palette.text.primary,\n\t\tfontSize: '14px',\n\t\tletterSpacing: '-0.05px',\n\t\tlineHeight: '21px'\n\t},\n\tbody2: {\n\t\tcolor: palette.text.secondary,\n\t\tfontSize: '12px',\n\t\tletterSpacing: '-0.04px',\n\t\tlineHeight: '18px'\n\t},\n\tbutton: {\n\t\tcolor: palette.text.primary,\n\t\tfontSize: '14px'\n\t},\n\tcaption: {\n\t\tcolor: palette.text.secondary,\n\t\tfontSize: '11px',\n\t\tletterSpacing: '0.33px',\n\t\tlineHeight: '13px'\n\t},\n\toverline: {\n\t\tcolor: palette.text.secondary,\n\t\tfontSize: '11px',\n\t\tfontWeight: 500,\n\t\tletterSpacing: '0.33px',\n\t\tlineHeight: '13px',\n\t\ttextTransform: 'uppercase'\n\t}\n};\nexport default typography;\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nconst overrides = {\n\tMuiButton,\n\tMuiIconButton,\n\tMuiPaper,\n\tMuiTableCell,\n\tMuiTableHead,\n\tMuiTypography\n};\nexport default overrides;\n","const MuiButton = {\n\tcontained: {\n\t\tboxShadow:\n\t\t\t'0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n\t\tbackgroundColor: '#FFFFFF'\n\t}\n};\nexport default MuiButton;\n","import palette from '../palette';\n\nconst MuiIconButton = {\n\troot: {\n\t\tcolor: palette.icon,\n\t\t'&:hover': {\n\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.03)'\n\t\t}\n\t}\n};\nexport default MuiIconButton;\n","const MuiPaper = {\n\televation1: {\n\t\tboxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n\t}\n};\nexport default MuiPaper;\n","import palette from '../palette';\nimport typography from '../typography';\n\nconst MuiTableCell = {\n\troot: {\n\t\t...typography.body1,\n\t\tborderBottom: `1px solid ${palette.divider}`\n\t}\n};\nexport default MuiTableCell;\n","import { colors } from '@material-ui/core';\n\nconst MuiTableHead = {\n\troot: {\n\t\tbackgroundColor: colors.grey[50]\n\t}\n};\nexport default MuiTableHead;\n","const MuiTypography = {\n\tgutterBottom: {\n\t\tmarginBottom: 8\n\t}\n};\nexport default MuiTypography;\n","import { createTheme } from \"@material-ui/core\";\n\nimport palette from \"./palette\";\nimport typography from \"./typography\";\nimport overrides from \"./overrides\";\n\nconst theme = createTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100,\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport { Provider as StoreProvider } from \"react-redux\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { renderRoutes } from \"react-router-config\";\nimport \"@google/model-viewer\";\nimport { store } from \"./redux/store\";\nimport routes from \"./routes\";\nimport theme from \"./theme\";\n\nfunction App() {\n  const history = createBrowserHistory();\n  return (\n    <ThemeProvider theme={theme}>\n      <StoreProvider store={store}>\n        <ToastContainer />\n        <Router history={history}>{renderRoutes(routes)}</Router>\n      </StoreProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}